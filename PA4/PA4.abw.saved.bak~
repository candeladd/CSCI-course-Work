<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="3316" xmlns:dc="http://purl.org/dc/elements/1.1/" styles="unlocked" fileformat="1.0" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.99.2" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:en-US; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.date_last_changed">Sun Nov  8 23:29:43 2015
</m>
<m key="abiword.generator">AbiWord</m>
<m key="dc.creator">user</m>
<m key="dc.date">Sun Nov  8 09:05:06 2015
</m>
<m key="dc.format">application/x-abiword</m>
</metadata>
<rdf>
</rdf>
<history version="9" edit-time="33136" last-saved="1447050583" uid="d7d12440-862a-11e5-828e-9707ab5a12c2">
<version id="3" started="1446998706" uid="0f0201e8-865b-11e5-828e-9707ab5a12c2" auto="0" top-xid="16"/>
<version id="9" started="1447043252" uid="43b0b704-86ab-11e5-9310-fb4007cea487" auto="0" top-xid="1748"/>
</history>
<styles>
<s type="P" name="Normal" followedby="Current Settings" props="font-weight:normal; font-family:Times New Roman; margin-top:0pt; color:000000; margin-left:0pt; text-align:left; widows:2; font-style:normal; text-indent:0in; text-position:normal; font-variant:normal; bgcolor:transparent; line-height:1.0; text-decoration:none; margin-bottom:0pt; margin-right:0pt; font-size:12pt; font-stretch:normal"/>
</styles>
<pagesize pagetype="A4" orientation="portrait" width="210.000000" height="297.000000" units="mm" page-scale="1.000000"/>
<section xid="9" props="column-line:off; columns:1; page-margin-header:0.5in; section-space-after:0.2500in; page-margin-footer:0.5in; dom-dir:ltr; text-align:left; section-max-column-height:0.0000in">
<p style="Normal" xid="10"><c></c>Andrew Candelaresi</p>
<p style="Normal" xid="3"><c></c><c></c></p>
<p style="Normal" xid="4" props="text-align:center"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">Linux Scheduler Analysis</c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="8" props="text-align:center"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="5" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">Abstract:</c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="6" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="7" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">For this paper we looked at three different Linux schedulers. These were the CFS scheduler, (used most by Linux OS) First in First Out Scheduler fifo, and Round Robin Scheduler RR.  To asses the ability of each of these schedulers we ran them each with three  different types of processes, one that was computation bound, one that was I/O bound and one that was a mix of both.  Then we ran each of these three different processes at three different sizes a small, medium and large versions.  We took the results of this process and analyzed the data looking at the amount of user time, cpu time, and the number of voluntary and involuntary context switches.  Based on these data points we developed some conclusions about which schedulers performed best under which conditions.</c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="23" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="24" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">INTRODUCTION:</c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="25" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">Coming up with efficient process scheduling policy is a task that computer engineers have been working on for years.  Many different strategies have been developed over the past decades.  A few of these scheduling policies have been shown through proof and analysis to be significantly better than others.  For this project we have taken three such processes and and analyzed their run time with three different types of processes using a large, medium and small amounts of simultaneous processes.  This way we can see not only how these Schedulers compare with different types of processes, but also how the algorithms used in each scheduler scale as the size of data .  </c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="26" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="704" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">METHOD:</c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="705" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="27" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">The different types of processes we used are co, I/O bound, and a mix of computation and I/O bound. We used a program called pi which uses a randomized process that generates the </c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1740" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">number pi.  This program is compute bound meaning that it uses up lots of CPU doing calculations.  The program generates a more accurate number the higher the iterations are, so we used 100,000 iterations.  This was our first developed benchmark. </c></p>
<p style="Normal" xid="1413" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1414" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"> We used a program that copies N bytes form a input file to an output file.  The process writes 102400 bytes in blocks of 1024.  </c></p>
<p style="Normal" xid="1415" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1416" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">For the mixed I/O and compute bound we combined the pi process with the write to disk process, using the same parameters of iterations and writes as a benchmark. </c></p>
<p style="Normal" xid="28" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="29" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">We then developed size benchmarks as follows.  The number of processes running simultaneously was considered to be small at 64, medium at 512 and large at 4096. </c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="702" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1412" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">A bash script was written that would run all the test process in succession.  We used a makefile to compile all off the test process.  We set the -wall and -wesxtra error checking flags set to check for any errors.   This bash script ran the pi process on each scheduler with the smallest simultaneous processes.  Then it ran the the I/O bound processes with the smallest simultaneous processes. it then proceeded to run the mixed I/O process with the smallest simultaneous processes.  Once  all the processes had finished running with the smallest number of simultaneous processes it the script runs the medium (512) simultaneous processes in for each process and scheduler in the same order.  Finally the largest (4096)  simultaneous processes are run on all schedulers with all processes.  </c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1417" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1418" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">RESULTS:</c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1745" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">We have provided graphs which show a clear side by side comparison of the important factors.  In the first graph these factors are the amount of user time and system time dedicated to each process by each scheduler across the small medium and large sets.  In the second graph we show a comparison of involuntary and voluntary context switches for each process across all sets.  </c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1746" props="text-align:left"><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1425" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><image dataid="95669e2e-8697-11e5-971a-9707ab5a12c2" title="" alt="" xid="1766" props="height:2.3785in; width:6.2632in"/><image dataid="cf581bf4-8696-11e5-971a-9707ab5a12c2" xid="1742" props="height:3.1111in; width:6.1181in"/></p>
<p style="Normal" xid="1426" props="font-family:Liberation Serif; font-size:12pt; lang:en-US; font-weight:normal; text-position:normal; text-align:left; font-style:normal; text-decoration:none"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><image dataid="ddc22218-86ad-11e5-9dc9-9707ab5a12c2" xid="3316" props="height:3.3979in; width:6.2632in"/></p>
<p style="Normal" xid="1428" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1421" props="font-family:Liberation Serif; font-size:12pt; lang:en-US; font-weight:normal; text-position:normal; text-align:left; font-style:normal; text-decoration:none"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1422" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">ANALYSIS:</c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1759" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">We were expecting to see that the CFS scheduler performs the best since it is the Scheduler that is currently used by the Linux OS and stands to reason that they would implement the best scheduling policy.  </c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1760" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1423" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">	From the results we can see important patterns that can help decide which scheduling algorithms perform best in each situation.  A few general analysis first, as the number of simultaneous process being run increased the time dedicated to user time in compute bound increased, the amount of system time in I/O bound increased and the amount of both system and user time increased for the mixed compute and I/O bound process.  This was a result that we were expecting and it was shown to be accurate.  So w</c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c props="font-family:Times New Roman; text-decoration:none; color:000000; font-size:12pt; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">e can determine that compute bound processes spend most of their time in the user space, while I/O bound processes spend most of their time in the kernel space.  </c></p>
<p style="Normal" xid="1761" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">	With context switching we expected that the RR would have the most voluntary context switches followed by CFS and FIFO.  For involuntary context switches we expected the FIFO to have the most followed by the CFS and the RR.  Our prediction was inaccurate in both cases.  The CFS has the most involuntary context switches for all size samples.  Looking at the I/O bound context switches the RR and FIFO had very low involuntary context switches compared to the amount of voluntary context switches.  For I/O bound medium size sample the RR and FIFO have 99.99% voluntary context switches.  For the same process and sample size the CFS scheduler had 31% involuntary context switches.  These finding surprised us since we expected to see higher involuntary context switches from the FIFO and lower involuntary context switches from the CFS.  Also as the amount of simultaneous processes increased the number of voluntary and involuntary context switches increased.  From this we can see that the more processes that are running in parallel the more context switches we can expect to see the CPU to make.  </c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1747" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1748" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">From this data we can start to understand which scheduler would be best suited for each different type of process and if this holds for all levels of concurrency.  Looking at time the Other scheduler (Linux_CFS) has the best performance by a very slight amount through all sizes of simultaneous runs.  The difference between the three schedulers at the medium size is smaller than at any other set size I would imagine this is do to the amount of involuntary context switching that occurs with the Other scheduler.  Considering I/O bound processes, again we see the CFS scheduler consuming the least amount of time.  They are all close to the same amount of time in the small size, the FIFO jumps up significantly at the medium size while the RR stays relatively close to the CFS.  At the large size the FIFO is triple the time of the CFS and the RR is double the CFS.  This significant gap as the size of the concurrent processes shows us that clearly the CFS is best suited for I/O bound processes.  Looking at the mixed I/O and compute bound process again we see a very large jump in the system time for all three processes, 70 for FIFO, 60 for RR, and 30 for CFS.</c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1767" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1768" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">	</c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1750" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">	</c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1756" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1757" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">CONCLUSION</c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c></p>
<p style="Normal" xid="1758" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US">It is quite clear from the data provided that in terms of time the CFS scheduler out performs both the FIFO and the RR.  We can develop a list of pro and cons from the data gathered in this report.  CFS, pros: efficient run time allocation, this scheduler has the lowest time spent in system and user time of all the schedulers.  Cons: high context switching and longer wait times.  FIFO Pros: lower wait time, lower involuntary context switches. Cons: much higher system times necessary to complete I/O bound and mixed processes.  RR, Pros: lowest wait times due to higher voluntary context switches.  Cons: larger amount of time spent on system time in I/O bound processes.  The use of CFS would be recommended for every day use of a computer.  The RR scheduler would be good in a situation where you wanted to run </c></p>
<p style="Normal" xid="1754" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1755" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1751" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1752" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="1753" props="text-align:left"><c props="font-family:Times New Roman; font-size:12pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-US"></c><c></c></p>
<p style="Normal" xid="736" props="text-align:left; dom-dir:ltr">APPENDIX A RAW DATA:<c></c></p>
<p style="Normal" xid="1411" props="text-align:left; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="1410" props="text-align:left; dom-dir:ltr"><c></c>Building code...</p>
<p style="Normal" xid="738" props="text-align:left; dom-dir:ltr">1024+0 records in<c></c></p>
<p style="Normal" xid="739" props="text-align:left; dom-dir:ltr">1024+0 records out<c></c></p>
<p style="Normal" xid="740" props="text-align:left; dom-dir:ltr">1048576 bytes (1.0 MB) copied, 0.310337 s, 3.4 MB/s<c></c></p>
<p style="Normal" xid="741" props="text-align:left; dom-dir:ltr">Starting test runs...<c></c></p>
<p style="Normal" xid="742" props="text-align:left; dom-dir:ltr">Calculating pi over 100000 iterations using SCHED_OTHER with 64 simultaneous processes...<c></c></p>
<p style="Normal" xid="743" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./pi-sched 100000 SCHED_OTHER 6"<c></c></p>
<p style="Normal" xid="744" props="text-align:left; dom-dir:ltr">	User time (seconds): 1.43<c></c></p>
<p style="Normal" xid="745" props="text-align:left; dom-dir:ltr">	System time (seconds): 0.24<c></c></p>
<p style="Normal" xid="746" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 96%<c></c></p>
<p style="Normal" xid="747" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:01.74<c></c></p>
<p style="Normal" xid="748" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="749" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="750" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="751" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="752" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4288<c></c></p>
<p style="Normal" xid="753" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="754" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="755" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 3022<c></c></p>
<p style="Normal" xid="756" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 130<c></c></p>
<p style="Normal" xid="757" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 434<c></c></p>
<p style="Normal" xid="758" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="759" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="760" props="text-align:left; dom-dir:ltr">	File system outputs: 520<c></c></p>
<p style="Normal" xid="761" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="762" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="763" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="764" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="765" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="766" props="text-align:left; dom-dir:ltr">Calculating pi over 100000 iterations using SCHED_FIFO with 64 simultaneous processes...<c></c></p>
<p style="Normal" xid="767" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./pi-sched 100000 SCHED_FIFO 6"<c></c></p>
<p style="Normal" xid="768" props="text-align:left; dom-dir:ltr">	User time (seconds): 1.69<c></c></p>
<p style="Normal" xid="769" props="text-align:left; dom-dir:ltr">	System time (seconds): 0.08<c></c></p>
<p style="Normal" xid="770" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 191%<c></c></p>
<p style="Normal" xid="771" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.93<c></c></p>
<p style="Normal" xid="772" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="773" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="774" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="775" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="776" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4300<c></c></p>
<p style="Normal" xid="777" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="778" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="779" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 3021<c></c></p>
<p style="Normal" xid="780" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 130<c></c></p>
<p style="Normal" xid="781" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 7<c></c></p>
<p style="Normal" xid="782" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="783" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="784" props="text-align:left; dom-dir:ltr">	File system outputs: 528<c></c></p>
<p style="Normal" xid="785" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="786" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="787" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="788" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="789" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="790" props="text-align:left; dom-dir:ltr">Calculating pi over 100000 iterations using SCHED_RR with 64 simultaneous processes...<c></c></p>
<p style="Normal" xid="791" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./pi-sched 100000 SCHED_RR 6"<c></c></p>
<p style="Normal" xid="792" props="text-align:left; dom-dir:ltr">	User time (seconds): 1.60<c></c></p>
<p style="Normal" xid="793" props="text-align:left; dom-dir:ltr">	System time (seconds): 0.06<c></c></p>
<p style="Normal" xid="794" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 181%<c></c></p>
<p style="Normal" xid="795" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.92<c></c></p>
<p style="Normal" xid="796" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="797" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="798" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="799" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="800" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4192<c></c></p>
<p style="Normal" xid="801" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="802" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="803" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 3081<c></c></p>
<p style="Normal" xid="804" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 130<c></c></p>
<p style="Normal" xid="805" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 21<c></c></p>
<p style="Normal" xid="806" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="807" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="808" props="text-align:left; dom-dir:ltr">	File system outputs: 520<c></c></p>
<p style="Normal" xid="809" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="810" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="811" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="812" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="813" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="814" props="text-align:left; dom-dir:ltr">Copying 102400 bytes in blocks of 1024 from rwinput to rwoutput<c></c></p>
<p style="Normal" xid="815" props="text-align:left; dom-dir:ltr">using SCHED_OTHER with 64 simultaneous processes...<c></c></p>
<p style="Normal" xid="816" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./rw 102400 1024 rwinput rwoutput 6 SCHED_OTHER"<c></c></p>
<p style="Normal" xid="817" props="text-align:left; dom-dir:ltr">	User time (seconds): 0.01<c></c></p>
<p style="Normal" xid="818" props="text-align:left; dom-dir:ltr">	System time (seconds): 3.09<c></c></p>
<p style="Normal" xid="819" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 46%<c></c></p>
<p style="Normal" xid="820" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:06.74<c></c></p>
<p style="Normal" xid="821" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="822" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="823" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="824" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="825" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4240<c></c></p>
<p style="Normal" xid="826" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="827" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="828" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 2795<c></c></p>
<p style="Normal" xid="829" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 12829<c></c></p>
<p style="Normal" xid="830" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 7399<c></c></p>
<p style="Normal" xid="831" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="832" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="833" props="text-align:left; dom-dir:ltr">	File system outputs: 207656<c></c></p>
<p style="Normal" xid="834" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="835" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="836" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="837" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="838" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="839" props="text-align:left; dom-dir:ltr">Copying 102400 bytes in blocks of 1024 from rwinput to rwoutput<c></c></p>
<p style="Normal" xid="840" props="text-align:left; dom-dir:ltr">using SCHED_FIFO with 64 simultaneous processes...<c></c></p>
<p style="Normal" xid="841" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./rw 102400 1024 rwinput rwoutput 6 SCHED_FIFO"<c></c></p>
<p style="Normal" xid="842" props="text-align:left; dom-dir:ltr">	User time (seconds): 0.07<c></c></p>
<p style="Normal" xid="843" props="text-align:left; dom-dir:ltr">	System time (seconds): 8.50<c></c></p>
<p style="Normal" xid="844" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 104%<c></c></p>
<p style="Normal" xid="845" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:08.24<c></c></p>
<p style="Normal" xid="846" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="847" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="848" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="849" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="850" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4276<c></c></p>
<p style="Normal" xid="851" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="852" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="853" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 2734<c></c></p>
<p style="Normal" xid="854" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 27220<c></c></p>
<p style="Normal" xid="855" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 11<c></c></p>
<p style="Normal" xid="856" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="857" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="858" props="text-align:left; dom-dir:ltr">	File system outputs: 393824<c></c></p>
<p style="Normal" xid="859" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="860" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="861" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="862" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="863" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="864" props="text-align:left; dom-dir:ltr">Copying 102400 bytes in blocks of 1024 from rwinput to rwoutput<c></c></p>
<p style="Normal" xid="865" props="text-align:left; dom-dir:ltr">using SCHED_RR with 64 simultaneous processes...<c></c></p>
<p style="Normal" xid="866" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./rw 102400 1024 rwinput rwoutput 6 SCHED_RR"<c></c></p>
<p style="Normal" xid="867" props="text-align:left; dom-dir:ltr">	User time (seconds): 0.05<c></c></p>
<p style="Normal" xid="868" props="text-align:left; dom-dir:ltr">	System time (seconds): 7.94<c></c></p>
<p style="Normal" xid="869" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 104%<c></c></p>
<p style="Normal" xid="870" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:07.65<c></c></p>
<p style="Normal" xid="871" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="872" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="873" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="874" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="875" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4268<c></c></p>
<p style="Normal" xid="876" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="877" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="878" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 2670<c></c></p>
<p style="Normal" xid="879" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 26321<c></c></p>
<p style="Normal" xid="880" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 22<c></c></p>
<p style="Normal" xid="881" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="882" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="883" props="text-align:left; dom-dir:ltr">	File system outputs: 327904<c></c></p>
<p style="Normal" xid="884" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="885" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="886" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="887" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="888" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="889" props="text-align:left; dom-dir:ltr">Running mixed CPU/IO bound process<c></c></p>
<p style="Normal" xid="890" props="text-align:left; dom-dir:ltr">using SCHED_OTHER with 64 simultaneous processes...<c></c></p>
<p style="Normal" xid="891" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./mixed 102400 1024 rwinput rwoutput 6 SCHED_OTHER 100000"<c></c></p>
<p style="Normal" xid="892" props="text-align:left; dom-dir:ltr">	User time (seconds): 1.26<c></c></p>
<p style="Normal" xid="893" props="text-align:left; dom-dir:ltr">	System time (seconds): 3.32<c></c></p>
<p style="Normal" xid="894" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 57%<c></c></p>
<p style="Normal" xid="895" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:07.92<c></c></p>
<p style="Normal" xid="896" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="897" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="898" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="899" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="900" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4216<c></c></p>
<p style="Normal" xid="901" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="902" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="903" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 3300<c></c></p>
<p style="Normal" xid="904" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 12659<c></c></p>
<p style="Normal" xid="905" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 8573<c></c></p>
<p style="Normal" xid="906" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="907" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="908" props="text-align:left; dom-dir:ltr">	File system outputs: 217512<c></c></p>
<p style="Normal" xid="909" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="910" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="911" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="912" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="913" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="914" props="text-align:left; dom-dir:ltr">Running mixed CPU/IO bound process<c></c></p>
<p style="Normal" xid="915" props="text-align:left; dom-dir:ltr">using SCHED_FIFO with 64 simultaneous processes...<c></c></p>
<p style="Normal" xid="916" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./mixed 102400 1024 rwinput rwoutput 6 SCHED_FIFO 100000"<c></c></p>
<p style="Normal" xid="917" props="text-align:left; dom-dir:ltr">	User time (seconds): 2.06<c></c></p>
<p style="Normal" xid="918" props="text-align:left; dom-dir:ltr">	System time (seconds): 8.17<c></c></p>
<p style="Normal" xid="919" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 115%<c></c></p>
<p style="Normal" xid="920" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:08.85<c></c></p>
<p style="Normal" xid="921" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="922" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="923" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="924" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="925" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4148<c></c></p>
<p style="Normal" xid="926" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="927" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="928" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 3300<c></c></p>
<p style="Normal" xid="929" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 27092<c></c></p>
<p style="Normal" xid="930" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 7<c></c></p>
<p style="Normal" xid="931" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="932" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="933" props="text-align:left; dom-dir:ltr">	File system outputs: 414408<c></c></p>
<p style="Normal" xid="934" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="935" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="936" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="937" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="938" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="939" props="text-align:left; dom-dir:ltr">Running mixed CPU/IO bound process<c></c></p>
<p style="Normal" xid="940" props="text-align:left; dom-dir:ltr">using SCHED_RR with 64 simultaneous processes...<c></c></p>
<p style="Normal" xid="941" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./mixed 102400 1024 rwinput rwoutput 6 SCHED_RR 100000"<c></c></p>
<p style="Normal" xid="942" props="text-align:left; dom-dir:ltr">	User time (seconds): 1.93<c></c></p>
<p style="Normal" xid="943" props="text-align:left; dom-dir:ltr">	System time (seconds): 7.93<c></c></p>
<p style="Normal" xid="944" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 113%<c></c></p>
<p style="Normal" xid="945" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:08.69<c></c></p>
<p style="Normal" xid="946" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="947" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="948" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="949" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="950" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4216<c></c></p>
<p style="Normal" xid="951" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="952" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="953" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 3175<c></c></p>
<p style="Normal" xid="954" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 27383<c></c></p>
<p style="Normal" xid="955" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 26<c></c></p>
<p style="Normal" xid="956" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="957" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="958" props="text-align:left; dom-dir:ltr">	File system outputs: 425760<c></c></p>
<p style="Normal" xid="959" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="960" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="961" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="962" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="963" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="964" props="text-align:left; dom-dir:ltr">Calculating pi over 100000 iterations using SCHED_OTHER with 512 simultaneous processes...<c></c></p>
<p style="Normal" xid="965" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./pi-sched 100000 SCHED_OTHER 9"<c></c></p>
<p style="Normal" xid="966" props="text-align:left; dom-dir:ltr">	User time (seconds): 12.38<c></c></p>
<p style="Normal" xid="967" props="text-align:left; dom-dir:ltr">	System time (seconds): 0.53<c></c></p>
<p style="Normal" xid="968" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 93%<c></c></p>
<p style="Normal" xid="969" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.79<c></c></p>
<p style="Normal" xid="970" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="971" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="972" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="973" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="974" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4276<c></c></p>
<p style="Normal" xid="975" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="976" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="977" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 21233<c></c></p>
<p style="Normal" xid="978" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 1257<c></c></p>
<p style="Normal" xid="979" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 4150<c></c></p>
<p style="Normal" xid="980" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="981" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="982" props="text-align:left; dom-dir:ltr">	File system outputs: 4200<c></c></p>
<p style="Normal" xid="983" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="984" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="985" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="986" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="987" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="988" props="text-align:left; dom-dir:ltr">Calculating pi over 100000 iterations using SCHED_FIFO with 512 simultaneous processes...<c></c></p>
<p style="Normal" xid="989" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./pi-sched 100000 SCHED_FIFO 9"<c></c></p>
<p style="Normal" xid="990" props="text-align:left; dom-dir:ltr">	User time (seconds): 10.05<c></c></p>
<p style="Normal" xid="991" props="text-align:left; dom-dir:ltr">	System time (seconds): 0.43<c></c></p>
<p style="Normal" xid="992" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 190%<c></c></p>
<p style="Normal" xid="993" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:05.50<c></c></p>
<p style="Normal" xid="994" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="995" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="996" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="997" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="998" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4216<c></c></p>
<p style="Normal" xid="999" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1000" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1001" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 19691<c></c></p>
<p style="Normal" xid="1002" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 1026<c></c></p>
<p style="Normal" xid="1003" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 13<c></c></p>
<p style="Normal" xid="1004" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1005" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1006" props="text-align:left; dom-dir:ltr">	File system outputs: 4184<c></c></p>
<p style="Normal" xid="1007" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1008" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1009" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1010" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1011" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1012" props="text-align:left; dom-dir:ltr">Calculating pi over 100000 iterations using SCHED_RR with 512 simultaneous processes...<c></c></p>
<p style="Normal" xid="1013" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./pi-sched 100000 SCHED_RR 9"<c></c></p>
<p style="Normal" xid="1014" props="text-align:left; dom-dir:ltr">	User time (seconds): 12.04<c></c></p>
<p style="Normal" xid="1015" props="text-align:left; dom-dir:ltr">	System time (seconds): 0.62<c></c></p>
<p style="Normal" xid="1016" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 190%<c></c></p>
<p style="Normal" xid="1017" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:06.65<c></c></p>
<p style="Normal" xid="1018" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1019" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1020" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1021" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1022" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4280<c></c></p>
<p style="Normal" xid="1023" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1024" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1025" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 21232<c></c></p>
<p style="Normal" xid="1026" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 1026<c></c></p>
<p style="Normal" xid="1027" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 15<c></c></p>
<p style="Normal" xid="1028" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1029" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1030" props="text-align:left; dom-dir:ltr">	File system outputs: 4200<c></c></p>
<p style="Normal" xid="1031" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1032" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1033" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1034" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1035" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1036" props="text-align:left; dom-dir:ltr">Copying 102400 bytes in blocks of 1024 from rwinput to rwoutput<c></c></p>
<p style="Normal" xid="1037" props="text-align:left; dom-dir:ltr">using SCHED_OTHER with 512 simultaneous processes...<c></c></p>
<p style="Normal" xid="1038" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./rw 102400 1024 rwinput rwoutput 9 SCHED_OTHER"<c></c></p>
<p style="Normal" xid="1039" props="text-align:left; dom-dir:ltr">	User time (seconds): 0.11<c></c></p>
<p style="Normal" xid="1040" props="text-align:left; dom-dir:ltr">	System time (seconds): 14.16<c></c></p>
<p style="Normal" xid="1041" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 45%<c></c></p>
<p style="Normal" xid="1042" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:31.07<c></c></p>
<p style="Normal" xid="1043" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1044" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1045" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1046" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1047" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4248<c></c></p>
<p style="Normal" xid="1048" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1049" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1050" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 17389<c></c></p>
<p style="Normal" xid="1051" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 106307<c></c></p>
<p style="Normal" xid="1052" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 38396<c></c></p>
<p style="Normal" xid="1053" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1054" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1055" props="text-align:left; dom-dir:ltr">	File system outputs: 857528<c></c></p>
<p style="Normal" xid="1056" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1057" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1058" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1059" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1060" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1061" props="text-align:left; dom-dir:ltr">Copying 102400 bytes in blocks of 1024 from rwinput to rwoutput<c></c></p>
<p style="Normal" xid="1062" props="text-align:left; dom-dir:ltr">using SCHED_FIFO with 512 simultaneous processes...<c></c></p>
<p style="Normal" xid="1063" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./rw 102400 1024 rwinput rwoutput 9 SCHED_FIFO"<c></c></p>
<p style="Normal" xid="1064" props="text-align:left; dom-dir:ltr">	User time (seconds): 0.31<c></c></p>
<p style="Normal" xid="1065" props="text-align:left; dom-dir:ltr">	System time (seconds): 55.77<c></c></p>
<p style="Normal" xid="1066" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 125%<c></c></p>
<p style="Normal" xid="1067" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:44.56<c></c></p>
<p style="Normal" xid="1068" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1069" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1070" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1071" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1072" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4216<c></c></p>
<p style="Normal" xid="1073" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1074" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1075" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 18925<c></c></p>
<p style="Normal" xid="1076" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 219599<c></c></p>
<p style="Normal" xid="1077" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 21<c></c></p>
<p style="Normal" xid="1078" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1079" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1080" props="text-align:left; dom-dir:ltr">	File system outputs: 2509112<c></c></p>
<p style="Normal" xid="1081" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1082" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1083" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1084" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1085" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1086" props="text-align:left; dom-dir:ltr">Copying 102400 bytes in blocks of 1024 from rwinput to rwoutput<c></c></p>
<p style="Normal" xid="1087" props="text-align:left; dom-dir:ltr">using SCHED_RR with 512 simultaneous processes...<c></c></p>
<p style="Normal" xid="1088" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./rw 102400 1024 rwinput rwoutput 9 SCHED_RR"<c></c></p>
<p style="Normal" xid="1089" props="text-align:left; dom-dir:ltr">	User time (seconds): 0.19<c></c></p>
<p style="Normal" xid="1090" props="text-align:left; dom-dir:ltr">	System time (seconds): 19.97<c></c></p>
<p style="Normal" xid="1091" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 84%<c></c></p>
<p style="Normal" xid="1092" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:23.93<c></c></p>
<p style="Normal" xid="1093" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1094" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1095" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1096" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1097" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4192<c></c></p>
<p style="Normal" xid="1098" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1099" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1100" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 17385<c></c></p>
<p style="Normal" xid="1101" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 230746<c></c></p>
<p style="Normal" xid="1102" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 27<c></c></p>
<p style="Normal" xid="1103" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1104" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1105" props="text-align:left; dom-dir:ltr">	File system outputs: 2112304<c></c></p>
<p style="Normal" xid="1106" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1107" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1108" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1109" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1110" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1111" props="text-align:left; dom-dir:ltr">Running mixed CPU/IO bound process<c></c></p>
<p style="Normal" xid="1112" props="text-align:left; dom-dir:ltr">using SCHED_OTHER with 512 simultaneous processes...<c></c></p>
<p style="Normal" xid="1113" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./mixed 102400 1024 rwinput rwoutput 9 SCHED_OTHER 100000"<c></c></p>
<p style="Normal" xid="1114" props="text-align:left; dom-dir:ltr">	User time (seconds): 2.71<c></c></p>
<p style="Normal" xid="1115" props="text-align:left; dom-dir:ltr">	System time (seconds): 5.20<c></c></p>
<p style="Normal" xid="1116" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 35%<c></c></p>
<p style="Normal" xid="1117" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:22.47<c></c></p>
<p style="Normal" xid="1118" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1119" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1120" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1121" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1122" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4216<c></c></p>
<p style="Normal" xid="1123" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1124" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1125" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 22502<c></c></p>
<p style="Normal" xid="1126" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 114575<c></c></p>
<p style="Normal" xid="1127" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 33890<c></c></p>
<p style="Normal" xid="1128" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1129" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1130" props="text-align:left; dom-dir:ltr">	File system outputs: 919744<c></c></p>
<p style="Normal" xid="1131" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1132" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1133" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1134" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1135" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1136" props="text-align:left; dom-dir:ltr">Running mixed CPU/IO bound process<c></c></p>
<p style="Normal" xid="1137" props="text-align:left; dom-dir:ltr">using SCHED_FIFO with 512 simultaneous processes...<c></c></p>
<p style="Normal" xid="1138" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./mixed 102400 1024 rwinput rwoutput 9 SCHED_FIFO 100000"<c></c></p>
<p style="Normal" xid="1139" props="text-align:left; dom-dir:ltr">	User time (seconds): 3.94<c></c></p>
<p style="Normal" xid="1140" props="text-align:left; dom-dir:ltr">	System time (seconds): 9.74<c></c></p>
<p style="Normal" xid="1141" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 50%<c></c></p>
<p style="Normal" xid="1142" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.96<c></c></p>
<p style="Normal" xid="1143" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1144" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1145" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1146" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1147" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4200<c></c></p>
<p style="Normal" xid="1148" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1149" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1150" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 22514<c></c></p>
<p style="Normal" xid="1151" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 217268<c></c></p>
<p style="Normal" xid="1152" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 12<c></c></p>
<p style="Normal" xid="1153" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1154" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1155" props="text-align:left; dom-dir:ltr">	File system outputs: 1350984<c></c></p>
<p style="Normal" xid="1156" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1157" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1158" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1159" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1160" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1161" props="text-align:left; dom-dir:ltr">Running mixed CPU/IO bound process<c></c></p>
<p style="Normal" xid="1162" props="text-align:left; dom-dir:ltr">using SCHED_RR with 512 simultaneous processes...<c></c></p>
<p style="Normal" xid="1163" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./mixed 102400 1024 rwinput rwoutput 9 SCHED_RR 100000"<c></c></p>
<p style="Normal" xid="1164" props="text-align:left; dom-dir:ltr">	User time (seconds): 3.99<c></c></p>
<p style="Normal" xid="1165" props="text-align:left; dom-dir:ltr">	System time (seconds): 10.64<c></c></p>
<p style="Normal" xid="1166" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 78%<c></c></p>
<p style="Normal" xid="1167" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.53<c></c></p>
<p style="Normal" xid="1168" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1169" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1170" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1171" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1172" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4196<c></c></p>
<p style="Normal" xid="1173" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1174" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1175" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 21485<c></c></p>
<p style="Normal" xid="1176" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 237142<c></c></p>
<p style="Normal" xid="1177" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 6<c></c></p>
<p style="Normal" xid="1178" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1179" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1180" props="text-align:left; dom-dir:ltr">	File system outputs: 1602984<c></c></p>
<p style="Normal" xid="1181" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1182" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1183" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1184" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1185" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1186" props="text-align:left; dom-dir:ltr">Calculating pi over 100000 iterations using SCHED_OTHER with 4096 simultaneous processes...<c></c></p>
<p style="Normal" xid="1187" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./pi-sched 100000 SCHED_OTHER 12"<c></c></p>
<p style="Normal" xid="1188" props="text-align:left; dom-dir:ltr">	User time (seconds): 26.02<c></c></p>
<p style="Normal" xid="1189" props="text-align:left; dom-dir:ltr">	System time (seconds): 2.31<c></c></p>
<p style="Normal" xid="1190" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 99%<c></c></p>
<p style="Normal" xid="1191" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:28.55<c></c></p>
<p style="Normal" xid="1192" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1193" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1194" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1195" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1196" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4196<c></c></p>
<p style="Normal" xid="1197" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1198" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1199" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 145907<c></c></p>
<p style="Normal" xid="1200" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 10424<c></c></p>
<p style="Normal" xid="1201" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 7607<c></c></p>
<p style="Normal" xid="1202" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1203" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1204" props="text-align:left; dom-dir:ltr">	File system outputs: 33536<c></c></p>
<p style="Normal" xid="1205" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1206" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1207" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1208" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1209" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1210" props="text-align:left; dom-dir:ltr">Calculating pi over 100000 iterations using SCHED_FIFO with 4096 simultaneous processes...<c></c></p>
<p style="Normal" xid="1211" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./pi-sched 100000 SCHED_FIFO 12"<c></c></p>
<p style="Normal" xid="1212" props="text-align:left; dom-dir:ltr">	User time (seconds): 25.74<c></c></p>
<p style="Normal" xid="1213" props="text-align:left; dom-dir:ltr">	System time (seconds): 1.75<c></c></p>
<p style="Normal" xid="1214" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 190%<c></c></p>
<p style="Normal" xid="1215" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.44<c></c></p>
<p style="Normal" xid="1216" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1217" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1218" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1219" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1220" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4252<c></c></p>
<p style="Normal" xid="1221" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1222" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1223" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 162298<c></c></p>
<p style="Normal" xid="1224" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 8191<c></c></p>
<p style="Normal" xid="1225" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 29<c></c></p>
<p style="Normal" xid="1226" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1227" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1228" props="text-align:left; dom-dir:ltr">	File system outputs: 33536<c></c></p>
<p style="Normal" xid="1229" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1230" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1231" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1232" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1233" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1234" props="text-align:left; dom-dir:ltr">Calculating pi over 100000 iterations using SCHED_RR with 4096 simultaneous processes...<c></c></p>
<p style="Normal" xid="1235" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./pi-sched 100000 SCHED_RR 12"<c></c></p>
<p style="Normal" xid="1236" props="text-align:left; dom-dir:ltr">	User time (seconds): 24.81<c></c></p>
<p style="Normal" xid="1237" props="text-align:left; dom-dir:ltr">	System time (seconds): 1.81<c></c></p>
<p style="Normal" xid="1238" props="font-family:Times New Roman; font-size:12pt; dom-dir:ltr; lang:en-US; font-weight:normal; text-position:normal; text-align:left; font-style:normal; text-decoration:none">	Percent of CPU this job got: 190%<c></c></p>
<p style="Normal" xid="1239" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.99<c></c></p>
<p style="Normal" xid="1240" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1241" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1242" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1243" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1244" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4196<c></c></p>
<p style="Normal" xid="1245" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1246" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1247" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 150007<c></c></p>
<p style="Normal" xid="1248" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 8177<c></c></p>
<p style="Normal" xid="1249" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 24<c></c></p>
<p style="Normal" xid="1250" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1251" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1252" props="text-align:left; dom-dir:ltr">	File system outputs: 33536<c></c></p>
<p style="Normal" xid="1253" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1254" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1255" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1256" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1257" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1258" props="text-align:left; dom-dir:ltr">Copying 102400 bytes in blocks of 1024 from rwinput to rwoutput<c></c></p>
<p style="Normal" xid="1259" props="text-align:left; dom-dir:ltr">using SCHED_OTHER with 4096 simultaneous processes...<c></c></p>
<p style="Normal" xid="1260" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./rw 102400 1024 rwinput rwoutput 12 SCHED_OTHER"<c></c></p>
<p style="Normal" xid="1261" props="text-align:left; dom-dir:ltr">	User time (seconds): 0.14<c></c></p>
<p style="Normal" xid="1262" props="text-align:left; dom-dir:ltr">	System time (seconds): 34.61<c></c></p>
<p style="Normal" xid="1263" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 50%<c></c></p>
<p style="Normal" xid="1264" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.13<c></c></p>
<p style="Normal" xid="1265" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1266" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1267" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1268" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1269" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4276<c></c></p>
<p style="Normal" xid="1270" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1271" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1272" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 152058<c></c></p>
<p style="Normal" xid="1273" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 1162827<c></c></p>
<p style="Normal" xid="1274" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 280383<c></c></p>
<p style="Normal" xid="1275" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1276" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1277" props="text-align:left; dom-dir:ltr">	File system outputs: 5091520<c></c></p>
<p style="Normal" xid="1278" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1279" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1280" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1281" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1282" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1283" props="text-align:left; dom-dir:ltr">Copying 102400 bytes in blocks of 1024 from rwinput to rwoutput<c></c></p>
<p style="Normal" xid="1284" props="text-align:left; dom-dir:ltr">using SCHED_FIFO with 4096 simultaneous processes...<c></c></p>
<p style="Normal" xid="1285" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./rw 102400 1024 rwinput rwoutput 12 SCHED_FIFO"<c></c></p>
<p style="Normal" xid="1286" props="text-align:left; dom-dir:ltr">	User time (seconds): 0.30<c></c></p>
<p style="Normal" xid="1287" props="text-align:left; dom-dir:ltr">	System time (seconds): 102.78<c></c></p>
<p style="Normal" xid="1288" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 84%<c></c></p>
<p style="Normal" xid="1289" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 2:02.31<c></c></p>
<p style="Normal" xid="1290" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1291" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1292" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1293" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1294" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4216<c></c></p>
<p style="Normal" xid="1295" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1296" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1297" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 139803<c></c></p>
<p style="Normal" xid="1298" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 2726746<c></c></p>
<p style="Normal" xid="1299" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 39<c></c></p>
<p style="Normal" xid="1300" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1301" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1302" props="text-align:left; dom-dir:ltr">	File system outputs: 8569144<c></c></p>
<p style="Normal" xid="1303" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1304" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1305" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1306" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1307" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1308" props="text-align:left; dom-dir:ltr">Copying 102400 bytes in blocks of 1024 from rwinput to rwoutput<c></c></p>
<p style="Normal" xid="1309" props="text-align:left; dom-dir:ltr">using SCHED_RR with 4096 simultaneous processes...<c></c></p>
<p style="Normal" xid="1310" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./rw 102400 1024 rwinput rwoutput 12 SCHED_RR"<c></c></p>
<p style="Normal" xid="1311" props="text-align:left; dom-dir:ltr">	User time (seconds): 0.22<c></c></p>
<p style="Normal" xid="1312" props="text-align:left; dom-dir:ltr">	System time (seconds): 77.87<c></c></p>
<p style="Normal" xid="1313" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 66%<c></c></p>
<p style="Normal" xid="1314" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:58.33<c></c></p>
<p style="Normal" xid="1315" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1316" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1317" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1318" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1319" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4252<c></c></p>
<p style="Normal" xid="1320" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1321" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1322" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 143935<c></c></p>
<p style="Normal" xid="1323" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 2775705<c></c></p>
<p style="Normal" xid="1324" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 19<c></c></p>
<p style="Normal" xid="1325" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1326" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1327" props="text-align:left; dom-dir:ltr">	File system outputs: 7427072<c></c></p>
<p style="Normal" xid="1328" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1329" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1330" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1331" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1332" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1333" props="text-align:left; dom-dir:ltr">Running mixed CPU/IO bound process<c></c></p>
<p style="Normal" xid="1334" props="text-align:left; dom-dir:ltr">using SCHED_OTHER with 4096 simultaneous processes...<c></c></p>
<p style="Normal" xid="1335" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./mixed 102400 1024 rwinput rwoutput 12 SCHED_OTHER 100000"<c></c></p>
<p style="Normal" xid="1336" props="text-align:left; dom-dir:ltr">	User time (seconds): 21.32<c></c></p>
<p style="Normal" xid="1337" props="text-align:left; dom-dir:ltr">	System time (seconds): 36.47<c></c></p>
<p style="Normal" xid="1338" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 55%<c></c></p>
<p style="Normal" xid="1339" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:44.46<c></c></p>
<p style="Normal" xid="1340" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1341" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1342" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1343" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1344" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4200<c></c></p>
<p style="Normal" xid="1345" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1346" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1347" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 176623<c></c></p>
<p style="Normal" xid="1348" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 1248965<c></c></p>
<p style="Normal" xid="1349" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 323636<c></c></p>
<p style="Normal" xid="1350" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1351" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1352" props="text-align:left; dom-dir:ltr">	File system outputs: 5203440<c></c></p>
<p style="Normal" xid="1353" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1354" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1355" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1356" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1357" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1358" props="text-align:left; dom-dir:ltr">Running mixed CPU/IO bound process<c></c></p>
<p style="Normal" xid="1359" props="text-align:left; dom-dir:ltr">using SCHED_FIFO with 4096 simultaneous processes...<c></c></p>
<p style="Normal" xid="1360" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./mixed 102400 1024 rwinput rwoutput 12 SCHED_FIFO 100000"<c></c></p>
<p style="Normal" xid="1361" props="text-align:left; dom-dir:ltr">	User time (seconds): 31.31<c></c></p>
<p style="Normal" xid="1362" props="text-align:left; dom-dir:ltr">	System time (seconds): 84.80<c></c></p>
<p style="Normal" xid="1363" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 77%<c></c></p>
<p style="Normal" xid="1364" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 2:29.78<c></c></p>
<p style="Normal" xid="1365" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1366" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1367" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1368" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1369" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4188<c></c></p>
<p style="Normal" xid="1370" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1371" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1372" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 184871<c></c></p>
<p style="Normal" xid="1373" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 3172366<c></c></p>
<p style="Normal" xid="1374" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 22<c></c></p>
<p style="Normal" xid="1375" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1376" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1377" props="text-align:left; dom-dir:ltr">	File system outputs: 9274960<c></c></p>
<p style="Normal" xid="1378" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1379" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1380" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1381" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1382" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1383" props="text-align:left; dom-dir:ltr">Running mixed CPU/IO bound process<c></c></p>
<p style="Normal" xid="1384" props="text-align:left; dom-dir:ltr">using SCHED_RR with 4096 simultaneous processes...<c></c></p>
<p style="Normal" xid="1385" props="text-align:left; dom-dir:ltr">	Command being timed: "sudo ./mixed 102400 1024 rwinput rwoutput 12 SCHED_RR 100000"<c></c></p>
<p style="Normal" xid="1386" props="text-align:left; dom-dir:ltr">	User time (seconds): 30.94<c></c></p>
<p style="Normal" xid="1387" props="text-align:left; dom-dir:ltr">	System time (seconds): 70.28<c></c></p>
<p style="Normal" xid="1388" props="text-align:left; dom-dir:ltr">	Percent of CPU this job got: 62%<c></c></p>
<p style="Normal" xid="1389" props="text-align:left; dom-dir:ltr">	Elapsed (wall clock) time (h:mm:ss or m:ss): 2:42.72<c></c></p>
<p style="Normal" xid="1390" props="text-align:left; dom-dir:ltr">	Average shared text size (kbytes): 0<c></c></p>
<p style="Normal" xid="1391" props="text-align:left; dom-dir:ltr">	Average unshared data size (kbytes): 0<c></c></p>
<p style="Normal" xid="1392" props="text-align:left; dom-dir:ltr">	Average stack size (kbytes): 0<c></c></p>
<p style="Normal" xid="1393" props="text-align:left; dom-dir:ltr">	Average total size (kbytes): 0<c></c></p>
<p style="Normal" xid="1394" props="text-align:left; dom-dir:ltr">	Maximum resident set size (kbytes): 4196<c></c></p>
<p style="Normal" xid="1395" props="text-align:left; dom-dir:ltr">	Average resident set size (kbytes): 0<c></c></p>
<p style="Normal" xid="1396" props="text-align:left; dom-dir:ltr">	Major (requiring I/O) page faults: 0<c></c></p>
<p style="Normal" xid="1397" props="text-align:left; dom-dir:ltr">	Minor (reclaiming a frame) page faults: 180756<c></c></p>
<p style="Normal" xid="1398" props="text-align:left; dom-dir:ltr">	Voluntary context switches: 2147220<c></c></p>
<p style="Normal" xid="1399" props="text-align:left; dom-dir:ltr">	Involuntary context switches: 49<c></c></p>
<p style="Normal" xid="1400" props="text-align:left; dom-dir:ltr">	Swaps: 0<c></c></p>
<p style="Normal" xid="1401" props="text-align:left; dom-dir:ltr">	File system inputs: 0<c></c></p>
<p style="Normal" xid="1402" props="text-align:left; dom-dir:ltr">	File system outputs: 8176656<c></c></p>
<p style="Normal" xid="1403" props="text-align:left; dom-dir:ltr">	Socket messages sent: 0<c></c></p>
<p style="Normal" xid="1404" props="text-align:left; dom-dir:ltr">	Socket messages received: 0<c></c></p>
<p style="Normal" xid="1405" props="text-align:left; dom-dir:ltr">	Signals delivered: 0<c></c></p>
<p style="Normal" xid="1406" props="text-align:left; dom-dir:ltr">	Page size (bytes): 4096<c></c></p>
<p style="Normal" xid="1407" props="text-align:left; dom-dir:ltr">	Exit status: 0<c></c></p>
<p style="Normal" xid="1408" props="text-align:left; dom-dir:ltr">user@cu-cs-vm:~/Dropbox/3753/PA4/pa3$ <c></c></p>
<p style="Normal" xid="1409" props="text-align:left; dom-dir:ltr"><c></c><c></c></p>
<p style="Normal" xid="1769" props="text-align:left; dom-dir:ltr">APPENDIX B: ALL CODE</p>
<p style="Normal" xid="1941" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2075" props="text-align:left; dom-dir:ltr">-mixed.c-</p>
<p style="Normal" xid="2143" props="text-align:left; dom-dir:ltr">/*</p>
<p style="Normal" xid="2144" props="text-align:left; dom-dir:ltr"> * File: pi-sched.c</p>
<p style="Normal" xid="2145" props="text-align:left; dom-dir:ltr"> * Author: Andy Sayler</p>
<p style="Normal" xid="2146" props="text-align:left; dom-dir:ltr"> * Project: CSCI 3753 Programming Assignment 3</p>
<p style="Normal" xid="2147" props="text-align:left; dom-dir:ltr"> * Create Date: 2012/03/07</p>
<p style="Normal" xid="2148" props="text-align:left; dom-dir:ltr"> * Modify Date: 2012/03/09</p>
<p style="Normal" xid="2149" props="text-align:left; dom-dir:ltr"> * Description:</p>
<p style="Normal" xid="2150" props="text-align:left; dom-dir:ltr"> * 	This file contains a simple program for statistically</p>
<p style="Normal" xid="2151" props="text-align:left; dom-dir:ltr"> *      calculating pi using a specific scheduling policy.</p>
<p style="Normal" xid="2152" props="text-align:left; dom-dir:ltr"> */</p>
<p style="Normal" xid="2153" props="text-align:left; dom-dir:ltr"> </p>
<p style="Normal" xid="2154" props="text-align:left; dom-dir:ltr"> /*</p>
<p style="Normal" xid="2155" props="text-align:left; dom-dir:ltr"> * File: rw.c</p>
<p style="Normal" xid="2156" props="text-align:left; dom-dir:ltr"> * Author: Andy Sayler</p>
<p style="Normal" xid="2157" props="text-align:left; dom-dir:ltr"> * Project: CSCI 3753 Programming Assignment 3</p>
<p style="Normal" xid="2158" props="text-align:left; dom-dir:ltr"> * Create Date: 2012/03/19</p>
<p style="Normal" xid="2159" props="text-align:left; dom-dir:ltr"> * Modify Date: 2012/03/20</p>
<p style="Normal" xid="2160" props="text-align:left; dom-dir:ltr"> * Description: A small i/o bound program to copy N bytes from an input</p>
<p style="Normal" xid="2161" props="text-align:left; dom-dir:ltr"> *              file to an output file. May read the input file multiple</p>
<p style="Normal" xid="2162" props="text-align:left; dom-dir:ltr"> *              times if N is larger than the size of the input file.</p>
<p style="Normal" xid="2163" props="text-align:left; dom-dir:ltr"> */</p>
<p style="Normal" xid="2164" props="text-align:left; dom-dir:ltr"> </p>
<p style="Normal" xid="2165" props="text-align:left; dom-dir:ltr"> /* Include Flags */</p>
<p style="Normal" xid="2166" props="text-align:left; dom-dir:ltr">#define _GNU_SOURCE</p>
<p style="Normal" xid="2167" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2168" props="text-align:left; dom-dir:ltr">/* System Includes */</p>
<p style="Normal" xid="2169" props="text-align:left; dom-dir:ltr">#include &lt;stdlib.h&gt;</p>
<p style="Normal" xid="2170" props="text-align:left; dom-dir:ltr">#include &lt;stdio.h&gt;</p>
<p style="Normal" xid="2171" props="text-align:left; dom-dir:ltr">#include &lt;unistd.h&gt;</p>
<p style="Normal" xid="2172" props="text-align:left; dom-dir:ltr">#include &lt;errno.h&gt;</p>
<p style="Normal" xid="2173" props="text-align:left; dom-dir:ltr">#include &lt;sched.h&gt;</p>
<p style="Normal" xid="2174" props="text-align:left; dom-dir:ltr">#include &lt;math.h&gt;</p>
<p style="Normal" xid="2175" props="text-align:left; dom-dir:ltr">#include &lt;fcntl.h&gt;</p>
<p style="Normal" xid="2176" props="text-align:left; dom-dir:ltr">#include &lt;string.h&gt;</p>
<p style="Normal" xid="2177" props="text-align:left; dom-dir:ltr">#include &lt;sys/types.h&gt;</p>
<p style="Normal" xid="2178" props="text-align:left; dom-dir:ltr">#include &lt;sys/stat.h&gt;</p>
<p style="Normal" xid="2179" props="text-align:left; dom-dir:ltr">#include &lt;sys/wait.h&gt;</p>
<p style="Normal" xid="2180" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2181" props="text-align:left; dom-dir:ltr">#define DEFAULT_ITERATIONS 1000000</p>
<p style="Normal" xid="2182" props="text-align:left; dom-dir:ltr">#define RADIUS (RAND_MAX / 2)</p>
<p style="Normal" xid="2183" props="text-align:left; dom-dir:ltr">#define DEFAULT_PROCESSES 1</p>
<p style="Normal" xid="2184" props="text-align:left; dom-dir:ltr">#define MAXFILENAMELENGTH 80</p>
<p style="Normal" xid="2185" props="text-align:left; dom-dir:ltr">#define DEFAULT_INPUTFILENAME "rwinput"</p>
<p style="Normal" xid="2186" props="text-align:left; dom-dir:ltr">#define DEFAULT_OUTPUTFILENAMEBASE "rwoutput"</p>
<p style="Normal" xid="2187" props="text-align:left; dom-dir:ltr">#define DEFAULT_BLOCKSIZE 1024</p>
<p style="Normal" xid="2188" props="text-align:left; dom-dir:ltr">#define DEFAULT_TRANSFERSIZE 1024*100</p>
<p style="Normal" xid="2189" props="text-align:left; dom-dir:ltr">#define DEFAULT_PROCESSES 1</p>
<p style="Normal" xid="2190" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2191" props="text-align:left; dom-dir:ltr">inline double dist(double x0, double y0, double x1, double y1){</p>
<p style="Normal" xid="2192" props="text-align:left; dom-dir:ltr">    return sqrt(pow((x1-x0),2) + pow((y1-y0),2));</p>
<p style="Normal" xid="2193" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2194" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2195" props="text-align:left; dom-dir:ltr">inline double zeroDist(double x, double y){</p>
<p style="Normal" xid="2196" props="text-align:left; dom-dir:ltr">    return dist(0, 0, x, y);</p>
<p style="Normal" xid="2197" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2198" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2199" props="text-align:left; dom-dir:ltr">int main(int argc, char* argv[]){</p>
<p style="Normal" xid="2200" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2201" props="text-align:left; dom-dir:ltr">    int rv;</p>
<p style="Normal" xid="2202" props="text-align:left; dom-dir:ltr">    int inputFD;</p>
<p style="Normal" xid="2203" props="text-align:left; dom-dir:ltr">    int outputFD;</p>
<p style="Normal" xid="2204" props="text-align:left; dom-dir:ltr">    int status;</p>
<p style="Normal" xid="2205" props="text-align:left; dom-dir:ltr">    int policy;</p>
<p style="Normal" xid="2206" props="text-align:left; dom-dir:ltr">    long processes;</p>
<p style="Normal" xid="2207" props="text-align:left; dom-dir:ltr">    struct sched_param param;</p>
<p style="Normal" xid="2208" props="text-align:left; dom-dir:ltr">    char inputFilename[MAXFILENAMELENGTH];</p>
<p style="Normal" xid="2209" props="text-align:left; dom-dir:ltr">    char outputFilename[MAXFILENAMELENGTH];</p>
<p style="Normal" xid="2210" props="text-align:left; dom-dir:ltr">    char outputFilenameBase[MAXFILENAMELENGTH];</p>
<p style="Normal" xid="2211" props="text-align:left; dom-dir:ltr">    </p>
<p style="Normal" xid="2212" props="text-align:left; dom-dir:ltr">    long i;</p>
<p style="Normal" xid="2213" props="text-align:left; dom-dir:ltr">    long iterations;</p>
<p style="Normal" xid="2214" props="text-align:left; dom-dir:ltr">    double x, y;</p>
<p style="Normal" xid="2215" props="text-align:left; dom-dir:ltr">    double inCircle = 0.0;</p>
<p style="Normal" xid="2216" props="text-align:left; dom-dir:ltr">    double inSquare = 0.0;</p>
<p style="Normal" xid="2217" props="text-align:left; dom-dir:ltr">    double pCircle = 0.0;</p>
<p style="Normal" xid="2218" props="text-align:left; dom-dir:ltr">    double piCalc = 0.0;</p>
<p style="Normal" xid="2219" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2220" props="text-align:left; dom-dir:ltr">    ssize_t transfersize = 0;</p>
<p style="Normal" xid="2221" props="text-align:left; dom-dir:ltr">    ssize_t blocksize = 0; </p>
<p style="Normal" xid="2222" props="text-align:left; dom-dir:ltr">    char* transferBuffer = NULL;</p>
<p style="Normal" xid="2223" props="text-align:left; dom-dir:ltr">    ssize_t buffersize;</p>
<p style="Normal" xid="2224" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2225" props="text-align:left; dom-dir:ltr">    ssize_t bytesRead = 0;</p>
<p style="Normal" xid="2226" props="text-align:left; dom-dir:ltr">    ssize_t totalBytesRead = 0;</p>
<p style="Normal" xid="2227" props="text-align:left; dom-dir:ltr">    int totalReads = 0;</p>
<p style="Normal" xid="2228" props="text-align:left; dom-dir:ltr">    ssize_t bytesWritten = 0;</p>
<p style="Normal" xid="2229" props="text-align:left; dom-dir:ltr">    ssize_t totalBytesWritten = 0;</p>
<p style="Normal" xid="2230" props="text-align:left; dom-dir:ltr">    int totalWrites = 0;</p>
<p style="Normal" xid="2231" props="text-align:left; dom-dir:ltr">    int inputFileResets = 0;</p>
<p style="Normal" xid="2232" props="text-align:left; dom-dir:ltr">    </p>
<p style="Normal" xid="2233" props="text-align:left; dom-dir:ltr">    /* Process program arguments to select run-time parameters */</p>
<p style="Normal" xid="2234" props="text-align:left; dom-dir:ltr">    /* Set supplied transfer size or default if not supplied */</p>
<p style="Normal" xid="2235" props="text-align:left; dom-dir:ltr">    if(argc &lt; 2){</p>
<p style="Normal" xid="2236" props="text-align:left; dom-dir:ltr">	transfersize = DEFAULT_TRANSFERSIZE;</p>
<p style="Normal" xid="2237" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2238" props="text-align:left; dom-dir:ltr">    else{</p>
<p style="Normal" xid="2239" props="text-align:left; dom-dir:ltr">	transfersize = atol(argv[1]);</p>
<p style="Normal" xid="2240" props="text-align:left; dom-dir:ltr">	if(transfersize &lt; 1){</p>
<p style="Normal" xid="2241" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad transfersize value\n");</p>
<p style="Normal" xid="2242" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2243" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2244" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2245" props="text-align:left; dom-dir:ltr">    /* Set supplied block size or default if not supplied */</p>
<p style="Normal" xid="2246" props="text-align:left; dom-dir:ltr">    if(argc &lt; 3){</p>
<p style="Normal" xid="2247" props="text-align:left; dom-dir:ltr">	blocksize = DEFAULT_BLOCKSIZE;</p>
<p style="Normal" xid="2248" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2249" props="text-align:left; dom-dir:ltr">    else{</p>
<p style="Normal" xid="2250" props="text-align:left; dom-dir:ltr">	blocksize = atol(argv[2]);</p>
<p style="Normal" xid="2251" props="text-align:left; dom-dir:ltr">	if(blocksize &lt; 1){</p>
<p style="Normal" xid="2252" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad blocksize value\n");</p>
<p style="Normal" xid="2253" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2254" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2255" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2256" props="text-align:left; dom-dir:ltr">    /* Set supplied input filename or default if not supplied */</p>
<p style="Normal" xid="2257" props="text-align:left; dom-dir:ltr">    if(argc &lt; 4){</p>
<p style="Normal" xid="2258" props="text-align:left; dom-dir:ltr">	if(strnlen(DEFAULT_INPUTFILENAME, MAXFILENAMELENGTH) &gt;= MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2259" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Default input filename too long\n");</p>
<p style="Normal" xid="2260" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2261" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2262" props="text-align:left; dom-dir:ltr">	strncpy(inputFilename, DEFAULT_INPUTFILENAME, MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2263" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2264" props="text-align:left; dom-dir:ltr">    else{</p>
<p style="Normal" xid="2265" props="text-align:left; dom-dir:ltr">	if(strnlen(argv[3], MAXFILENAMELENGTH) &gt;= MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2266" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Input filename too long\n");</p>
<p style="Normal" xid="2267" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2268" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2269" props="text-align:left; dom-dir:ltr">	strncpy(inputFilename, argv[3], MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2270" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2271" props="text-align:left; dom-dir:ltr">    /* Set supplied output filename base or default if not supplied */</p>
<p style="Normal" xid="2272" props="text-align:left; dom-dir:ltr">    if(argc &lt; 5){</p>
<p style="Normal" xid="2273" props="text-align:left; dom-dir:ltr">	if(strnlen(DEFAULT_OUTPUTFILENAMEBASE, MAXFILENAMELENGTH) &gt;= MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2274" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Default output filename base too long\n");</p>
<p style="Normal" xid="2275" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2276" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2277" props="text-align:left; dom-dir:ltr">	strncpy(outputFilenameBase, DEFAULT_OUTPUTFILENAMEBASE, MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2278" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2279" props="text-align:left; dom-dir:ltr">    else{</p>
<p style="Normal" xid="2280" props="text-align:left; dom-dir:ltr">	if(strnlen(argv[4], MAXFILENAMELENGTH) &gt;= MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2281" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Output filename base is too long\n");</p>
<p style="Normal" xid="2282" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2283" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2284" props="text-align:left; dom-dir:ltr">	strncpy(outputFilenameBase, argv[4], MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2285" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2286" props="text-align:left; dom-dir:ltr">    /* Set default policy if not supplied */</p>
<p style="Normal" xid="2287" props="text-align:left; dom-dir:ltr">    if(argc &lt; 7){</p>
<p style="Normal" xid="2288" props="text-align:left; dom-dir:ltr">	policy = SCHED_OTHER;</p>
<p style="Normal" xid="2289" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2290" props="text-align:left; dom-dir:ltr">    /* Set policy if supplied */</p>
<p style="Normal" xid="2291" props="text-align:left; dom-dir:ltr">    if(argc &gt; 6){</p>
<p style="Normal" xid="2292" props="text-align:left; dom-dir:ltr">	if(!strcmp(argv[6], "SCHED_OTHER")){</p>
<p style="Normal" xid="2293" props="text-align:left; dom-dir:ltr">	    policy = SCHED_OTHER;</p>
<p style="Normal" xid="2294" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2295" props="text-align:left; dom-dir:ltr">	else if(!strcmp(argv[6], "SCHED_FIFO")){</p>
<p style="Normal" xid="2296" props="text-align:left; dom-dir:ltr">	    policy = SCHED_FIFO;</p>
<p style="Normal" xid="2297" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2298" props="text-align:left; dom-dir:ltr">	else if(!strcmp(argv[6], "SCHED_RR")){</p>
<p style="Normal" xid="2299" props="text-align:left; dom-dir:ltr">	    policy = SCHED_RR;</p>
<p style="Normal" xid="2300" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2301" props="text-align:left; dom-dir:ltr">	else{</p>
<p style="Normal" xid="2302" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Unhandeled scheduling policy\n");</p>
<p style="Normal" xid="2303" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2304" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2305" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2306" props="text-align:left; dom-dir:ltr">    /* Set default iterations if not supplied */</p>
<p style="Normal" xid="2307" props="text-align:left; dom-dir:ltr">    if(argc &lt; 8){</p>
<p style="Normal" xid="2308" props="text-align:left; dom-dir:ltr">	iterations = DEFAULT_ITERATIONS;</p>
<p style="Normal" xid="2309" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2310" props="text-align:left; dom-dir:ltr">    /* Set iterations if supplied */</p>
<p style="Normal" xid="2311" props="text-align:left; dom-dir:ltr">    if(argc &gt; 7){</p>
<p style="Normal" xid="2312" props="text-align:left; dom-dir:ltr">	iterations = atol(argv[7]);</p>
<p style="Normal" xid="2313" props="text-align:left; dom-dir:ltr">	if(iterations &lt; 1){</p>
<p style="Normal" xid="2314" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad iterations value\n");</p>
<p style="Normal" xid="2315" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2316" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2317" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2318" props="text-align:left; dom-dir:ltr">    /* Set process to max prioty for given scheduler */</p>
<p style="Normal" xid="2319" props="text-align:left; dom-dir:ltr">    param.sched_priority = sched_get_priority_max(policy);</p>
<p style="Normal" xid="2320" props="text-align:left; dom-dir:ltr">    /* Set new scheduler policy */</p>
<p style="Normal" xid="2321" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Current Scheduling Policy: %d\n", sched_getscheduler(0));</p>
<p style="Normal" xid="2322" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Setting Scheduling Policy to: %d\n", policy);</p>
<p style="Normal" xid="2323" props="text-align:left; dom-dir:ltr">    if(sched_setscheduler(0, policy, &amp;param)){</p>
<p style="Normal" xid="2324" props="text-align:left; dom-dir:ltr">	perror("Error setting scheduler policy");</p>
<p style="Normal" xid="2325" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2326" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2327" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "New Scheduling Policy: %d\n", sched_getscheduler(0));</p>
<p style="Normal" xid="2328" props="text-align:left; dom-dir:ltr">    </p>
<p style="Normal" xid="2329" props="text-align:left; dom-dir:ltr">    /* Modification for forks */</p>
<p style="Normal" xid="2330" props="text-align:left; dom-dir:ltr">    if(argc &lt; 6){</p>
<p style="Normal" xid="2331" props="text-align:left; dom-dir:ltr">	processes = DEFAULT_PROCESSES;</p>
<p style="Normal" xid="2332" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2333" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2334" props="text-align:left; dom-dir:ltr">	/* Modification for forks */</p>
<p style="Normal" xid="2335" props="text-align:left; dom-dir:ltr">    if(argc &gt; 5){</p>
<p style="Normal" xid="2336" props="text-align:left; dom-dir:ltr">		processes = atol(argv[5]);</p>
<p style="Normal" xid="2337" props="text-align:left; dom-dir:ltr">		if(processes &lt; 1){</p>
<p style="Normal" xid="2338" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad processes value\n");</p>
<p style="Normal" xid="2339" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2340" props="text-align:left; dom-dir:ltr">		}</p>
<p style="Normal" xid="2341" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2342" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2343" props="text-align:left; dom-dir:ltr">	/* Modification for forks */</p>
<p style="Normal" xid="2344" props="text-align:left; dom-dir:ltr">    int f;</p>
<p style="Normal" xid="2345" props="text-align:left; dom-dir:ltr">    int g;</p>
<p style="Normal" xid="2346" props="text-align:left; dom-dir:ltr">    for(f=0; f&lt;processes; f++){</p>
<p style="Normal" xid="2347" props="text-align:left; dom-dir:ltr">		if(fork() == 0){</p>
<p style="Normal" xid="2348" props="text-align:left; dom-dir:ltr">			execve(argv[1],argv, NULL);</p>
<p style="Normal" xid="2349" props="text-align:left; dom-dir:ltr">		}</p>
<p style="Normal" xid="2350" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2351" props="text-align:left; dom-dir:ltr">	for(g=0; g&lt;processes; g++){</p>
<p style="Normal" xid="2352" props="text-align:left; dom-dir:ltr">		waitpid(0, &amp;status, 0);</p>
<p style="Normal" xid="2353" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2354" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2355" props="text-align:left; dom-dir:ltr">    /* Confirm blocksize is multiple of and less than transfersize*/</p>
<p style="Normal" xid="2356" props="text-align:left; dom-dir:ltr">    if(blocksize &gt; transfersize){</p>
<p style="Normal" xid="2357" props="text-align:left; dom-dir:ltr">	fprintf(stderr, "blocksize can not exceed transfersize\n");</p>
<p style="Normal" xid="2358" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2359" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2360" props="text-align:left; dom-dir:ltr">    if(transfersize % blocksize){</p>
<p style="Normal" xid="2361" props="text-align:left; dom-dir:ltr">	fprintf(stderr, "blocksize must be multiple of transfersize\n");</p>
<p style="Normal" xid="2362" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2363" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2364" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2365" props="text-align:left; dom-dir:ltr">    /* Allocate buffer space */</p>
<p style="Normal" xid="2366" props="text-align:left; dom-dir:ltr">    buffersize = blocksize;</p>
<p style="Normal" xid="2367" props="text-align:left; dom-dir:ltr">    if(!(transferBuffer = malloc(buffersize*sizeof(*transferBuffer)))){</p>
<p style="Normal" xid="2368" props="text-align:left; dom-dir:ltr">	perror("Failed to allocate transfer buffer");</p>
<p style="Normal" xid="2369" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2370" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2371" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2372" props="text-align:left; dom-dir:ltr">    /* Open Input File Descriptor in Read Only mode */</p>
<p style="Normal" xid="2373" props="text-align:left; dom-dir:ltr">    if((inputFD = open(inputFilename, O_RDONLY | O_SYNC)) &lt; 0){</p>
<p style="Normal" xid="2374" props="text-align:left; dom-dir:ltr">	perror("Failed to open input file");</p>
<p style="Normal" xid="2375" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2376" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2377" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2378" props="text-align:left; dom-dir:ltr">    /* Open Output File Descriptor in Write Only mode with standard permissions*/</p>
<p style="Normal" xid="2379" props="text-align:left; dom-dir:ltr">    rv = snprintf(outputFilename, MAXFILENAMELENGTH, "%s-%d",</p>
<p style="Normal" xid="2380" props="text-align:left; dom-dir:ltr">		  outputFilenameBase, getpid());    </p>
<p style="Normal" xid="2381" props="text-align:left; dom-dir:ltr">    if(rv &gt; MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2382" props="text-align:left; dom-dir:ltr">	fprintf(stderr, "Output filenmae length exceeds limit of %d characters.\n",</p>
<p style="Normal" xid="2383" props="text-align:left; dom-dir:ltr">		MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2384" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2385" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2386" props="text-align:left; dom-dir:ltr">    else if(rv &lt; 0){</p>
<p style="Normal" xid="2387" props="text-align:left; dom-dir:ltr">	perror("Failed to generate output filename");</p>
<p style="Normal" xid="2388" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2389" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2390" props="text-align:left; dom-dir:ltr">    if((outputFD =</p>
<p style="Normal" xid="2391" props="text-align:left; dom-dir:ltr">	open(outputFilename,</p>
<p style="Normal" xid="2392" props="text-align:left; dom-dir:ltr">	     O_WRONLY | O_CREAT | O_TRUNC | O_SYNC,</p>
<p style="Normal" xid="2393" props="text-align:left; dom-dir:ltr">	     S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH)) &lt; 0){</p>
<p style="Normal" xid="2394" props="text-align:left; dom-dir:ltr">	perror("Failed to open output file");</p>
<p style="Normal" xid="2395" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2396" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2397" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2398" props="text-align:left; dom-dir:ltr">    /* Print Status */</p>
<p style="Normal" xid="2399" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Reading from %s and writing to %s\n",</p>
<p style="Normal" xid="2400" props="text-align:left; dom-dir:ltr">	    inputFilename, outputFilename);</p>
<p style="Normal" xid="2401" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2402" props="text-align:left; dom-dir:ltr">    /* Read from input file and write to output file*/</p>
<p style="Normal" xid="2403" props="text-align:left; dom-dir:ltr">    do{</p>
<p style="Normal" xid="2404" props="text-align:left; dom-dir:ltr">	/* Read transfersize bytes from input file*/</p>
<p style="Normal" xid="2405" props="text-align:left; dom-dir:ltr">	bytesRead = read(inputFD, transferBuffer, buffersize);</p>
<p style="Normal" xid="2406" props="text-align:left; dom-dir:ltr">	if(bytesRead &lt; 0){</p>
<p style="Normal" xid="2407" props="text-align:left; dom-dir:ltr">	    perror("Error reading input file");</p>
<p style="Normal" xid="2408" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2409" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2410" props="text-align:left; dom-dir:ltr">	else{</p>
<p style="Normal" xid="2411" props="text-align:left; dom-dir:ltr">	    totalBytesRead += bytesRead;</p>
<p style="Normal" xid="2412" props="text-align:left; dom-dir:ltr">	    totalReads++;</p>
<p style="Normal" xid="2413" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2414" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2415" props="text-align:left; dom-dir:ltr">	/* If all bytes were read, write to output file*/</p>
<p style="Normal" xid="2416" props="text-align:left; dom-dir:ltr">	if(bytesRead == blocksize){</p>
<p style="Normal" xid="2417" props="text-align:left; dom-dir:ltr">	    bytesWritten = write(outputFD, transferBuffer, bytesRead);</p>
<p style="Normal" xid="2418" props="text-align:left; dom-dir:ltr">	    if(bytesWritten &lt; 0){</p>
<p style="Normal" xid="2419" props="text-align:left; dom-dir:ltr">		perror("Error writing output file");</p>
<p style="Normal" xid="2420" props="text-align:left; dom-dir:ltr">		exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2421" props="text-align:left; dom-dir:ltr">	    }</p>
<p style="Normal" xid="2422" props="text-align:left; dom-dir:ltr">	    else{</p>
<p style="Normal" xid="2423" props="text-align:left; dom-dir:ltr">		totalBytesWritten += bytesWritten;</p>
<p style="Normal" xid="2424" props="text-align:left; dom-dir:ltr">		totalWrites++;</p>
<p style="Normal" xid="2425" props="text-align:left; dom-dir:ltr">	    }</p>
<p style="Normal" xid="2426" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2427" props="text-align:left; dom-dir:ltr">	/* Otherwise assume we have reached the end of the input file and reset */</p>
<p style="Normal" xid="2428" props="text-align:left; dom-dir:ltr">	else{</p>
<p style="Normal" xid="2429" props="text-align:left; dom-dir:ltr">	    if(lseek(inputFD, 0, SEEK_SET)){</p>
<p style="Normal" xid="2430" props="text-align:left; dom-dir:ltr">		perror("Error resetting to beginning of file");</p>
<p style="Normal" xid="2431" props="text-align:left; dom-dir:ltr">		exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2432" props="text-align:left; dom-dir:ltr">	    }</p>
<p style="Normal" xid="2433" props="text-align:left; dom-dir:ltr">	    inputFileResets++;</p>
<p style="Normal" xid="2434" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2435" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2436" props="text-align:left; dom-dir:ltr">    }while(totalBytesWritten &lt; transfersize);</p>
<p style="Normal" xid="2437" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2438" props="text-align:left; dom-dir:ltr">    /* Output some possibly helpfull info to make it seem like we were doing stuff */</p>
<p style="Normal" xid="2439" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Read:    %zd bytes in %d reads\n",</p>
<p style="Normal" xid="2440" props="text-align:left; dom-dir:ltr">	    totalBytesRead, totalReads);</p>
<p style="Normal" xid="2441" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Written: %zd bytes in %d writes\n",</p>
<p style="Normal" xid="2442" props="text-align:left; dom-dir:ltr">	    totalBytesWritten, totalWrites);</p>
<p style="Normal" xid="2443" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Read input file in %d pass%s\n",</p>
<p style="Normal" xid="2444" props="text-align:left; dom-dir:ltr">	    (inputFileResets + 1), (inputFileResets ? "es" : ""));</p>
<p style="Normal" xid="2445" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Processed %zd bytes in blocks of %zd bytes\n",</p>
<p style="Normal" xid="2446" props="text-align:left; dom-dir:ltr">	    transfersize, blocksize);</p>
<p style="Normal" xid="2447" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2448" props="text-align:left; dom-dir:ltr">    /* Free Buffer */</p>
<p style="Normal" xid="2449" props="text-align:left; dom-dir:ltr">    free(transferBuffer);</p>
<p style="Normal" xid="2450" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2451" props="text-align:left; dom-dir:ltr">    /* Close Output File Descriptor */</p>
<p style="Normal" xid="2452" props="text-align:left; dom-dir:ltr">    if(close(outputFD)){</p>
<p style="Normal" xid="2453" props="text-align:left; dom-dir:ltr">	perror("Failed to close output file");</p>
<p style="Normal" xid="2454" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2455" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2456" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2457" props="text-align:left; dom-dir:ltr">    /* Close Input File Descriptor */</p>
<p style="Normal" xid="2458" props="text-align:left; dom-dir:ltr">    if(close(inputFD)){</p>
<p style="Normal" xid="2459" props="text-align:left; dom-dir:ltr">	perror("Failed to close input file");</p>
<p style="Normal" xid="2460" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2461" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2462" props="text-align:left; dom-dir:ltr">    </p>
<p style="Normal" xid="2463" props="text-align:left; dom-dir:ltr">    /* Calculate pi using statistical methode across all iterations*/</p>
<p style="Normal" xid="2464" props="text-align:left; dom-dir:ltr">    for(i=0; i&lt;iterations; i++){</p>
<p style="Normal" xid="2465" props="text-align:left; dom-dir:ltr">	x = (random() % (RADIUS * 2)) - RADIUS;</p>
<p style="Normal" xid="2466" props="text-align:left; dom-dir:ltr">	y = (random() % (RADIUS * 2)) - RADIUS;</p>
<p style="Normal" xid="2467" props="text-align:left; dom-dir:ltr">	if(zeroDist(x,y) &lt; RADIUS){</p>
<p style="Normal" xid="2468" props="text-align:left; dom-dir:ltr">	    inCircle++;</p>
<p style="Normal" xid="2469" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2470" props="text-align:left; dom-dir:ltr">	inSquare++;</p>
<p style="Normal" xid="2471" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2472" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2473" props="text-align:left; dom-dir:ltr">    /* Finish calculation */</p>
<p style="Normal" xid="2474" props="text-align:left; dom-dir:ltr">    pCircle = inCircle/inSquare;</p>
<p style="Normal" xid="2475" props="text-align:left; dom-dir:ltr">    piCalc = pCircle * 4.0;</p>
<p style="Normal" xid="2476" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2477" props="text-align:left; dom-dir:ltr">    /* Print result */</p>
<p style="Normal" xid="2478" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "pi = %f\n", piCalc);</p>
<p style="Normal" xid="2479" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2480" props="text-align:left; dom-dir:ltr">    return EXIT_SUCCESS;</p>
<p style="Normal" xid="2481" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2482" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2483" props="text-align:left; dom-dir:ltr">-pi.c-</p>
<p style="Normal" xid="2485" props="text-align:left; dom-dir:ltr">/*</p>
<p style="Normal" xid="2486" props="text-align:left; dom-dir:ltr"> * File: pi.c</p>
<p style="Normal" xid="2487" props="text-align:left; dom-dir:ltr"> * Author: Andy Sayler</p>
<p style="Normal" xid="2488" props="text-align:left; dom-dir:ltr"> * Project: CSCI 3753 Programming Assignment 3</p>
<p style="Normal" xid="2489" props="text-align:left; dom-dir:ltr"> * Create Date: 2012/03/07</p>
<p style="Normal" xid="2490" props="text-align:left; dom-dir:ltr"> * Modify Date: 2012/03/09</p>
<p style="Normal" xid="2491" props="text-align:left; dom-dir:ltr"> * Description:</p>
<p style="Normal" xid="2492" props="text-align:left; dom-dir:ltr"> * 	This file contains a simple program for statistically</p>
<p style="Normal" xid="2493" props="text-align:left; dom-dir:ltr"> *      calculating pi.</p>
<p style="Normal" xid="2494" props="text-align:left; dom-dir:ltr"> */</p>
<p style="Normal" xid="2495" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2496" props="text-align:left; dom-dir:ltr">/* Local Includes */</p>
<p style="Normal" xid="2497" props="text-align:left; dom-dir:ltr">#include &lt;stdlib.h&gt;</p>
<p style="Normal" xid="2498" props="text-align:left; dom-dir:ltr">#include &lt;stdio.h&gt;</p>
<p style="Normal" xid="2499" props="text-align:left; dom-dir:ltr">#include &lt;math.h&gt;</p>
<p style="Normal" xid="2500" props="text-align:left; dom-dir:ltr">#include &lt;errno.h&gt;</p>
<p style="Normal" xid="2501" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2502" props="text-align:left; dom-dir:ltr">/* Local Defines */</p>
<p style="Normal" xid="2503" props="text-align:left; dom-dir:ltr">#define DEFAULT_ITERATIONS 1000000</p>
<p style="Normal" xid="2504" props="text-align:left; dom-dir:ltr">#define RADIUS (RAND_MAX / 2)</p>
<p style="Normal" xid="2505" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2506" props="text-align:left; dom-dir:ltr">/* Local Functions */</p>
<p style="Normal" xid="2507" props="text-align:left; dom-dir:ltr">inline double dist(double x0, double y0, double x1, double y1){</p>
<p style="Normal" xid="2508" props="text-align:left; dom-dir:ltr">    return sqrt(pow((x1-x0),2) + pow((y1-y0),2));</p>
<p style="Normal" xid="2509" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2510" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2511" props="text-align:left; dom-dir:ltr">inline double zeroDist(double x, double y){</p>
<p style="Normal" xid="2512" props="text-align:left; dom-dir:ltr">    return dist(0, 0, x, y);</p>
<p style="Normal" xid="2513" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2514" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2515" props="text-align:left; dom-dir:ltr">int main(int argc, char* argv[]){</p>
<p style="Normal" xid="2516" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2517" props="text-align:left; dom-dir:ltr">    long i;</p>
<p style="Normal" xid="2518" props="text-align:left; dom-dir:ltr">    long iterations;</p>
<p style="Normal" xid="2519" props="text-align:left; dom-dir:ltr">    double x, y;</p>
<p style="Normal" xid="2520" props="text-align:left; dom-dir:ltr">    double inCircle = 0.0;</p>
<p style="Normal" xid="2521" props="text-align:left; dom-dir:ltr">    double inSquare = 0.0;</p>
<p style="Normal" xid="2522" props="text-align:left; dom-dir:ltr">    double pCircle = 0.0;</p>
<p style="Normal" xid="2523" props="text-align:left; dom-dir:ltr">    double piCalc = 0.0;</p>
<p style="Normal" xid="2524" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2525" props="text-align:left; dom-dir:ltr">    /* Process program arguments to select iterations */</p>
<p style="Normal" xid="2526" props="text-align:left; dom-dir:ltr">    /* Set default iterations if not supplied */</p>
<p style="Normal" xid="2527" props="text-align:left; dom-dir:ltr">    if(argc &lt; 2){</p>
<p style="Normal" xid="2528" props="text-align:left; dom-dir:ltr">	iterations = DEFAULT_ITERATIONS;</p>
<p style="Normal" xid="2529" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2530" props="text-align:left; dom-dir:ltr">    /* Set iterations if supplied */</p>
<p style="Normal" xid="2531" props="text-align:left; dom-dir:ltr">    else{</p>
<p style="Normal" xid="2532" props="text-align:left; dom-dir:ltr">	iterations = atol(argv[1]);</p>
<p style="Normal" xid="2533" props="text-align:left; dom-dir:ltr">	if(iterations &lt; 1){</p>
<p style="Normal" xid="2534" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad iterations value\n");</p>
<p style="Normal" xid="2535" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2536" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2537" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2538" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2539" props="text-align:left; dom-dir:ltr">    /* Calculate pi using statistical methode across all iterations*/</p>
<p style="Normal" xid="2540" props="text-align:left; dom-dir:ltr">    for(i=0; i&lt;iterations; i++){</p>
<p style="Normal" xid="2541" props="text-align:left; dom-dir:ltr">	x = (random() % (RADIUS * 2)) - RADIUS;</p>
<p style="Normal" xid="2542" props="text-align:left; dom-dir:ltr">	y = (random() % (RADIUS * 2)) - RADIUS;</p>
<p style="Normal" xid="2543" props="text-align:left; dom-dir:ltr">	if(zeroDist(x,y) &lt; RADIUS){</p>
<p style="Normal" xid="2544" props="text-align:left; dom-dir:ltr">	    inCircle++;</p>
<p style="Normal" xid="2545" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2546" props="text-align:left; dom-dir:ltr">	inSquare++;</p>
<p style="Normal" xid="2547" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2548" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2549" props="text-align:left; dom-dir:ltr">    /* Finish calculation */</p>
<p style="Normal" xid="2550" props="text-align:left; dom-dir:ltr">    pCircle = inCircle/inSquare;</p>
<p style="Normal" xid="2551" props="text-align:left; dom-dir:ltr">    piCalc = pCircle * 4.0;</p>
<p style="Normal" xid="2552" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2553" props="text-align:left; dom-dir:ltr">    /* Print result */</p>
<p style="Normal" xid="2554" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "pi = %f\n", piCalc);</p>
<p style="Normal" xid="2555" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2556" props="text-align:left; dom-dir:ltr">    return 0;</p>
<p style="Normal" xid="2557" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2558" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2559" props="text-align:left; dom-dir:ltr"><c></c>-rw.c-</p>
<p style="Normal" xid="2484" props="text-align:left; dom-dir:ltr">/*</p>
<p style="Normal" xid="2560" props="text-align:left; dom-dir:ltr"> * File: rw.c</p>
<p style="Normal" xid="2561" props="text-align:left; dom-dir:ltr"> * Author: Andy Sayler</p>
<p style="Normal" xid="2562" props="text-align:left; dom-dir:ltr"> * Project: CSCI 3753 Programming Assignment 3</p>
<p style="Normal" xid="2563" props="text-align:left; dom-dir:ltr"> * Create Date: 2012/03/19</p>
<p style="Normal" xid="2564" props="text-align:left; dom-dir:ltr"> * Modify Date: 2012/03/20</p>
<p style="Normal" xid="2565" props="text-align:left; dom-dir:ltr"> * Description: A small i/o bound program to copy N bytes from an input</p>
<p style="Normal" xid="2566" props="text-align:left; dom-dir:ltr"> *              file to an output file. May read the input file multiple</p>
<p style="Normal" xid="2567" props="text-align:left; dom-dir:ltr"> *              times if N is larger than the size of the input file.</p>
<p style="Normal" xid="2568" props="text-align:left; dom-dir:ltr"> */</p>
<p style="Normal" xid="2569" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2570" props="text-align:left; dom-dir:ltr">/* Include Flags */</p>
<p style="Normal" xid="2571" props="text-align:left; dom-dir:ltr">#define _GNU_SOURCE</p>
<p style="Normal" xid="2572" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2573" props="text-align:left; dom-dir:ltr">/* System Includes */</p>
<p style="Normal" xid="2574" props="text-align:left; dom-dir:ltr">#include &lt;stdlib.h&gt;</p>
<p style="Normal" xid="2575" props="text-align:left; dom-dir:ltr">#include &lt;stdio.h&gt;</p>
<p style="Normal" xid="2576" props="text-align:left; dom-dir:ltr">#include &lt;unistd.h&gt;</p>
<p style="Normal" xid="2577" props="text-align:left; dom-dir:ltr">#include &lt;errno.h&gt;</p>
<p style="Normal" xid="2578" props="text-align:left; dom-dir:ltr">#include &lt;sched.h&gt;</p>
<p style="Normal" xid="2579" props="text-align:left; dom-dir:ltr">#include &lt;fcntl.h&gt;</p>
<p style="Normal" xid="2580" props="text-align:left; dom-dir:ltr">#include &lt;string.h&gt;</p>
<p style="Normal" xid="2581" props="text-align:left; dom-dir:ltr">#include &lt;sys/types.h&gt;</p>
<p style="Normal" xid="2582" props="text-align:left; dom-dir:ltr">#include &lt;sys/stat.h&gt;</p>
<p style="Normal" xid="2583" props="text-align:left; dom-dir:ltr">#include &lt;sys/wait.h&gt;</p>
<p style="Normal" xid="2584" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2585" props="text-align:left; dom-dir:ltr">/* Local Defines */</p>
<p style="Normal" xid="2586" props="text-align:left; dom-dir:ltr">#define MAXFILENAMELENGTH 80</p>
<p style="Normal" xid="2587" props="text-align:left; dom-dir:ltr">#define DEFAULT_INPUTFILENAME "rwinput"</p>
<p style="Normal" xid="2588" props="text-align:left; dom-dir:ltr">#define DEFAULT_OUTPUTFILENAMEBASE "rwoutput"</p>
<p style="Normal" xid="2589" props="text-align:left; dom-dir:ltr">#define DEFAULT_BLOCKSIZE 1024</p>
<p style="Normal" xid="2590" props="text-align:left; dom-dir:ltr">#define DEFAULT_TRANSFERSIZE 1024*100</p>
<p style="Normal" xid="2591" props="text-align:left; dom-dir:ltr">#define DEFAULT_PROCESSES 1</p>
<p style="Normal" xid="2592" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2593" props="text-align:left; dom-dir:ltr">int main(int argc, char* argv[]){</p>
<p style="Normal" xid="2594" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2595" props="text-align:left; dom-dir:ltr">    int rv;</p>
<p style="Normal" xid="2596" props="text-align:left; dom-dir:ltr">    int inputFD;</p>
<p style="Normal" xid="2597" props="text-align:left; dom-dir:ltr">    int outputFD;</p>
<p style="Normal" xid="2598" props="text-align:left; dom-dir:ltr">    int status;</p>
<p style="Normal" xid="2599" props="text-align:left; dom-dir:ltr">    int policy;</p>
<p style="Normal" xid="2600" props="text-align:left; dom-dir:ltr">    long processes;</p>
<p style="Normal" xid="2601" props="text-align:left; dom-dir:ltr">    struct sched_param param;</p>
<p style="Normal" xid="2602" props="text-align:left; dom-dir:ltr">    char inputFilename[MAXFILENAMELENGTH];</p>
<p style="Normal" xid="2603" props="text-align:left; dom-dir:ltr">    char outputFilename[MAXFILENAMELENGTH];</p>
<p style="Normal" xid="2604" props="text-align:left; dom-dir:ltr">    char outputFilenameBase[MAXFILENAMELENGTH];</p>
<p style="Normal" xid="2605" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2606" props="text-align:left; dom-dir:ltr">    ssize_t transfersize = 0;</p>
<p style="Normal" xid="2607" props="text-align:left; dom-dir:ltr">    ssize_t blocksize = 0; </p>
<p style="Normal" xid="2608" props="text-align:left; dom-dir:ltr">    char* transferBuffer = NULL;</p>
<p style="Normal" xid="2609" props="text-align:left; dom-dir:ltr">    ssize_t buffersize;</p>
<p style="Normal" xid="2610" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2611" props="text-align:left; dom-dir:ltr">    ssize_t bytesRead = 0;</p>
<p style="Normal" xid="2612" props="text-align:left; dom-dir:ltr">    ssize_t totalBytesRead = 0;</p>
<p style="Normal" xid="2613" props="text-align:left; dom-dir:ltr">    int totalReads = 0;</p>
<p style="Normal" xid="2614" props="text-align:left; dom-dir:ltr">    ssize_t bytesWritten = 0;</p>
<p style="Normal" xid="2615" props="text-align:left; dom-dir:ltr">    ssize_t totalBytesWritten = 0;</p>
<p style="Normal" xid="2616" props="text-align:left; dom-dir:ltr">    int totalWrites = 0;</p>
<p style="Normal" xid="2617" props="text-align:left; dom-dir:ltr">    int inputFileResets = 0;</p>
<p style="Normal" xid="2618" props="text-align:left; dom-dir:ltr">    </p>
<p style="Normal" xid="2619" props="text-align:left; dom-dir:ltr">    /* Process program arguments to select run-time parameters */</p>
<p style="Normal" xid="2620" props="text-align:left; dom-dir:ltr">    /* Set supplied transfer size or default if not supplied */</p>
<p style="Normal" xid="2621" props="text-align:left; dom-dir:ltr">    if(argc &lt; 2){</p>
<p style="Normal" xid="2622" props="text-align:left; dom-dir:ltr">	transfersize = DEFAULT_TRANSFERSIZE;</p>
<p style="Normal" xid="2623" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2624" props="text-align:left; dom-dir:ltr">    else{</p>
<p style="Normal" xid="2625" props="text-align:left; dom-dir:ltr">	transfersize = atol(argv[1]);</p>
<p style="Normal" xid="2626" props="text-align:left; dom-dir:ltr">	if(transfersize &lt; 1){</p>
<p style="Normal" xid="2627" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad transfersize value\n");</p>
<p style="Normal" xid="2628" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2629" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2630" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2631" props="text-align:left; dom-dir:ltr">    /* Set supplied block size or default if not supplied */</p>
<p style="Normal" xid="2632" props="text-align:left; dom-dir:ltr">    if(argc &lt; 3){</p>
<p style="Normal" xid="2633" props="text-align:left; dom-dir:ltr">	blocksize = DEFAULT_BLOCKSIZE;</p>
<p style="Normal" xid="2634" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2635" props="text-align:left; dom-dir:ltr">    else{</p>
<p style="Normal" xid="2636" props="text-align:left; dom-dir:ltr">	blocksize = atol(argv[2]);</p>
<p style="Normal" xid="2637" props="text-align:left; dom-dir:ltr">	if(blocksize &lt; 1){</p>
<p style="Normal" xid="2638" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad blocksize value\n");</p>
<p style="Normal" xid="2639" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2640" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2641" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2642" props="text-align:left; dom-dir:ltr">    /* Set supplied input filename or default if not supplied */</p>
<p style="Normal" xid="2643" props="text-align:left; dom-dir:ltr">    if(argc &lt; 4){</p>
<p style="Normal" xid="2644" props="text-align:left; dom-dir:ltr">	if(strnlen(DEFAULT_INPUTFILENAME, MAXFILENAMELENGTH) &gt;= MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2645" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Default input filename too long\n");</p>
<p style="Normal" xid="2646" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2647" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2648" props="text-align:left; dom-dir:ltr">	strncpy(inputFilename, DEFAULT_INPUTFILENAME, MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2649" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2650" props="text-align:left; dom-dir:ltr">    else{</p>
<p style="Normal" xid="2651" props="text-align:left; dom-dir:ltr">	if(strnlen(argv[3], MAXFILENAMELENGTH) &gt;= MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2652" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Input filename too long\n");</p>
<p style="Normal" xid="2653" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2654" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2655" props="text-align:left; dom-dir:ltr">	strncpy(inputFilename, argv[3], MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2656" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2657" props="text-align:left; dom-dir:ltr">    /* Set supplied output filename base or default if not supplied */</p>
<p style="Normal" xid="2658" props="text-align:left; dom-dir:ltr">    if(argc &lt; 5){</p>
<p style="Normal" xid="2659" props="text-align:left; dom-dir:ltr">	if(strnlen(DEFAULT_OUTPUTFILENAMEBASE, MAXFILENAMELENGTH) &gt;= MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2660" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Default output filename base too long\n");</p>
<p style="Normal" xid="2661" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2662" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2663" props="text-align:left; dom-dir:ltr">	strncpy(outputFilenameBase, DEFAULT_OUTPUTFILENAMEBASE, MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2664" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2665" props="text-align:left; dom-dir:ltr">    else{</p>
<p style="Normal" xid="2666" props="text-align:left; dom-dir:ltr">	if(strnlen(argv[4], MAXFILENAMELENGTH) &gt;= MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2667" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Output filename base is too long\n");</p>
<p style="Normal" xid="2668" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2669" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2670" props="text-align:left; dom-dir:ltr">	strncpy(outputFilenameBase, argv[4], MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2671" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2672" props="text-align:left; dom-dir:ltr">    /* Set default policy if not supplied */</p>
<p style="Normal" xid="2673" props="text-align:left; dom-dir:ltr">    if(argc &lt; 7){</p>
<p style="Normal" xid="2674" props="text-align:left; dom-dir:ltr">	policy = SCHED_OTHER;</p>
<p style="Normal" xid="2675" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2676" props="text-align:left; dom-dir:ltr">    /* Set policy if supplied */</p>
<p style="Normal" xid="2677" props="text-align:left; dom-dir:ltr">    if(argc &gt; 6){</p>
<p style="Normal" xid="2678" props="text-align:left; dom-dir:ltr">	if(!strcmp(argv[6], "SCHED_OTHER")){</p>
<p style="Normal" xid="2679" props="text-align:left; dom-dir:ltr">	    policy = SCHED_OTHER;</p>
<p style="Normal" xid="2680" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2681" props="text-align:left; dom-dir:ltr">	else if(!strcmp(argv[6], "SCHED_FIFO")){</p>
<p style="Normal" xid="2682" props="text-align:left; dom-dir:ltr">	    policy = SCHED_FIFO;</p>
<p style="Normal" xid="2683" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2684" props="text-align:left; dom-dir:ltr">	else if(!strcmp(argv[6], "SCHED_RR")){</p>
<p style="Normal" xid="2685" props="text-align:left; dom-dir:ltr">	    policy = SCHED_RR;</p>
<p style="Normal" xid="2686" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2687" props="text-align:left; dom-dir:ltr">	else{</p>
<p style="Normal" xid="2688" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Unhandeled scheduling policy\n");</p>
<p style="Normal" xid="2689" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2690" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2691" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2692" props="text-align:left; dom-dir:ltr">    /* Set process to max prioty for given scheduler */</p>
<p style="Normal" xid="2693" props="text-align:left; dom-dir:ltr">    param.sched_priority = sched_get_priority_max(policy);</p>
<p style="Normal" xid="2694" props="text-align:left; dom-dir:ltr">    /* Set new scheduler policy */</p>
<p style="Normal" xid="2695" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Current Scheduling Policy: %d\n", sched_getscheduler(0));</p>
<p style="Normal" xid="2696" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Setting Scheduling Policy to: %d\n", policy);</p>
<p style="Normal" xid="2697" props="text-align:left; dom-dir:ltr">    if(sched_setscheduler(0, policy, &amp;param)){</p>
<p style="Normal" xid="2698" props="text-align:left; dom-dir:ltr">	perror("Error setting scheduler policy");</p>
<p style="Normal" xid="2699" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2700" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2701" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "New Scheduling Policy: %d\n", sched_getscheduler(0));</p>
<p style="Normal" xid="2702" props="text-align:left; dom-dir:ltr">    </p>
<p style="Normal" xid="2703" props="text-align:left; dom-dir:ltr">    /* Modification for forks */</p>
<p style="Normal" xid="2704" props="text-align:left; dom-dir:ltr">    if(argc &lt; 6){</p>
<p style="Normal" xid="2705" props="text-align:left; dom-dir:ltr">	processes = DEFAULT_PROCESSES;</p>
<p style="Normal" xid="2706" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2707" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2708" props="text-align:left; dom-dir:ltr">	/* Modification for forks */</p>
<p style="Normal" xid="2709" props="text-align:left; dom-dir:ltr">    if(argc &gt; 5){</p>
<p style="Normal" xid="2710" props="text-align:left; dom-dir:ltr">		processes = atol(argv[5]);</p>
<p style="Normal" xid="2711" props="text-align:left; dom-dir:ltr">		if(processes &lt; 1){</p>
<p style="Normal" xid="2712" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad processes value\n");</p>
<p style="Normal" xid="2713" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2714" props="text-align:left; dom-dir:ltr">		}</p>
<p style="Normal" xid="2715" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2716" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2717" props="text-align:left; dom-dir:ltr">	/* Modification for forks */</p>
<p style="Normal" xid="2718" props="text-align:left; dom-dir:ltr">    int f;</p>
<p style="Normal" xid="2719" props="text-align:left; dom-dir:ltr">    int g;</p>
<p style="Normal" xid="2720" props="text-align:left; dom-dir:ltr">    for(f=0; f&lt;processes; f++){</p>
<p style="Normal" xid="2721" props="text-align:left; dom-dir:ltr">		if(fork() == 0){</p>
<p style="Normal" xid="2722" props="text-align:left; dom-dir:ltr">			execve(argv[1],argv, NULL);</p>
<p style="Normal" xid="2723" props="text-align:left; dom-dir:ltr">		}</p>
<p style="Normal" xid="2724" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2725" props="text-align:left; dom-dir:ltr">	for(g=0; g&lt;processes; g++){</p>
<p style="Normal" xid="2726" props="text-align:left; dom-dir:ltr">		waitpid(0, &amp;status, 0);</p>
<p style="Normal" xid="2727" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2728" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2729" props="text-align:left; dom-dir:ltr">    /* Confirm blocksize is multiple of and less than transfersize*/</p>
<p style="Normal" xid="2730" props="text-align:left; dom-dir:ltr">    if(blocksize &gt; transfersize){</p>
<p style="Normal" xid="2731" props="text-align:left; dom-dir:ltr">	fprintf(stderr, "blocksize can not exceed transfersize\n");</p>
<p style="Normal" xid="2732" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2733" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2734" props="text-align:left; dom-dir:ltr">    if(transfersize % blocksize){</p>
<p style="Normal" xid="2735" props="text-align:left; dom-dir:ltr">	fprintf(stderr, "blocksize must be multiple of transfersize\n");</p>
<p style="Normal" xid="2736" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2737" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2738" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2739" props="text-align:left; dom-dir:ltr">    /* Allocate buffer space */</p>
<p style="Normal" xid="2740" props="text-align:left; dom-dir:ltr">    buffersize = blocksize;</p>
<p style="Normal" xid="2741" props="text-align:left; dom-dir:ltr">    if(!(transferBuffer = malloc(buffersize*sizeof(*transferBuffer)))){</p>
<p style="Normal" xid="2742" props="text-align:left; dom-dir:ltr">	perror("Failed to allocate transfer buffer");</p>
<p style="Normal" xid="2743" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2744" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2745" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2746" props="text-align:left; dom-dir:ltr">    /* Open Input File Descriptor in Read Only mode */</p>
<p style="Normal" xid="2747" props="text-align:left; dom-dir:ltr">    if((inputFD = open(inputFilename, O_RDONLY | O_SYNC)) &lt; 0){</p>
<p style="Normal" xid="2748" props="text-align:left; dom-dir:ltr">	perror("Failed to open input file");</p>
<p style="Normal" xid="2749" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2750" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2751" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2752" props="text-align:left; dom-dir:ltr">    /* Open Output File Descriptor in Write Only mode with standard permissions*/</p>
<p style="Normal" xid="2753" props="text-align:left; dom-dir:ltr">    rv = snprintf(outputFilename, MAXFILENAMELENGTH, "%s-%d",</p>
<p style="Normal" xid="2754" props="text-align:left; dom-dir:ltr">		  outputFilenameBase, getpid());    </p>
<p style="Normal" xid="2755" props="text-align:left; dom-dir:ltr">    if(rv &gt; MAXFILENAMELENGTH){</p>
<p style="Normal" xid="2756" props="text-align:left; dom-dir:ltr">	fprintf(stderr, "Output filenmae length exceeds limit of %d characters.\n",</p>
<p style="Normal" xid="2757" props="text-align:left; dom-dir:ltr">		MAXFILENAMELENGTH);</p>
<p style="Normal" xid="2758" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2759" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2760" props="text-align:left; dom-dir:ltr">    else if(rv &lt; 0){</p>
<p style="Normal" xid="2761" props="text-align:left; dom-dir:ltr">	perror("Failed to generate output filename");</p>
<p style="Normal" xid="2762" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2763" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2764" props="text-align:left; dom-dir:ltr">    if((outputFD =</p>
<p style="Normal" xid="2765" props="text-align:left; dom-dir:ltr">	open(outputFilename,</p>
<p style="Normal" xid="2766" props="text-align:left; dom-dir:ltr">	     O_WRONLY | O_CREAT | O_TRUNC | O_SYNC,</p>
<p style="Normal" xid="2767" props="text-align:left; dom-dir:ltr">	     S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH)) &lt; 0){</p>
<p style="Normal" xid="2768" props="text-align:left; dom-dir:ltr">	perror("Failed to open output file");</p>
<p style="Normal" xid="2769" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2770" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2771" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2772" props="text-align:left; dom-dir:ltr">    /* Print Status */</p>
<p style="Normal" xid="2773" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Reading from %s and writing to %s\n",</p>
<p style="Normal" xid="2774" props="text-align:left; dom-dir:ltr">	    inputFilename, outputFilename);</p>
<p style="Normal" xid="2775" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2776" props="text-align:left; dom-dir:ltr">    /* Read from input file and write to output file*/</p>
<p style="Normal" xid="2777" props="text-align:left; dom-dir:ltr">    do{</p>
<p style="Normal" xid="2778" props="text-align:left; dom-dir:ltr">	/* Read transfersize bytes from input file*/</p>
<p style="Normal" xid="2779" props="text-align:left; dom-dir:ltr">	bytesRead = read(inputFD, transferBuffer, buffersize);</p>
<p style="Normal" xid="2780" props="text-align:left; dom-dir:ltr">	if(bytesRead &lt; 0){</p>
<p style="Normal" xid="2781" props="text-align:left; dom-dir:ltr">	    perror("Error reading input file");</p>
<p style="Normal" xid="2782" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2783" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2784" props="text-align:left; dom-dir:ltr">	else{</p>
<p style="Normal" xid="2785" props="text-align:left; dom-dir:ltr">	    totalBytesRead += bytesRead;</p>
<p style="Normal" xid="2786" props="text-align:left; dom-dir:ltr">	    totalReads++;</p>
<p style="Normal" xid="2787" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2788" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2789" props="text-align:left; dom-dir:ltr">	/* If all bytes were read, write to output file*/</p>
<p style="Normal" xid="2790" props="text-align:left; dom-dir:ltr">	if(bytesRead == blocksize){</p>
<p style="Normal" xid="2791" props="text-align:left; dom-dir:ltr">	    bytesWritten = write(outputFD, transferBuffer, bytesRead);</p>
<p style="Normal" xid="2792" props="text-align:left; dom-dir:ltr">	    if(bytesWritten &lt; 0){</p>
<p style="Normal" xid="2793" props="text-align:left; dom-dir:ltr">		perror("Error writing output file");</p>
<p style="Normal" xid="2794" props="text-align:left; dom-dir:ltr">		exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2795" props="text-align:left; dom-dir:ltr">	    }</p>
<p style="Normal" xid="2796" props="text-align:left; dom-dir:ltr">	    else{</p>
<p style="Normal" xid="2797" props="text-align:left; dom-dir:ltr">		totalBytesWritten += bytesWritten;</p>
<p style="Normal" xid="2798" props="text-align:left; dom-dir:ltr">		totalWrites++;</p>
<p style="Normal" xid="2799" props="text-align:left; dom-dir:ltr">	    }</p>
<p style="Normal" xid="2800" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2801" props="text-align:left; dom-dir:ltr">	/* Otherwise assume we have reached the end of the input file and reset */</p>
<p style="Normal" xid="2802" props="text-align:left; dom-dir:ltr">	else{</p>
<p style="Normal" xid="2803" props="text-align:left; dom-dir:ltr">	    if(lseek(inputFD, 0, SEEK_SET)){</p>
<p style="Normal" xid="2804" props="text-align:left; dom-dir:ltr">		perror("Error resetting to beginning of file");</p>
<p style="Normal" xid="2805" props="text-align:left; dom-dir:ltr">		exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2806" props="text-align:left; dom-dir:ltr">	    }</p>
<p style="Normal" xid="2807" props="text-align:left; dom-dir:ltr">	    inputFileResets++;</p>
<p style="Normal" xid="2808" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2809" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2810" props="text-align:left; dom-dir:ltr">    }while(totalBytesWritten &lt; transfersize);</p>
<p style="Normal" xid="2811" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2812" props="text-align:left; dom-dir:ltr">    /* Output some possibly helpfull info to make it seem like we were doing stuff */</p>
<p style="Normal" xid="2813" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Read:    %zd bytes in %d reads\n",</p>
<p style="Normal" xid="2814" props="text-align:left; dom-dir:ltr">	    totalBytesRead, totalReads);</p>
<p style="Normal" xid="2815" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Written: %zd bytes in %d writes\n",</p>
<p style="Normal" xid="2816" props="text-align:left; dom-dir:ltr">	    totalBytesWritten, totalWrites);</p>
<p style="Normal" xid="2817" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Read input file in %d pass%s\n",</p>
<p style="Normal" xid="2818" props="text-align:left; dom-dir:ltr">	    (inputFileResets + 1), (inputFileResets ? "es" : ""));</p>
<p style="Normal" xid="2819" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Processed %zd bytes in blocks of %zd bytes\n",</p>
<p style="Normal" xid="2820" props="text-align:left; dom-dir:ltr">	    transfersize, blocksize);</p>
<p style="Normal" xid="2821" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2822" props="text-align:left; dom-dir:ltr">    /* Free Buffer */</p>
<p style="Normal" xid="2823" props="text-align:left; dom-dir:ltr">    free(transferBuffer);</p>
<p style="Normal" xid="2824" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2825" props="text-align:left; dom-dir:ltr">    /* Close Output File Descriptor */</p>
<p style="Normal" xid="2826" props="text-align:left; dom-dir:ltr">    if(close(outputFD)){</p>
<p style="Normal" xid="2827" props="text-align:left; dom-dir:ltr">	perror("Failed to close output file");</p>
<p style="Normal" xid="2828" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2829" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2830" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2831" props="text-align:left; dom-dir:ltr">    /* Close Input File Descriptor */</p>
<p style="Normal" xid="2832" props="text-align:left; dom-dir:ltr">    if(close(inputFD)){</p>
<p style="Normal" xid="2833" props="text-align:left; dom-dir:ltr">	perror("Failed to close input file");</p>
<p style="Normal" xid="2834" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2835" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2836" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2837" props="text-align:left; dom-dir:ltr">    return EXIT_SUCCESS;</p>
<p style="Normal" xid="2838" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2076" props="text-align:left; dom-dir:ltr"> </p>
<p style="Normal" xid="2839" props="text-align:left; dom-dir:ltr">-MakeFile-</p>
<p style="Normal" xid="2840" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2841" props="text-align:left; dom-dir:ltr">CC = gcc</p>
<p style="Normal" xid="2842" props="text-align:left; dom-dir:ltr">CFLAGS = -c -g -Wall -Wextra</p>
<p style="Normal" xid="2843" props="text-align:left; dom-dir:ltr">LFLAGS = -g -Wall -Wextra</p>
<p style="Normal" xid="2844" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2845" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2846" props="text-align:left; dom-dir:ltr">INPUTFILESIZEMEGABYTES = 1</p>
<p style="Normal" xid="2847" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2848" props="text-align:left; dom-dir:ltr">KILO = 1024</p>
<p style="Normal" xid="2849" props="text-align:left; dom-dir:ltr">MEGA = $(shell echo $(KILO)\*$(KILO) | bc)</p>
<p style="Normal" xid="2850" props="text-align:left; dom-dir:ltr">INPUTFILESIZEBYTES = $(shell echo $(MEGA)\*$(INPUTFILESIZEMEGABYTES) | bc)</p>
<p style="Normal" xid="2851" props="text-align:left; dom-dir:ltr">INPUTBLOCKSIZEBYTES = $(KILO)</p>
<p style="Normal" xid="2852" props="text-align:left; dom-dir:ltr">INPUTBLOCKS = $(shell echo $(INPUTFILESIZEBYTES)\/$(INPUTBLOCKSIZEBYTES) | bc)</p>
<p style="Normal" xid="2853" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2854" props="text-align:left; dom-dir:ltr">.PHONY: all clean</p>
<p style="Normal" xid="2855" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2856" props="text-align:left; dom-dir:ltr">all: pi pi-sched rw mixed</p>
<p style="Normal" xid="2857" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2858" props="text-align:left; dom-dir:ltr">pi: pi.o</p>
<p style="Normal" xid="2859" props="text-align:left; dom-dir:ltr">	$(CC) $(LFLAGS) $^ -o $@ -lm</p>
<p style="Normal" xid="2860" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2861" props="text-align:left; dom-dir:ltr">pi-sched: pi-sched.o</p>
<p style="Normal" xid="2862" props="text-align:left; dom-dir:ltr">	$(CC) $(LFLAGS) $^ -o $@ -lm</p>
<p style="Normal" xid="2863" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2864" props="text-align:left; dom-dir:ltr">rw: rw.o rwinput</p>
<p style="Normal" xid="2865" props="text-align:left; dom-dir:ltr">	$(CC) $(LFLAGS) rw.o -o $@ -lm</p>
<p style="Normal" xid="2866" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2867" props="text-align:left; dom-dir:ltr">mixed: mixed.o rwinput</p>
<p style="Normal" xid="2868" props="text-align:left; dom-dir:ltr">	$(CC) $(LFLAGS) mixed.o -o $@ -lm</p>
<p style="Normal" xid="2869" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2870" props="text-align:left; dom-dir:ltr">pi.o: pi.c</p>
<p style="Normal" xid="2871" props="text-align:left; dom-dir:ltr">	$(CC) $(CFLAGS) $&lt;</p>
<p style="Normal" xid="2872" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2873" props="text-align:left; dom-dir:ltr">pi-sched.o: pi-sched.c</p>
<p style="Normal" xid="2874" props="text-align:left; dom-dir:ltr">	$(CC) $(CFLAGS) $&lt;</p>
<p style="Normal" xid="2875" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2876" props="text-align:left; dom-dir:ltr">rw.o: rw.c</p>
<p style="Normal" xid="2877" props="text-align:left; dom-dir:ltr">	$(CC) $(CFLAGS) $&lt;</p>
<p style="Normal" xid="2878" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2879" props="text-align:left; dom-dir:ltr">mixed.o: mixed.c</p>
<p style="Normal" xid="2880" props="text-align:left; dom-dir:ltr">	$(CC) $(CFLAGS) $&lt;</p>
<p style="Normal" xid="2881" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2882" props="text-align:left; dom-dir:ltr">rwinput: Makefile</p>
<p style="Normal" xid="2883" props="text-align:left; dom-dir:ltr">	dd if=/dev/urandom of=./rwinput bs=$(INPUTBLOCKSIZEBYTES) count=$(INPUTBLOCKS)</p>
<p style="Normal" xid="2884" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2885" props="text-align:left; dom-dir:ltr">clean: testclean</p>
<p style="Normal" xid="2886" props="text-align:left; dom-dir:ltr">	rm -f pi pi-sched rw mixed</p>
<p style="Normal" xid="2887" props="text-align:left; dom-dir:ltr">	rm -f rwinput</p>
<p style="Normal" xid="2888" props="text-align:left; dom-dir:ltr">	rm -f *.o</p>
<p style="Normal" xid="2889" props="text-align:left; dom-dir:ltr">	rm -f *~</p>
<p style="Normal" xid="2890" props="text-align:left; dom-dir:ltr">	rm -f handout/*~</p>
<p style="Normal" xid="2891" props="text-align:left; dom-dir:ltr">	rm -f handout/*.log</p>
<p style="Normal" xid="2892" props="text-align:left; dom-dir:ltr">	rm -f handout/*.aux</p>
<p style="Normal" xid="2893" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2894" props="text-align:left; dom-dir:ltr">testclean:</p>
<p style="Normal" xid="2895" props="text-align:left; dom-dir:ltr">	rm -f rwoutput*</p>
<p style="Normal" xid="2896" props="text-align:left; dom-dir:ltr">	rm -f output*</p>
<p style="Normal" xid="2897" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2898" props="text-align:left; dom-dir:ltr">-pi_sched.c-</p>
<p style="Normal" xid="2899" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2900" props="text-align:left; dom-dir:ltr">/*</p>
<p style="Normal" xid="2901" props="text-align:left; dom-dir:ltr"> * File: pi-sched.c</p>
<p style="Normal" xid="2902" props="text-align:left; dom-dir:ltr"> * Author: Andy Sayler</p>
<p style="Normal" xid="2903" props="text-align:left; dom-dir:ltr"> * Project: CSCI 3753 Programming Assignment 3</p>
<p style="Normal" xid="2904" props="text-align:left; dom-dir:ltr"> * Create Date: 2012/03/07</p>
<p style="Normal" xid="2905" props="text-align:left; dom-dir:ltr"> * Modify Date: 2012/03/09</p>
<p style="Normal" xid="2906" props="text-align:left; dom-dir:ltr"> * Description:</p>
<p style="Normal" xid="2907" props="text-align:left; dom-dir:ltr"> * 	This file contains a simple program for statistically</p>
<p style="Normal" xid="2908" props="text-align:left; dom-dir:ltr"> *      calculating pi using a specific scheduling policy.</p>
<p style="Normal" xid="2909" props="text-align:left; dom-dir:ltr"> */</p>
<p style="Normal" xid="2910" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2911" props="text-align:left; dom-dir:ltr">/* Local Includes */</p>
<p style="Normal" xid="2912" props="text-align:left; dom-dir:ltr">#include &lt;stdlib.h&gt;</p>
<p style="Normal" xid="2913" props="text-align:left; dom-dir:ltr">#include &lt;stdio.h&gt;</p>
<p style="Normal" xid="2914" props="text-align:left; dom-dir:ltr">#include &lt;string.h&gt;</p>
<p style="Normal" xid="2915" props="text-align:left; dom-dir:ltr">#include &lt;math.h&gt;</p>
<p style="Normal" xid="2916" props="text-align:left; dom-dir:ltr">#include &lt;errno.h&gt;</p>
<p style="Normal" xid="2917" props="text-align:left; dom-dir:ltr">#include &lt;sched.h&gt;</p>
<p style="Normal" xid="2918" props="text-align:left; dom-dir:ltr">#include &lt;sys/wait.h&gt;</p>
<p style="Normal" xid="2919" props="text-align:left; dom-dir:ltr">#include &lt;sys/types.h&gt;</p>
<p style="Normal" xid="2920" props="text-align:left; dom-dir:ltr">#include &lt;unistd.h&gt;</p>
<p style="Normal" xid="2921" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2922" props="text-align:left; dom-dir:ltr">#define DEFAULT_ITERATIONS 1000000</p>
<p style="Normal" xid="2923" props="text-align:left; dom-dir:ltr">#define RADIUS (RAND_MAX / 2)</p>
<p style="Normal" xid="2924" props="text-align:left; dom-dir:ltr">#define DEFAULT_PROCESSES 1</p>
<p style="Normal" xid="2925" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2926" props="text-align:left; dom-dir:ltr">inline double dist(double x0, double y0, double x1, double y1){</p>
<p style="Normal" xid="2927" props="text-align:left; dom-dir:ltr">    return sqrt(pow((x1-x0),2) + pow((y1-y0),2));</p>
<p style="Normal" xid="2928" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2929" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2930" props="text-align:left; dom-dir:ltr">inline double zeroDist(double x, double y){</p>
<p style="Normal" xid="2931" props="text-align:left; dom-dir:ltr">    return dist(0, 0, x, y);</p>
<p style="Normal" xid="2932" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2933" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2934" props="text-align:left; dom-dir:ltr">int main(int argc, char* argv[]){</p>
<p style="Normal" xid="2935" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2936" props="text-align:left; dom-dir:ltr">	</p>
<p style="Normal" xid="2937" props="text-align:left; dom-dir:ltr">    long i;</p>
<p style="Normal" xid="2938" props="text-align:left; dom-dir:ltr">    long iterations;</p>
<p style="Normal" xid="2939" props="text-align:left; dom-dir:ltr">    long processes;</p>
<p style="Normal" xid="2940" props="text-align:left; dom-dir:ltr">    int status;</p>
<p style="Normal" xid="2941" props="text-align:left; dom-dir:ltr">    struct sched_param param;</p>
<p style="Normal" xid="2942" props="text-align:left; dom-dir:ltr">    int policy;</p>
<p style="Normal" xid="2943" props="text-align:left; dom-dir:ltr">    double x, y;</p>
<p style="Normal" xid="2944" props="text-align:left; dom-dir:ltr">    double inCircle = 0.0;</p>
<p style="Normal" xid="2945" props="text-align:left; dom-dir:ltr">    double inSquare = 0.0;</p>
<p style="Normal" xid="2946" props="text-align:left; dom-dir:ltr">    double pCircle = 0.0;</p>
<p style="Normal" xid="2947" props="text-align:left; dom-dir:ltr">    double piCalc = 0.0;</p>
<p style="Normal" xid="2948" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2949" props="text-align:left; dom-dir:ltr">    /* Process program arguments to select iterations and policy */</p>
<p style="Normal" xid="2950" props="text-align:left; dom-dir:ltr">    /* Set default iterations if not supplied */</p>
<p style="Normal" xid="2951" props="text-align:left; dom-dir:ltr">    if(argc &lt; 2){</p>
<p style="Normal" xid="2952" props="text-align:left; dom-dir:ltr">	iterations = DEFAULT_ITERATIONS;</p>
<p style="Normal" xid="2953" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2954" props="text-align:left; dom-dir:ltr">    /* Set default policy if not supplied */</p>
<p style="Normal" xid="2955" props="text-align:left; dom-dir:ltr">    if(argc &lt; 3){</p>
<p style="Normal" xid="2956" props="text-align:left; dom-dir:ltr">	policy = SCHED_OTHER;</p>
<p style="Normal" xid="2957" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2958" props="text-align:left; dom-dir:ltr">    /* Modification for forks */</p>
<p style="Normal" xid="2959" props="text-align:left; dom-dir:ltr">    if(argc &lt; 4){</p>
<p style="Normal" xid="2960" props="text-align:left; dom-dir:ltr">	processes = DEFAULT_PROCESSES;</p>
<p style="Normal" xid="2961" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2962" props="text-align:left; dom-dir:ltr">    /* Set iterations if supplied */</p>
<p style="Normal" xid="2963" props="text-align:left; dom-dir:ltr">    if(argc &gt; 1){</p>
<p style="Normal" xid="2964" props="text-align:left; dom-dir:ltr">	iterations = atol(argv[1]);</p>
<p style="Normal" xid="2965" props="text-align:left; dom-dir:ltr">	if(iterations &lt; 1){</p>
<p style="Normal" xid="2966" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad iterations value\n");</p>
<p style="Normal" xid="2967" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2968" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2969" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2970" props="text-align:left; dom-dir:ltr">    /* Set policy if supplied */</p>
<p style="Normal" xid="2971" props="text-align:left; dom-dir:ltr">    if(argc &gt; 2){</p>
<p style="Normal" xid="2972" props="text-align:left; dom-dir:ltr">	if(!strcmp(argv[2], "SCHED_OTHER")){</p>
<p style="Normal" xid="2973" props="text-align:left; dom-dir:ltr">	    policy = SCHED_OTHER;</p>
<p style="Normal" xid="2974" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2975" props="text-align:left; dom-dir:ltr">	else if(!strcmp(argv[2], "SCHED_FIFO")){</p>
<p style="Normal" xid="2976" props="text-align:left; dom-dir:ltr">	    policy = SCHED_FIFO;</p>
<p style="Normal" xid="2977" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2978" props="text-align:left; dom-dir:ltr">	else if(!strcmp(argv[2], "SCHED_RR")){</p>
<p style="Normal" xid="2979" props="text-align:left; dom-dir:ltr">	    policy = SCHED_RR;</p>
<p style="Normal" xid="2980" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2981" props="text-align:left; dom-dir:ltr">	else{</p>
<p style="Normal" xid="2982" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Unhandeled scheduling policy\n");</p>
<p style="Normal" xid="2983" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2984" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2985" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="2986" props="text-align:left; dom-dir:ltr">    /* Modification for forks */</p>
<p style="Normal" xid="2987" props="text-align:left; dom-dir:ltr">    if(argc &gt; 3){</p>
<p style="Normal" xid="2988" props="text-align:left; dom-dir:ltr">		processes = atol(argv[3]);</p>
<p style="Normal" xid="2989" props="text-align:left; dom-dir:ltr">		if(processes &lt; 1){</p>
<p style="Normal" xid="2990" props="text-align:left; dom-dir:ltr">	    fprintf(stderr, "Bad processes value\n");</p>
<p style="Normal" xid="2991" props="text-align:left; dom-dir:ltr">	    exit(EXIT_FAILURE);</p>
<p style="Normal" xid="2992" props="text-align:left; dom-dir:ltr">		}</p>
<p style="Normal" xid="2993" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="2994" props="text-align:left; dom-dir:ltr">    </p>
<p style="Normal" xid="2995" props="text-align:left; dom-dir:ltr">    /* Set process to max prioty for given scheduler */</p>
<p style="Normal" xid="2996" props="text-align:left; dom-dir:ltr">    param.sched_priority = sched_get_priority_max(policy);</p>
<p style="Normal" xid="2997" props="text-align:left; dom-dir:ltr">    </p>
<p style="Normal" xid="2998" props="text-align:left; dom-dir:ltr">    /* Set new scheduler policy */</p>
<p style="Normal" xid="2999" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Current Scheduling Policy: %d\n", sched_getscheduler(0));</p>
<p style="Normal" xid="3000" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "Setting Scheduling Policy to: %d\n", policy);</p>
<p style="Normal" xid="3001" props="text-align:left; dom-dir:ltr">    if(sched_setscheduler(0, policy, &amp;param)){</p>
<p style="Normal" xid="3002" props="text-align:left; dom-dir:ltr">	perror("Error setting scheduler policy");</p>
<p style="Normal" xid="3003" props="text-align:left; dom-dir:ltr">	exit(EXIT_FAILURE);</p>
<p style="Normal" xid="3004" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="3005" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "New Scheduling Policy: %d\n", sched_getscheduler(0));</p>
<p style="Normal" xid="3006" props="text-align:left; dom-dir:ltr">    </p>
<p style="Normal" xid="3007" props="text-align:left; dom-dir:ltr">    /* Modification for forks */</p>
<p style="Normal" xid="3008" props="text-align:left; dom-dir:ltr">    int f;</p>
<p style="Normal" xid="3009" props="text-align:left; dom-dir:ltr">    int g;</p>
<p style="Normal" xid="3010" props="text-align:left; dom-dir:ltr">    for(f=0; f&lt;processes; f++){</p>
<p style="Normal" xid="3011" props="text-align:left; dom-dir:ltr">		if(fork() == 0){</p>
<p style="Normal" xid="3012" props="text-align:left; dom-dir:ltr">			execve(argv[1],argv, NULL);</p>
<p style="Normal" xid="3013" props="text-align:left; dom-dir:ltr">		}</p>
<p style="Normal" xid="3014" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="3015" props="text-align:left; dom-dir:ltr">	for(g=0; g&lt;processes; g++){</p>
<p style="Normal" xid="3016" props="text-align:left; dom-dir:ltr">		waitpid(0, &amp;status, 0);</p>
<p style="Normal" xid="3017" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="3018" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3019" props="text-align:left; dom-dir:ltr">    /* Calculate pi using statistical methode across all iterations*/</p>
<p style="Normal" xid="3020" props="text-align:left; dom-dir:ltr">    for(i=0; i&lt;iterations; i++){</p>
<p style="Normal" xid="3021" props="text-align:left; dom-dir:ltr">	x = (random() % (RADIUS * 2)) - RADIUS;</p>
<p style="Normal" xid="3022" props="text-align:left; dom-dir:ltr">	y = (random() % (RADIUS * 2)) - RADIUS;</p>
<p style="Normal" xid="3023" props="text-align:left; dom-dir:ltr">	if(zeroDist(x,y) &lt; RADIUS){</p>
<p style="Normal" xid="3024" props="text-align:left; dom-dir:ltr">	    inCircle++;</p>
<p style="Normal" xid="3025" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="3026" props="text-align:left; dom-dir:ltr">	inSquare++;</p>
<p style="Normal" xid="3027" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="3028" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3029" props="text-align:left; dom-dir:ltr">    /* Finish calculation */</p>
<p style="Normal" xid="3030" props="text-align:left; dom-dir:ltr">    pCircle = inCircle/inSquare;</p>
<p style="Normal" xid="3031" props="text-align:left; dom-dir:ltr">    piCalc = pCircle * 4.0;</p>
<p style="Normal" xid="3032" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3033" props="text-align:left; dom-dir:ltr">    /* Print result */</p>
<p style="Normal" xid="3034" props="text-align:left; dom-dir:ltr">    fprintf(stdout, "pi = %f\n", piCalc);</p>
<p style="Normal" xid="3035" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3036" props="text-align:left; dom-dir:ltr">    return 0;</p>
<p style="Normal" xid="3037" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="3038" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3039" props="text-align:left; dom-dir:ltr">-TestScript-</p>
<p style="Normal" xid="3042" props="text-align:left; dom-dir:ltr">#/!/bin/bash</p>
<p style="Normal" xid="3043" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3044" props="text-align:left; dom-dir:ltr">#File: testscript</p>
<p style="Normal" xid="3045" props="text-align:left; dom-dir:ltr">#Author: Andy Sayler</p>
<p style="Normal" xid="3046" props="text-align:left; dom-dir:ltr">#Project: CSCI 3753 Programming Assignment 3</p>
<p style="Normal" xid="3047" props="text-align:left; dom-dir:ltr">#Create Date: 2012/03/09</p>
<p style="Normal" xid="3048" props="text-align:left; dom-dir:ltr">#Modify Date: 2012/03/21</p>
<p style="Normal" xid="3049" props="text-align:left; dom-dir:ltr">#Description:</p>
<p style="Normal" xid="3050" props="text-align:left; dom-dir:ltr">#	A simple bash script to run a signle copy of each test case</p>
<p style="Normal" xid="3051" props="text-align:left; dom-dir:ltr">#	and gather the relevent data.</p>
<p style="Normal" xid="3052" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3053" props="text-align:left; dom-dir:ltr">ITERATIONS=100000 #100000000</p>
<p style="Normal" xid="3054" props="text-align:left; dom-dir:ltr">SML=6</p>
<p style="Normal" xid="3055" props="text-align:left; dom-dir:ltr">MED=9</p>
<p style="Normal" xid="3056" props="text-align:left; dom-dir:ltr">LRG=12</p>
<p style="Normal" xid="3057" props="text-align:left; dom-dir:ltr">BYTESTOCOPY=102400</p>
<p style="Normal" xid="3058" props="text-align:left; dom-dir:ltr">BLOCKSIZE=1024</p>
<p style="Normal" xid="3059" props="text-align:left; dom-dir:ltr">INPUTNAME=rwinput</p>
<p style="Normal" xid="3060" props="text-align:left; dom-dir:ltr">OUTPUTNAME=rwoutput</p>
<p style="Normal" xid="3061" props="text-align:left; dom-dir:ltr">INPUTFILES=names1.txt names2.txt names3.txt</p>
<p style="Normal" xid="3062" props="text-align:left; dom-dir:ltr">RESULTS=results.txt</p>
<p style="Normal" xid="3063" props="text-align:left; dom-dir:ltr">MAKE="make -s"</p>
<p style="Normal" xid="3064" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3065" props="text-align:left; dom-dir:ltr">echo Building code...</p>
<p style="Normal" xid="3066" props="text-align:left; dom-dir:ltr">$MAKE clean</p>
<p style="Normal" xid="3067" props="text-align:left; dom-dir:ltr">$MAKE</p>
<p style="Normal" xid="3068" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3069" props="text-align:left; dom-dir:ltr">echo Starting test runs...</p>
<p style="Normal" xid="3070" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3071" props="text-align:left; dom-dir:ltr">echo Calculating pi over $ITERATIONS iterations using SCHED_OTHER with 64 simultaneous processes...</p>
<p style="Normal" xid="3072" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./pi-sched $ITERATIONS SCHED_OTHER $SML &gt;&gt; output</p>
<p style="Normal" xid="3073" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3074" props="text-align:left; dom-dir:ltr">echo Calculating pi over $ITERATIONS iterations using SCHED_FIFO with 64 simultaneous processes...</p>
<p style="Normal" xid="3075" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./pi-sched $ITERATIONS SCHED_FIFO $SML &gt;&gt; output</p>
<p style="Normal" xid="3076" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3077" props="text-align:left; dom-dir:ltr">echo Calculating pi over $ITERATIONS iterations using SCHED_RR with 64 simultaneous processes...</p>
<p style="Normal" xid="3078" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./pi-sched $ITERATIONS SCHED_RR $SML &gt;&gt; output</p>
<p style="Normal" xid="3079" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3080" props="text-align:left; dom-dir:ltr">echo Copying $BYTESTOCOPY bytes in blocks of $BLOCKSIZE from rwinput to rwoutput</p>
<p style="Normal" xid="3081" props="text-align:left; dom-dir:ltr">echo using SCHED_OTHER with 64 simultaneous processes...</p>
<p style="Normal" xid="3082" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./rw $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $SML SCHED_OTHER &gt;&gt; output</p>
<p style="Normal" xid="3083" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3084" props="text-align:left; dom-dir:ltr">echo Copying $BYTESTOCOPY bytes in blocks of $BLOCKSIZE from rwinput to rwoutput</p>
<p style="Normal" xid="3085" props="text-align:left; dom-dir:ltr">echo using SCHED_FIFO with 64 simultaneous processes...</p>
<p style="Normal" xid="3086" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./rw $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $SML SCHED_FIFO &gt;&gt; output</p>
<p style="Normal" xid="3087" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3088" props="text-align:left; dom-dir:ltr">echo Copying $BYTESTOCOPY bytes in blocks of $BLOCKSIZE from rwinput to rwoutput</p>
<p style="Normal" xid="3089" props="text-align:left; dom-dir:ltr">echo using SCHED_RR with 64 simultaneous processes...</p>
<p style="Normal" xid="3090" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./rw $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $SML SCHED_RR &gt;&gt; output</p>
<p style="Normal" xid="3091" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3092" props="text-align:left; dom-dir:ltr">echo Running mixed CPU/IO bound process</p>
<p style="Normal" xid="3093" props="text-align:left; dom-dir:ltr">echo using SCHED_OTHER with 64 simultaneous processes...</p>
<p style="Normal" xid="3094" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./mixed $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $SML SCHED_OTHER $ITERATIONS &gt;&gt; output</p>
<p style="Normal" xid="3095" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3096" props="text-align:left; dom-dir:ltr">echo Running mixed CPU/IO bound process</p>
<p style="Normal" xid="3097" props="text-align:left; dom-dir:ltr">echo using SCHED_FIFO with 64 simultaneous processes...</p>
<p style="Normal" xid="3098" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./mixed $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $SML SCHED_FIFO $ITERATIONS &gt;&gt; output</p>
<p style="Normal" xid="3099" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3100" props="text-align:left; dom-dir:ltr">echo Running mixed CPU/IO bound process</p>
<p style="Normal" xid="3101" props="text-align:left; dom-dir:ltr">echo using SCHED_RR with 64 simultaneous processes...</p>
<p style="Normal" xid="3102" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./mixed $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $SML SCHED_RR $ITERATIONS &gt;&gt; output</p>
<p style="Normal" xid="3103" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3104" props="text-align:left; dom-dir:ltr">echo Calculating pi over $ITERATIONS iterations using SCHED_OTHER with 512 simultaneous processes...</p>
<p style="Normal" xid="3105" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./pi-sched $ITERATIONS SCHED_OTHER $MED &gt;&gt; output</p>
<p style="Normal" xid="3106" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3107" props="text-align:left; dom-dir:ltr">echo Calculating pi over $ITERATIONS iterations using SCHED_FIFO with 512 simultaneous processes...</p>
<p style="Normal" xid="3108" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./pi-sched $ITERATIONS SCHED_FIFO $MED &gt;&gt; output</p>
<p style="Normal" xid="3109" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3110" props="text-align:left; dom-dir:ltr">echo Calculating pi over $ITERATIONS iterations using SCHED_RR with 512 simultaneous processes...</p>
<p style="Normal" xid="3111" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./pi-sched $ITERATIONS SCHED_RR $MED &gt;&gt; output</p>
<p style="Normal" xid="3112" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3113" props="text-align:left; dom-dir:ltr">echo Copying $BYTESTOCOPY bytes in blocks of $BLOCKSIZE from rwinput to rwoutput</p>
<p style="Normal" xid="3114" props="text-align:left; dom-dir:ltr">echo using SCHED_OTHER with 512 simultaneous processes...</p>
<p style="Normal" xid="3115" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./rw $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $MED SCHED_OTHER &gt;&gt; output</p>
<p style="Normal" xid="3116" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3117" props="text-align:left; dom-dir:ltr">echo Copying $BYTESTOCOPY bytes in blocks of $BLOCKSIZE from rwinput to rwoutput</p>
<p style="Normal" xid="3118" props="text-align:left; dom-dir:ltr">echo using SCHED_FIFO with 512 simultaneous processes...</p>
<p style="Normal" xid="3119" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./rw $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $MED SCHED_FIFO &gt;&gt; output</p>
<p style="Normal" xid="3120" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3121" props="text-align:left; dom-dir:ltr">echo Copying $BYTESTOCOPY bytes in blocks of $BLOCKSIZE from rwinput to rwoutput</p>
<p style="Normal" xid="3122" props="text-align:left; dom-dir:ltr">echo using SCHED_RR with 512 simultaneous processes...</p>
<p style="Normal" xid="3123" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./rw $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $MED SCHED_RR &gt;&gt; output</p>
<p style="Normal" xid="3124" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3125" props="text-align:left; dom-dir:ltr">echo Running mixed CPU/IO bound process</p>
<p style="Normal" xid="3126" props="text-align:left; dom-dir:ltr">echo using SCHED_OTHER with 512 simultaneous processes...</p>
<p style="Normal" xid="3127" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./mixed $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $MED SCHED_OTHER $ITERATIONS &gt;&gt; output</p>
<p style="Normal" xid="3128" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3129" props="text-align:left; dom-dir:ltr">echo Running mixed CPU/IO bound process</p>
<p style="Normal" xid="3130" props="text-align:left; dom-dir:ltr">echo using SCHED_FIFO with 512 simultaneous processes...</p>
<p style="Normal" xid="3131" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./mixed $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $MED SCHED_FIFO $ITERATIONS &gt;&gt; output</p>
<p style="Normal" xid="3132" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3133" props="text-align:left; dom-dir:ltr">echo Running mixed CPU/IO bound process</p>
<p style="Normal" xid="3134" props="text-align:left; dom-dir:ltr">echo using SCHED_RR with 512 simultaneous processes...</p>
<p style="Normal" xid="3135" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./mixed $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $MED SCHED_RR $ITERATIONS &gt;&gt; output</p>
<p style="Normal" xid="3136" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3137" props="text-align:left; dom-dir:ltr">echo Calculating pi over $ITERATIONS iterations using SCHED_OTHER with 4096 simultaneous processes...</p>
<p style="Normal" xid="3138" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./pi-sched $ITERATIONS SCHED_OTHER $LRG &gt;&gt; output</p>
<p style="Normal" xid="3139" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3140" props="text-align:left; dom-dir:ltr">echo Calculating pi over $ITERATIONS iterations using SCHED_FIFO with 4096 simultaneous processes...</p>
<p style="Normal" xid="3141" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./pi-sched $ITERATIONS SCHED_FIFO $LRG &gt;&gt; output</p>
<p style="Normal" xid="3142" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3143" props="text-align:left; dom-dir:ltr">echo Calculating pi over $ITERATIONS iterations using SCHED_RR with 4096 simultaneous processes...</p>
<p style="Normal" xid="3144" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./pi-sched $ITERATIONS SCHED_RR $LRG &gt;&gt; output</p>
<p style="Normal" xid="3145" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3146" props="text-align:left; dom-dir:ltr">echo Copying $BYTESTOCOPY bytes in blocks of $BLOCKSIZE from rwinput to rwoutput</p>
<p style="Normal" xid="3147" props="text-align:left; dom-dir:ltr">echo using SCHED_OTHER with 4096 simultaneous processes...</p>
<p style="Normal" xid="3148" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./rw $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $LRG SCHED_OTHER &gt;&gt; output</p>
<p style="Normal" xid="3149" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3150" props="text-align:left; dom-dir:ltr">echo Copying $BYTESTOCOPY bytes in blocks of $BLOCKSIZE from rwinput to rwoutput</p>
<p style="Normal" xid="3151" props="text-align:left; dom-dir:ltr">echo using SCHED_FIFO with 4096 simultaneous processes...</p>
<p style="Normal" xid="3152" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./rw $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $LRG SCHED_FIFO &gt;&gt; output</p>
<p style="Normal" xid="3153" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3154" props="text-align:left; dom-dir:ltr">echo Copying $BYTESTOCOPY bytes in blocks of $BLOCKSIZE from rwinput to rwoutput</p>
<p style="Normal" xid="3155" props="text-align:left; dom-dir:ltr">echo using SCHED_RR with 4096 simultaneous processes...</p>
<p style="Normal" xid="3156" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./rw $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $LRG SCHED_RR &gt;&gt; output</p>
<p style="Normal" xid="3157" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3158" props="text-align:left; dom-dir:ltr">echo Running mixed CPU/IO bound process</p>
<p style="Normal" xid="3159" props="text-align:left; dom-dir:ltr">echo using SCHED_OTHER with 4096 simultaneous processes...</p>
<p style="Normal" xid="3160" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./mixed $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $LRG SCHED_OTHER $ITERATIONS &gt;&gt; output</p>
<p style="Normal" xid="3161" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3162" props="text-align:left; dom-dir:ltr">echo Running mixed CPU/IO bound process</p>
<p style="Normal" xid="3163" props="text-align:left; dom-dir:ltr">echo using SCHED_FIFO with 4096 simultaneous processes...</p>
<p style="Normal" xid="3164" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./mixed $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $LRG SCHED_FIFO $ITERATIONS &gt;&gt; output</p>
<p style="Normal" xid="3165" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3166" props="text-align:left; dom-dir:ltr">echo Running mixed CPU/IO bound process</p>
<p style="Normal" xid="3167" props="text-align:left; dom-dir:ltr">echo using SCHED_RR with 4096 simultaneous processes...</p>
<p style="Normal" xid="3168" props="text-align:left; dom-dir:ltr">/usr/bin/time -v sudo ./mixed $BYTESTOCOPY $BLOCKSIZE $INPUTNAME $OUTPUTNAME $LRG SCHED_RR $ITERATIONS &gt;&gt; output</p>
<p style="Normal" xid="3169" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3170" props="text-align:left; dom-dir:ltr">-util.c-</p>
<p style="Normal" xid="3171" props="text-align:left; dom-dir:ltr">/*</p>
<p style="Normal" xid="3173" props="text-align:left; dom-dir:ltr"> * File: util.c</p>
<p style="Normal" xid="3174" props="text-align:left; dom-dir:ltr"> * Author: Andy Sayler</p>
<p style="Normal" xid="3175" props="text-align:left; dom-dir:ltr"> * Project: CSCI 3753 Programming Assignment 2</p>
<p style="Normal" xid="3176" props="text-align:left; dom-dir:ltr"> * Create Date: 2012/02/01</p>
<p style="Normal" xid="3177" props="text-align:left; dom-dir:ltr"> * Modify Date: 2012/02/01</p>
<p style="Normal" xid="3178" props="text-align:left; dom-dir:ltr"> * Description:</p>
<p style="Normal" xid="3179" props="text-align:left; dom-dir:ltr"> * 	This file contains declarations of utility functions for</p>
<p style="Normal" xid="3180" props="text-align:left; dom-dir:ltr"> *      Programming Assignment 2.</p>
<p style="Normal" xid="3181" props="text-align:left; dom-dir:ltr"> *  </p>
<p style="Normal" xid="3182" props="text-align:left; dom-dir:ltr"> */</p>
<p style="Normal" xid="3183" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3184" props="text-align:left; dom-dir:ltr">#include "util.h"</p>
<p style="Normal" xid="3185" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3186" props="text-align:left; dom-dir:ltr">int dnslookup(const char* hostname, char* firstIPstr, int maxSize){</p>
<p style="Normal" xid="3187" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3188" props="text-align:left; dom-dir:ltr">    /* Local vars */</p>
<p style="Normal" xid="3189" props="text-align:left; dom-dir:ltr">    struct addrinfo* headresult = NULL;</p>
<p style="Normal" xid="3190" props="text-align:left; dom-dir:ltr">    struct addrinfo* result = NULL;</p>
<p style="Normal" xid="3191" props="text-align:left; dom-dir:ltr">    struct sockaddr_in* ipv4sock = NULL;</p>
<p style="Normal" xid="3192" props="text-align:left; dom-dir:ltr">    struct sockaddr_in6* ipv6sock = NULL;</p>
<p style="Normal" xid="3193" props="text-align:left; dom-dir:ltr">    struct in_addr* ipv4addr = NULL;</p>
<p style="Normal" xid="3194" props="text-align:left; dom-dir:ltr">    struct in6_addr* ipv6addr = NULL;</p>
<p style="Normal" xid="3195" props="text-align:left; dom-dir:ltr">    char ipv4str[INET_ADDRSTRLEN];</p>
<p style="Normal" xid="3196" props="text-align:left; dom-dir:ltr">    char ipv6str[INET6_ADDRSTRLEN];</p>
<p style="Normal" xid="3197" props="text-align:left; dom-dir:ltr">    char ipstr[INET6_ADDRSTRLEN];</p>
<p style="Normal" xid="3198" props="text-align:left; dom-dir:ltr">    int addrError = 0;</p>
<p style="Normal" xid="3199" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3200" props="text-align:left; dom-dir:ltr">    /* DEBUG: Print Hostname*/</p>
<p style="Normal" xid="3201" props="text-align:left; dom-dir:ltr">#ifdef UTIL_DEBUG</p>
<p style="Normal" xid="3202" props="text-align:left; dom-dir:ltr">    fprintf(stderr, "%s\n", hostname);</p>
<p style="Normal" xid="3203" props="text-align:left; dom-dir:ltr">#endif</p>
<p style="Normal" xid="3204" props="text-align:left; dom-dir:ltr">   </p>
<p style="Normal" xid="3205" props="text-align:left; dom-dir:ltr">    /* Lookup Hostname */</p>
<p style="Normal" xid="3206" props="text-align:left; dom-dir:ltr">    addrError = getaddrinfo(hostname, NULL, NULL, &amp;headresult);</p>
<p style="Normal" xid="3207" props="text-align:left; dom-dir:ltr">    if(addrError){</p>
<p style="Normal" xid="3208" props="text-align:left; dom-dir:ltr">	fprintf(stderr, "Error looking up Address: %s\n",</p>
<p style="Normal" xid="3209" props="text-align:left; dom-dir:ltr">		gai_strerror(addrError));</p>
<p style="Normal" xid="3210" props="text-align:left; dom-dir:ltr">	return UTIL_FAILURE;</p>
<p style="Normal" xid="3211" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="3212" props="text-align:left; dom-dir:ltr">    /* Loop Through result Linked List */</p>
<p style="Normal" xid="3213" props="text-align:left; dom-dir:ltr">    for(result=headresult; result != NULL; result = result-&gt;ai_next){</p>
<p style="Normal" xid="3214" props="text-align:left; dom-dir:ltr">	/* Extract IP Address and Convert to String */</p>
<p style="Normal" xid="3215" props="text-align:left; dom-dir:ltr">	if(result-&gt;ai_addr-&gt;sa_family == AF_INET){</p>
<p style="Normal" xid="3216" props="text-align:left; dom-dir:ltr">	    /* IPv4 Address Handling */</p>
<p style="Normal" xid="3217" props="text-align:left; dom-dir:ltr">	    ipv4sock = (struct sockaddr_in*)(result-&gt;ai_addr);</p>
<p style="Normal" xid="3218" props="text-align:left; dom-dir:ltr">	    ipv4addr = &amp;(ipv4sock-&gt;sin_addr);</p>
<p style="Normal" xid="3219" props="text-align:left; dom-dir:ltr">	    if(!inet_ntop(result-&gt;ai_family, ipv4addr,</p>
<p style="Normal" xid="3220" props="text-align:left; dom-dir:ltr">			  ipv4str, sizeof(ipv4str))){</p>
<p style="Normal" xid="3221" props="text-align:left; dom-dir:ltr">		perror("Error Converting IP to String");</p>
<p style="Normal" xid="3222" props="text-align:left; dom-dir:ltr">		return UTIL_FAILURE;</p>
<p style="Normal" xid="3223" props="text-align:left; dom-dir:ltr">	    }</p>
<p style="Normal" xid="3224" props="text-align:left; dom-dir:ltr">#ifdef UTIL_DEBUG</p>
<p style="Normal" xid="3225" props="text-align:left; dom-dir:ltr">	    fprintf(stdout, "%s\n", ipv4str);</p>
<p style="Normal" xid="3226" props="text-align:left; dom-dir:ltr">#endif</p>
<p style="Normal" xid="3227" props="text-align:left; dom-dir:ltr">	    strncpy(ipstr, ipv4str, sizeof(ipstr));</p>
<p style="Normal" xid="3228" props="text-align:left; dom-dir:ltr">	    ipstr[sizeof(ipstr)-1] = '\0';</p>
<p style="Normal" xid="3229" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="3230" props="text-align:left; dom-dir:ltr">	else if(result-&gt;ai_addr-&gt;sa_family == AF_INET6){</p>
<p style="Normal" xid="3231" props="text-align:left; dom-dir:ltr">	    /* IPv6 Handling */</p>
<p style="Normal" xid="3232" props="text-align:left; dom-dir:ltr">	    ipv6sock = (struct sockaddr_in6*)(result-&gt;ai_addr);</p>
<p style="Normal" xid="3233" props="text-align:left; dom-dir:ltr">	    ipv6addr = &amp;(ipv6sock-&gt;sin6_addr);</p>
<p style="Normal" xid="3234" props="text-align:left; dom-dir:ltr">	    if(!inet_ntop(result-&gt;ai_family, ipv6addr,</p>
<p style="Normal" xid="3235" props="text-align:left; dom-dir:ltr">			  ipv6str, sizeof(ipv6str))){</p>
<p style="Normal" xid="3236" props="text-align:left; dom-dir:ltr">		perror("Error Converting IP to String");</p>
<p style="Normal" xid="3237" props="text-align:left; dom-dir:ltr">		return UTIL_FAILURE;</p>
<p style="Normal" xid="3238" props="text-align:left; dom-dir:ltr">	}</p>
<p style="Normal" xid="3239" props="text-align:left; dom-dir:ltr">#ifdef UTIL_DEBUG</p>
<p style="Normal" xid="3240" props="text-align:left; dom-dir:ltr">			fprintf(stdout, "IPv6 Address: Not Handled\n");</p>
<p style="Normal" xid="3241" props="text-align:left; dom-dir:ltr">#endif</p>
<p style="Normal" xid="3242" props="text-align:left; dom-dir:ltr">			strncpy(ipstr, ipv6str, sizeof(ipstr));</p>
<p style="Normal" xid="3243" props="text-align:left; dom-dir:ltr">			ipstr[sizeof(ipstr)-1] = '\0';</p>
<p style="Normal" xid="3244" props="text-align:left; dom-dir:ltr">		}</p>
<p style="Normal" xid="3245" props="text-align:left; dom-dir:ltr">		else{</p>
<p style="Normal" xid="3246" props="text-align:left; dom-dir:ltr">	    /* Unhandlded Protocol Handling */</p>
<p style="Normal" xid="3247" props="text-align:left; dom-dir:ltr">#ifdef UTIL_DEBUG</p>
<p style="Normal" xid="3248" props="text-align:left; dom-dir:ltr">			fprintf(stdout, "Unknown Protocol: Not Handled\n");</p>
<p style="Normal" xid="3249" props="text-align:left; dom-dir:ltr">#endif</p>
<p style="Normal" xid="3250" props="text-align:left; dom-dir:ltr">			strncpy(ipstr, "UNHANDELED", sizeof(ipstr));</p>
<p style="Normal" xid="3251" props="text-align:left; dom-dir:ltr">			ipstr[sizeof(ipstr)-1] = '\0';</p>
<p style="Normal" xid="3252" props="text-align:left; dom-dir:ltr">		}</p>
<p style="Normal" xid="3253" props="text-align:left; dom-dir:ltr">	/* Save First IP Address */</p>
<p style="Normal" xid="3254" props="text-align:left; dom-dir:ltr">		if(result==headresult){</p>
<p style="Normal" xid="3255" props="text-align:left; dom-dir:ltr">			strncpy(firstIPstr, ipstr, maxSize);</p>
<p style="Normal" xid="3256" props="text-align:left; dom-dir:ltr">			firstIPstr[maxSize-1] = '\0';</p>
<p style="Normal" xid="3257" props="text-align:left; dom-dir:ltr">		}</p>
<p style="Normal" xid="3258" props="text-align:left; dom-dir:ltr">    }</p>
<p style="Normal" xid="3259" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3260" props="text-align:left; dom-dir:ltr">    /* Cleanup */</p>
<p style="Normal" xid="3261" props="text-align:left; dom-dir:ltr">    freeaddrinfo(headresult);</p>
<p style="Normal" xid="3262" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3263" props="text-align:left; dom-dir:ltr">    return UTIL_SUCCESS;</p>
<p style="Normal" xid="3264" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="3265" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3266" props="text-align:left; dom-dir:ltr">-util.h-</p>
<p style="Normal" xid="3269" props="text-align:left; dom-dir:ltr">/*</p>
<p style="Normal" xid="3271" props="text-align:left; dom-dir:ltr"> * File: util.h</p>
<p style="Normal" xid="3272" props="text-align:left; dom-dir:ltr"> * Author: Andy Sayler</p>
<p style="Normal" xid="3273" props="text-align:left; dom-dir:ltr"> * Project: CSCI 3753 Programming Assignment 2</p>
<p style="Normal" xid="3274" props="text-align:left; dom-dir:ltr"> * Create Date: 2012/02/01</p>
<p style="Normal" xid="3275" props="text-align:left; dom-dir:ltr"> * Modify Date: 2012/02/01</p>
<p style="Normal" xid="3276" props="text-align:left; dom-dir:ltr"> * Description:</p>
<p style="Normal" xid="3277" props="text-align:left; dom-dir:ltr"> * 	This file contains declarations of utility functions for</p>
<p style="Normal" xid="3278" props="text-align:left; dom-dir:ltr"> *      Programming Assignment 2.</p>
<p style="Normal" xid="3279" props="text-align:left; dom-dir:ltr"> *  </p>
<p style="Normal" xid="3280" props="text-align:left; dom-dir:ltr"> */</p>
<p style="Normal" xid="3281" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3282" props="text-align:left; dom-dir:ltr">#ifndef UTIL_H</p>
<p style="Normal" xid="3283" props="text-align:left; dom-dir:ltr">#define UTIL_H</p>
<p style="Normal" xid="3284" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3285" props="text-align:left; dom-dir:ltr">/* Define the following to enable debug statments */</p>
<p style="Normal" xid="3286" props="text-align:left; dom-dir:ltr">// #define UTIL_DEBUG</p>
<p style="Normal" xid="3287" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3288" props="text-align:left; dom-dir:ltr">#include &lt;stdlib.h&gt;</p>
<p style="Normal" xid="3289" props="text-align:left; dom-dir:ltr">#include &lt;stdio.h&gt;</p>
<p style="Normal" xid="3290" props="text-align:left; dom-dir:ltr">#include &lt;string.h&gt;</p>
<p style="Normal" xid="3291" props="text-align:left; dom-dir:ltr">#include &lt;errno.h&gt;</p>
<p style="Normal" xid="3292" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3293" props="text-align:left; dom-dir:ltr">#include &lt;arpa/inet.h&gt;</p>
<p style="Normal" xid="3294" props="text-align:left; dom-dir:ltr">#include &lt;sys/types.h&gt;</p>
<p style="Normal" xid="3295" props="text-align:left; dom-dir:ltr">#include &lt;sys/socket.h&gt;</p>
<p style="Normal" xid="3296" props="text-align:left; dom-dir:ltr">#include &lt;netdb.h&gt;</p>
<p style="Normal" xid="3297" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3298" props="text-align:left; dom-dir:ltr">#define UTIL_FAILURE -1</p>
<p style="Normal" xid="3299" props="text-align:left; dom-dir:ltr">#define UTIL_SUCCESS 0</p>
<p style="Normal" xid="3300" props="text-align:left; dom-dir:ltr">#define NUM_ADDR 50</p>
<p style="Normal" xid="3301" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3302" props="text-align:left; dom-dir:ltr">/* Fuction to return the first IP address found</p>
<p style="Normal" xid="3303" props="text-align:left; dom-dir:ltr"> * for hostname. IP address returned as string</p>
<p style="Normal" xid="3304" props="text-align:left; dom-dir:ltr"> * firstIPstr of size maxsize</p>
<p style="Normal" xid="3305" props="text-align:left; dom-dir:ltr"> */</p>
<p style="Normal" xid="3306" props="text-align:left; dom-dir:ltr">int dnslookup(const char* hostname,</p>
<p style="Normal" xid="3307" props="text-align:left; dom-dir:ltr">	      char* firstIPstr,</p>
<p style="Normal" xid="3308" props="text-align:left; dom-dir:ltr">	      int maxSize);</p>
<p style="Normal" xid="3309" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3310" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3172" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3040" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="3041" props="text-align:left; dom-dir:ltr"><c></c></p>
</section>
<data>
<d name="95669e2e-8697-11e5-971a-9707ab5a12c2" mime-type="image/png" base64="yes">
iVBORw0KGgoAAAANSUhEUgAABYsAAAIcCAIAAAA40GY4AAAgAElEQVR4nOzdf1xUdb748bfD
EDoMoMhIg6FDFqyNphYuqJWmGOWayd2lNWql+Jptq8l1ve5tdctHW+a63taw0l2XS4t3F03s
Ut6uNYqmrShcKUsdE8xAVAgHUWEYJYbD948BAQWZMWYG9fX8C97nM/P5nA9ngPM+nx+9mpqa
BAAAAAAAwKtU3m4AAAAAAAAAGQoAAAAAANADkKEAAAAAAADep277TXFxsbfaAQAAAAAAbkiR
kZHOFFNf9r2TLwMAAAAAAOiS84MhmOUBAAAAAAC8jwwFAAAAAADwPjIUAAAAAADA+8hQAAAA
AAAA7yNDAQAAAAAAvI8MBQAAAAAA8D4yFAAAAAAAwPvIUAAAAAAAAO8jQwEAAAAAALyPDAUA
AAAAAPA+MhQAAAAAAMD7yFAAAAAAAADvI0MBAAAAAAC8jwwFAAAAAADwPjIUAAAAAADA+8hQ
AAAAAAAA7yNDAQAAAAAAvI8MBQAAAAAA8D4yFACA7qeU5ixISkpakFOqeLspnVJspXmZrzyb
lJSUlPTsKzlHbd5uEFyjlOQsmJmUtDintN7TNffcy7u+NGdxUtLMBTklbmuaYi14Z+Y1VOG9
nxcA4Dqi9nYDAAA/3NmCVb9Ny68RtTHxldSECG27g9aCVb9Ky5dxqaufj9GSmG6mVO5Y+XKG
2e74rq5o96HTj91p6LR7rKUF+fsLPs7OrxARUUfFPzUxelSsUefrmdZ6i2Ix79q9/YPsfIuI
iFoX+9ijMfeOjTForv0t60tzfr8o+4QufuGy5OE/4H1uWG7oc3ewW06ctsllv2sAAPihyFAA
wPXPWlxQWCMiYjfnZOWP/W1cKImILtSX7fnUbBe1MWXFb+NCVQ2WUot/Z51mK8lNfzvDkZtw
sBeZ/lZk+vtnHeSDuoVbk0pOv7lSmbts4aUkjojYLfnvZ+RvO5y6bF5MP6806YbnuT4HAKBH
IkMBADcK9eCoiKoi86b39t3LzYxzAqPj7g1ViYivzhDWcRGlPHfl6xnmOlFHxT+fnDjGoBER
xWL+aP3aDfnZb28btSKh85EX17Wz+97bZLb7R0351a+SRulUImItLdi965Nt53/Q2/oZEpZm
JXRPE284bupzAACuG2QoAOCGoR/38I+qj5rys/530vAko+bGvG/uJrbKE2ecKKZY9+WsM9eJ
emTKivlxoS1zOlQ647S5y+6+K/0fN+7iFY6BOfrE5OZbZRHRGmIeNsQ87N123cjocwDATY8M
BQDcMHwCjJMeNe7OMO/6YM/EoXFhnaUolNKchYuyK/SJr7d7/u9YzKJ/4usvJxj8RESUkpyF
S7ItMamrZ91+/J9bNr1nKqoT0cfOePqJqcN1KsVWujc782/tg1fWZi3d+0Hmmi1FdhF1VPzM
n02ZaLy8mGIx79iyaZ2pyC6OiffTJz0wvrWUY+WCM7GpS2eF7k9fuS7fYm+ZndHJCbabyX9Z
tY53K3GUzE+bky8iEtF61u3e6Pi2jQV28TfOfGpi6GVLTqg0hrh5i9tGGizmPbu3b25eq0L8
o+J//rMp49usVXHpRJbNvb380hmro6Y8nzx9jEHb2ucVjlH+eWmz8+Ty5jVYzLtafhYiutjE
6ZPua+6s5lNTx6aunhfTMvlEsZmzfrt0y9nY1NVzB2zr4s2vYCmvtCmGDmZeKNaCNb9Ky5N2
dbXM19Bd5dISxzoU+sRXViREqLo+X2tpwbbNWTn5FvsV59vaGFtpXsul6B8V/3Ry4hjDZRm6
Lq6xyypS62Ifn/1EvBPrjHRyeTefV/gVfVvf7vRd6/M2bKUFps1ZbdaquOJ0RGyle7Mz11x5
jXXWK6KPTZw26b6xl5112zLqqCnPJ08bfvm7dHiyjiukQHeVM3WqDS5//AEA1zV+uwPADUSl
Hzt9vE7qzP+z42vbta3lf+ZE5WXjAqoOZ/9hwdKM5ltiqcjfsOK1//q8tCD9t4veaR88ePmI
AnvprreXLHpri+PmQ+xFpozllxezHc15ddHSjOYbFMfE+78uXbQst7z9CTSePfz+ipczHHeq
9qKi0o5PULGVbH51wdK/tqQnmqtduuhV13frUMq+3F1hF/XIuNhbu/p7aS3J+eOCpX/Jbl2u
oq7IlLF0wR9zSqztSzaePZz96oLWM7YXbXnr5dW5lQ1OtMhRy6WfhYglP/uvSxcsy61URMTP
ED8jXqe2529631zTXMBmzl671aIeOfPn97i2YIYm/K4of7F/+ckHX1k66GmV1hgdrRZ7YaHZ
eumwYjUXFtpFKgr3l7XZr6F5aED0qEGd5EE6o1QWvLNkUVp2c3qi+XzfWr/vbJtCF0/s+nOb
S7GuyPTOyyt3VLZtc9fXWENl7uqXWyuyW/Kzlv7hoy626rjK5a0KG3VfuMiJ3fvbX8ZK+f7d
J0TC7xvVUQKxiz5veQ/L3nd++3Ja6xVut+S//9flG/e1/iDEfmL72799+a2rXWPNn5TWXpGK
/Oy/LF2wsm0xxbJ3zWvL212ri175a8Hpq/ZLW44FNTs9FWfaICJOf/wBANc9xlAAwI2kl8b4
k6TY3Wn5WzNM467+6NJZ9qJt29S62JT5syYaNLbS3MyVGXkW0xuLTKKOeuy3v/qX4TqxFLz7
WtpOi2mDaXxkuyfGln2ms1HxKSlTJhp1qgbLwf9eveLDonbFaszZa7OLAmNnzGsZgtFgMZvW
r92Yvy5nX2zbdRPrirbtbK2x1OLf4UNmmzn7zU1F9rYP0q2ONhdlr82OfCnZGGhIWJqV4Hiq
L7FXW4BQsVWWW0REFxbaxZQZxWb+4M1ss73tWhXN62uas9/8IHJZ20k3dUXbdooudsbsJ6Ya
dWLZn7V69ZaiL9e990XsvBitKiLhjXUJHa8c6ailqF9s0qXH+4rl4Efr/7Yhv2XxEY0xcfZD
XyzdYlq7OXpZklFjNWevM1n8jCmOMSBXefMrqG4dm/Ro3pINRVtWLDgW/9TD4++7bDsJbWRM
dGB+/sEC8/mY5j5sqCovt4s47swfMzguP0faQq2/b+SgK2u76vla9216J69CdONS5ifHGbQt
40c+br8oQ0W+yaKLTVr8RLxRJ83XWLvVWJy4xqxfvLfuS3vrVjjW0oJtm3N9rvpD7+LyHjQq
Wp9dUrH7y7LHIi4NJ2nOeXWWrOmyz0VEzu5bn5lnkZaPpKp5EMI/2ibC7Jb8HRZd7IzFHV1j
jiKOT0q/5utQJa2rq7QpdnldLdfbUemW/yCdaoODcx9/AMD1j9/vAHCD6Tf65z8zqu0VOdk7
nHos3yW1btzzv5sbZ9CoRLSGiVMm6NUioo6a8crCxOE6XxFfXUxiUmxgB+Mv1MbEVxYkxzlu
Pnx1w6cnJ0S0e7Bs/Xr79kp94ty50y7NEPHVGSdPmxAu9oMF5va3oroJc371L801GsI62nxR
sR78bLtFdPHzFiaPaxnnrzXEzV6UMlItp7Zv/9rawas6c+l+u0vnD27fbZGB8f8+P3lMyy2l
JiJu7oIUo79Ydm8/ePmJpP7u+WlGnUpEpRuVlDxFL2I/Xl7VxVPh8we377boE+bPnXppDLxK
N3zqtPv0UlNYUGwVEVFpjD9Jig0Uy64P9nzXWPl/H2w/JfopT07sdMpP51SaiKkLf58Sq1Pb
i0x/S1s0K3VVTkFpmx9wkDFmuFpsx8vPNTdcKd+/+4T6zqg71W2fnJ83Fxy0i2ZwWF/X2tA8
xWZg/OxfxDVPT/DVGeOSl7zRPqnkuD4dfXLpGmvTKuevMd1dowY7KtIaYhLmLZ7WxRqoV728
VYNiHjH6tx9OUl+2v7BCOknWiDjR56KU7tyYXyO6h2Y70hMiotIZ45KXvDunXb6pi2vM8UkJ
T5z/3LRLc0NUOuPURyfo1a3jYhyDX9rUpdINnzb3N6nj9FftFyc514Y2Z9TVxx8AcCNgDAUA
3GhUoT+ePslkNh36n0+OjE0e/oP/lQ+f8JN7Wie4q/qGDdZIhUQ/fH9E67gATWh4f8k/cbz8
nCL9Wu+TWm/5HC57sOx4um63Zy9+KvvKetXt302tnzB5dBfrAjhuhsMnjI9sf9a+obHjo9d9
mX+8vEqR7n/42jyLIX780MB2cdWtsXEj15kLrn4iqpCwwWqp6HL1AUct9uxFHXWWtJ5av9E/
/5mxMMO87q3XIqqK7APjUyZd624jKo0hbl5a7LTmBRrys9Pyc6JmvLJwaoRGJaLShIbpxH5p
mIBS9uXuCk106pMxBf+RVlhoto6O0apEOVd+3CbqmBhjkGuV206fsNhFP/byXr1c++tTfEPC
wtRSYjlx2iYRWnHuGtOE3xXln2/OWfl2wPxLd/5d6uLybv7p79xVHG8YrpGWKR7qYY+Mve0q
Y1eu2ueOcT1q/YRxQ6/WyC6vMccnpSZ70TMdXUzl5VUNovV1zNlRD7lzcNu6VDpj9O3qvIoO
XucaZ9pwaaSJMx9/AMCNgDEUAHDjCTT+9GexarvFtMFUWt91ca+5+iCFa3jqfq78+FXXmrCU
V7owfd1xr+tEtVXlx6821uLqU/GddfVa1IPDQlo6SxU6ftbMkWr78aKj9br4mYnGq9/hd0lr
iEmYl/afaYuTYnVqe9GmN7PNjtNRDRp5n17dMkzAcfPcPzx0QGh4/0vDExzzGtTR0UYXM0Nd
9aqTnLvGVGETZ6eM04klP2PRrKdTV73/qfkqC0E4ybFUh92y/bODVkVau2J87OWrrl6psz53
flzPVV39k6IOCwvxbalLrQsf4JYBC061AQBw02EMBQDciLQjpyVE5GeX5Gz+cnKKtxvTRvOz
3HYx9dX2NfAmxxgBJ0Y3eNLlO7B06ELVKceSj/azJytrleHdsfOsr844de6i3rULM8zbPzv4
U2OMVuVYDzI7+8yJSpsYxFxw0K6PHzUocJBE67NzjpefUyTIVllukcDomEjX1unsZl1fYyrd
mDlpw39SsHvXJ++b8t//a/4nnyX+ZmHCnS7dnF9+ebdbqkNTtr+wQgJjXeiKK/vcldZ07arb
uHhIT2gDAKAH6Rn/bwEAutmlbR02byu56O3GtHI8GG954O8YpNA9QwxEWmagXEXXa162f7+Q
sMFq6WBFjA6Ldap7nkI319L1MBDFZt681nRKHTVhcpS/3fxe+o7y7tr2QKUbcpdOLfby8irH
Eid+g0ZFN6+CoZwrP25z/GRVg0bep5eK3V+WKefNBQft6uEuT/Houled5NI1pjXEPJy85C/p
r6fE6uqLsv/m6hCk9pe3tCzV4egfxxQPl7uifZ87O66nqzd1fFKu3Linre7+eF5LGwAANx0y
FABwg9L86OFHh6mlJGfTzjPtj3R4r6tYSo+ebezmNtgtlWfartbZvFJgyx17y46Vx44e7569
AzWh4f1FTuzcVdz+pqehMn9Xp9tJXIV25LSECJGa/KzsAsvly44qlr3vLFhTYFVEMyBcp5aK
Pbu+rmlf4rv83C/tnW0t6SptZEx0oNhLjxy/6nKfynFTxlaLeuTMXz6TnDxFL3XmdTn7rN26
NWObEfiOiR72wsKD5i92V2iax0o0L1ZSuN98oKCw5hqmeIhIS6+237jUZddwjak0hvunTQjv
+ua5i8u7Te3N/XMts12aNfd5m7U/ftCPtHmV02NHTnZ+hs1jiC7vOsViLvy23UyTDnMNypmS
o1U/uA0AgJsOGQoAuFH5hk5MTNCr7UeLjl42c91x72cvyMossCgi0mAxf/T2ayu3FNV1cxMs
O9MWvJ6517EZgbU0N31ldkm7lQIdd92WLctXZO0tbbnxtpUW5L6/ynHz7xq/QWMfNKrtFtOq
FX/f37yQgGIxb17zesaX9i5WKOz4DR1DUcSyM+21Na27KigWc27mqwveypNbQzUqUd029pFh
ajllWr7y7wcvVXtw89tvZJjr1MYHx3a4teRVNP+Avi00WxQRxVJWZlNa7uhOmZavbOlSEbGW
FuTmrFqyquCsiIg0VO7IzqkQ3aRHxob6qgyTUuIHir0g632zrYs3v4xiLXjnmVcyt+buK205
qlgObn777ewK0U16YPil22xV2Kj7wsV+8sgXxyzSPzzUcW/uaOqZ0i8OH7c7MYSkwyY53llK
slem5zZfGw0W8642J+ucrq8xxVqwZkGbtScUy+HdB05L6+l0osvLW1qSXPbCDenbKrqY7eJU
n7es/ZGz8u3c5mKKxfypq5+XljUyTKtWZOa1VKfYSvfl5qxasKrA0U3N25FYtq5N31FqU0QU
W2le5qu/S7t8mUxHZrA1kadYDm5++w/LthRddckMp9oAALjZsA4FANy4VIPjUx7auXSLpbN4
3lupeW81B3Wj42NPmvK7M0mhjprwoOwzvbXI9NalmH9UQsLY1pUC+41+InncsTV5RVveWrTl
rXYvHhfjeo2q0PGz53z7WtrOoi0rUre0PaIfNyd5YtcrFF5BY0ycP/P8ynWOXRXabTqgjpry
9H2DVCLiGzoxeU5RZVpe0ZZl7avVTZgze3yoq48Dmtd3KMlLm58n4pirP8jgpx39sznjvk3L
K2rfpSISGBsjIqJU7kpf96VdN2V2olEjIhJoTJwZ/8UKk2lddvRLyY4lMzt58ytb0Vhk+luR
STLaBdVRM/61+c0dHHMB8raZjos+cVRzLsZx85mXb/qnSERil0NIOmmSIf7pxAN/zC7Ky1iU
16YVzSfrNGeuMcWS//5f89//a9uDXaWWnLi8pWWDj+wKS72ox3U5xaPrPlcNjp/7swNLNhTl
ZyzKb1PO1c+L9p4n5kw4lrazyPTOItM77aq71L+qW8cmPZp3WV3qqPif9vvi/fw2WSI/Q/yM
+J0rTJadaak7W4L62PjRx0z7rpZMcqYNAICbDGMoAOD653gE3QGVZujkpHF6kcuWYFBpjD//
3eKk2OZX6WMTU19f9svx4b27fm7skn4jEhcuTk2M1Tm+1cUmpi6+bPVBlW7MnGW/T306PurS
Gaij4p9+fvEbs2OuZTy8ry5m1rLXUxNj9S0R/6j4mamvvzInxuVEgaOBGkPcvJVvLH72p7GX
OlkdFf/0/Nf//NJTw1u2uVSFxsx55fXUxMvLLJsVcy1bJPoZ4p99oaVL1FExIwf4tqllZnyU
f5uze+rZxa/Ojekncnbfe5vMdn/joxNbt6JsnuxzypSxvVS56pu3P2vt6Mf//dmUtj8W0cUm
Prv4jZemRbRby6N5IoO030+keeSCiOijR3U9hKSTJmnuTHjp9cUprY1QR8U//ewLT4zu19Ub
tj+ZLq4xlTYm+fdte9Vxpr+N6+KKceLylkujHkS6muLhZJ+rNBHTXnqjba/4R8U/9ey/Pz7a
tc+L45My//JeeXbxG3Mvrcip0kRMXfj7S58mtS42afEbi35xb7j6stVVNMN/8buFM1qLJaa+
/src8YbLi11LGwAAN5deTU1Nl74pLi6OjIz0YmsAAABuLGcLVv02LT8gfnHLMBYAAG4yzqca
GEMBAADgLkrpzo35NaIfO34o6QkAALpAhgIAAMBNar7etadCXN9HBgCAmxJ/LQEAANzD+vX2
7adEHfP45MH8ywUAQJdYhwIAAAAAALgL61AAAAAAAIDrCRkKAAAAAADgfWQoAAAAAACA95Gh
AAAAAAAA3keGAgAAAAAAeB8ZCgAAAAAA4H1kKAAAAAAAgPeRoQAAAAAAAN5HhgIAAAAAAHgf
GQoAAAAAAOB9ZCgAAAAAAID3kaEAAAAAAADeR4YCAAAAAAB4HxkKAAAAAADgfWQoAAAAAACA
95GhAAAAAAAA3keGAgAAAAAAeB8ZCgAAAAAA4H1kKAAAAAAAgPepvd0A4Mag2Er3mTZvzM6v
EBHRxc6Y/cRUo04ljZbcFakZB1oL+sUvTk82+ogoFvNH69duyLeIiOhjU+bOiovQSOdxabCY
TevXbsy32EXUutiZ82dNNGhUrscBAAAAoCciQwF0i4slu3JPGJ5Omztcd/Fozoo/bljuE7r6
+RitiIhEpaQtidO1K99QuePd5ZsaEpauTYjwq8xduTBjuQQsmxej7STeT6nctXb5h/aEl9IT
7uxdmbtsYcbLErB6XozGxbjWG70DAAAAAF3igSrQLTTG5MXzpg3XqUQ0AyMNGrHX1l5o6rS4
cnLPx4ckOm5yhFbEN3RiYoLeVlhQbO0sLvVlez41y8iHJw/RiKhC738yIcJeWGi2XnAxrniw
TwAAAADABWQogO6l2Er3bP+iRjdu/Ij+Pp2WOnPsQIXPkLsGNY9oUPUNG6yx7z9yvLKTeGP1
NwfKZUjU7VrHZ9Y3JCxMbS8+cvyUi/GL7jtzAAAAAPghmOUBdJNGc+aspaZ6ERHRTUh9PFp3
KQFYlJGalCEiootNTJoWH2PoXVdbIxLY+mI/bZCfiCidxEW5WFvT2OaAqo9W6yMiygXX4gAA
AADQU5GhALqJjzH53axkEcWyP2v16rQF51JWzI8L9dXFvZgVJyIitpLc9Lcz0t6pWfzSU1JT
3S4T0Uyp6zguiq2m2t7RC1yMu6K4uPgHvR4AAADADSQyMtLdVZChALqZSjcqKXnK/kU5H+85
OTEhonUmlSYiLuXxw4VpOwtPPDVloKHdi+qt5+slODDo1oAO4/6+wQMNfm3iygWrtVG0gUGh
AS7F/V0YSOGBX0AAAAAAcAnrUAAedKH2rF0dHKjpFaw3+NUfO1xmdcSVc+XHberBYSEhncRV
QXpDoBwr+rZ5qcuGqvJyuzosLCTExbivx88ZAAAAAJxChgLoDo3mzIWrcgpKbSJiK9mxeXeF
etgjY29TNZozF67abLYoImIryV3/cZEj7hMePWGgvTB3W4lVxFryYVZOReikSUO1ncWld0T0
aJ39y0+2HbOJYisxZeac0E16YLhW42KcjzwAAACAHqpXU1PrhojFxcWM6wauibW0YNvmrJx8
i11E1FFTnk+ePsagFcVi3rFl0zpTkV1E1LrYhKRpk2MMWhERW+ne7Mw1jiO62Bmzn5hq1Kmu
Ehdr6d4PMtdsKbKLiD52xtNPTB2uU11DHAAAAAA8x/lUAxkKAAAAAADgLs6nGniiCgAAAAAA
vI8MBQAAAAAA8D4yFAAAAAAAwPvIUAAAAAAAAO8jQwEAAAAAALyPDAUAAAAAAPA+MhQAAAAA
AMD7yFAAAAAAAADvI0MBAAAAAAC8jwwFAAAAAADwPjIUAAAAAADA+8hQAAAAAAAA7yNDAQAA
AAAAvI8MBQAAAAAA8D4yFAAAAAAAwPvIUAAAAAAAAO8jQwEAAAAAALxP7e0GAAAAAOhx9h2y
VJ2rd6ZklCHw9tsC3d0eADcDMhQAAAAALrd93+nth845U/LXCYPJUADoFszyAAAAAAAA3keG
AgAAAAAAeB8ZCgAAAAAA4H1kKAAAAAAAgPeRoQAAAAAAAN5HhgIAAAAAAHgfu40C3UKxle4z
bd6YnV8hIqKLnTH7ialGnUpEFIv5o/VrN+RbRET0sSlzZ8VFaK4hLg0Ws2n92o35FruIWhc7
c/6siQaNyvU4AAAAAPRE3K4A3eJiya7cE4an0/6elZX+SmLwwQ3LN+6zKiINlTveXb6pdsLS
tVlZmStTQgszlqcXnHU9LkrlrrXLPzw74aX0rKy/r5w5oDDj5fR9VtfjAAAAANAzkaEAuoXG
mLx43rThOpWIZmCkQSP22toLTaKc3PPxIYmOmxyhFfENnZiYoLcVFhRbXY1LfdmeT80y8uHJ
QzQiqtD7n0yIsBcWmq0XXIwr3u4oAAAAAOgYGQqgeym20j3bv6jRjRs/or+PnDl2oMJnyF2D
tI6Dqr5hgzX2/UeOV7oYb6z+5kC5DIm6Xev4zPqGhIWp7cVHjp9yMX7Ro50BAAAAAE5jHQqg
mzSaM2ctNdWLiIhuQurj0TqVKHW1NSKBrYX8tEF+Ii7HRblYW9PY5oCqj1brIyLKBdfiAAAA
ANBTkaEAuomPMfndrGQRxbI/a/XqtAXnUlbMf7CuprpdxqGZ4mJcFFtNtb2jF7gYd0VxcfEP
ej0AALienautc7JkRWVVcbHNrY0B0BNERka6uwoyFEA3U+lGJSVP2b8o5+M9JyfeN9DQ7mC9
9Xy9BAcG3RrgUtzfN3igwa9NXLlgtTaKNjAoNMCluL8LAyk88AsIAAD0WH3zzCLnnCmpDw2J
jLzN3e0BcDNgHQrAnYL1Br/6Y4fLmjfRUM6VH7epB4eFhLgYVwXpDYFyrOjb5qUuG6rKy+3q
sLCQEBfjvh49fQAAAABwGhkKoDs0mjMXrsopKLWJiK1kx+bdFephj4y9TeUTHj1hoL0wd1uJ
VcRa8mFWTkXopElDta7GpXdE9Gid/ctPth2ziWIrMWXmnNBNemC4VuNinI88AAAAgB6qV1NT
06VviouLGdcNXBNracG2zVk5+Ra7iKijpjyfPH2MQSsiYivdm525xlRkFxFd7IzZT0w16lTX
EBdr6d4PMtdsKbKLiD52xtNPTB2uU11DHAAAoGt/eNe8/ZBTszx+nTD4kfuY5QGgU86nGshQ
AAAAALgcGQoA3cX5VANPVAEAAAAAgPeRoQAAAAAAAN5HhgIAAAAAAHgfGQoAAAAAAOB9ZCgA
AAAAAID3kaEAAAAAAADeR4YCAAAAAAB4HxkKAAAAAADgfWQoAAAAAACA95GhAAAAAAAA3qf2
Ur0XLMdKTzf1M0Tc6u/jpSYAAAAAuIl9/fXXTpYcPHiwRqNxa2MAiAczFJa8P738F/XTq+fF
aOXsV//5+h+3n2oSddCIXyxaMDncW3kSAAAAADer/fv3O1lSp9ORoQA8wFOzPM4X53/RFB0T
qRWxf5Obuf20LvanzyRG+x3I3lhwxkNtAAAAAAAAPZWnRi98f8Gq+A7srRapMe/c/V2f2NTk
6TFB3zV+8cV733zXOK4/Uz0AAACAa9PQ0HD+/HknC4eEhLi1MQBwzTyVoeh7253BNZ99vHng
t2dMn57p99D9I4J8pKnR3iC3+JKdAAAAAPTPYq0AACAASURBVK7d+fPnt27d6mThpKQktzYG
AK6Zp2Z5+N7x8DMP9D74v/+VnW/RTZ6dMLS3iP34F7tPBIyMupUUBQAAAAAANzmPrVGpDr73
meVvTvzmtAy4Y7DOTyXS1KgeNPm5X949oq+n2gAAAAAAAHooT+6iofLTRRgDa6pqztYE9gv0
U/ndds+k2zxYPwAAAAAA6Kk8mKGwV36+MT39f83nm3oFTH1pdVLkha+y0z7r9+TsyQa/Xp5r
BgAAAAAA6Hk8tQ6FWI9sfPNPHx3zGx57z8Bbvm9oFFFpw2/1KfjvzV+e81QbAAAAAABAD+Wp
DIXVvPWTivDExf/x4qxHhgU2B4PvGBnx/dGyKsVDjQAAAAAAAD2UpzIUF2rP2oOGRurbzypR
qdVNVtv3TR5qBAAAAAAA6KE8laHQ6gb613xdXGFvE2s6U/z5MQkPDfLYVBMAAAAAANAzeWql
zD5R8Y8N2Zm1fMl34yNO2xql0JSzZ9/WfxapRz13762skwkAAAAAwE3OY3t59A5/+PkX7evS
P9yyo75JxPT3ol5+A8cmL5g5XufJHU8BAAAAAEBP5MHsgLr/sOnz33jIcuLE6Tq7yi8oNEwf
rPHxXP2AOym20n2mzRuz8ytERB015fnk6WMMWpFGS+6K1IwDrQX94henJxt9RBSL+aP1azfk
W0RE9LEpc2fFRWik87g0WMym9Ws35lvsImpd7Mz5syYaNCrX4wAAAADQE3l4/IK9vr6Xf/AA
fxGRxrpqS534+gf3JU+B69/5g5u3nDA8nTZ3eP8ze9e8tuatl8+rVj8foxURkaiUtCVxunbl
Gyp3vLt8U0PC0rUJEX6VuSsXZiyXgGXzYrSdxPsplbvWLv/QnvBSesKdvStzly3MeFkCVs+L
0bgY13qjdwAAAACgS57LUNgtBf9Y9betx86337mjz93PLXtx/ACPNQNwj34x816JcXypGzHh
nn55pvLyqgbRdvIRU07u+fiQRM+ZHKEVkdCJiQkfL8kpKLaOHtBxPGZk1Z5PzTIydfIQjYiE
3v9kwqeLcgrN1rtDXYuPjtEyjAIAAABAT+SpDIVy/JM/rTGV9YmInRgZ5NvmgMYwmGe6uCEF
BPh3/vk6c+xAhc+QRwY1X/2qvmGDNfb9R45X1nYcbxxUcaBchjx4e3N+wTckLExtLz5y/FSt
a/GLMUaN+84ZAAAAAK6ZpzIUZ45+ftwves6rvx4X4qEaAW+xHSv84qza+Ojw/j4ijSIiRRmp
SRkiIrrYxKRp8TGG3nW1NSKBra/x0wb5iYjSSVyUi7U1jW0OqPpotT4iolxwLQ4AAAAAPZWn
MhRa3UD/XjUeqgzwohpz9jrT2WEpi8aHqkTERxf3YlaciIjYSnLT385Ie6dm8UtPSU11u0xE
M6Wu47gotppqe0cvcDHuiuLi4h/0egAA4ClWq9X5wk7+iT9XW+fkG1ZUVhUX25xvwPWorKys
urra260AvCwyMtLdVXgqQ9HnRz/5+Z2/y/6gIHJmjO4WD1UKeJq1JOet5SZlXGryxFDfyw9q
IuJSHj9cmLaz8MRTUwYa2h2rt56vl+DAoFsDOoz7+wYPNPi1iSsXrNZG0QYGhQa4FPd3YSCF
B34BAQCAblFVVXXkyBEnCzv5J75vnlnknDMl9aEhkZG3OVl7j1JYWOhkyUGDBoWEMBgccDu3
ZiiqC1a9lJZ/tm0oLXVH+zL9YlNfnRcT7M5mAJ7RYCnIejO7Oib1N8/HhHa8HOWF2rN2dXCg
plew3uBXv/1wmTVOrxUR5Vz5cZt6cFhIiLbjuCqozhAo24u+tU7UaVUiDVXl5XZ1WFhIiNa1
+BV5EwAAAADoGdy6qr9aqx8S1YUh+s42OwCuJw2WgndfS9s3IGVBu/REozlz4arNZosiIraS
3PUfF6mHPTL2NpVPePSEgfbC3G0lVhFryYdZORWhkyYN1XYWl94R0aN19i8/2XbMJoqtxJSZ
c0I36YHhWo2LcTbyAAAAANBD9Wpqat39s7i4mHHdwLVoNGfOWmqqbxfzi1+c/osBR3Zs2bTO
VGQXEbUuNiFp2uQYg1ZExFa6NztzjeOILnbG7CemGnWqq8TFWrr3g8w1W4rsIqKPnfH0E1OH
61TXEAcAADeaqqqqrVu3Olk4KSnJmWJ/eNe8/ZBTszx+nTD4kfuuy1keWVlZTpZ86KGHmOUB
XDPnUw0ezFA02s7WSGA/jU9r4FyNaPtpGEMBAAAAXDsyFNeGDAXgGc6nGjz2RNV65L1X5/5m
w6ELlxIi1qMfLH9h0T++qmn0VBsAAAAAAEAP5akMxYWiT03fDfnpQ3f36dUS0v7oJ9Njaj/b
/H+nPdQGAAAAAADQU3kqQ2E9e7ohcEh4cK+2waBBQwcp356qZhAFAAAAAAA3OU9lKLT9Bvie
//rwiYttg+fLvi5TggM1vTp7FQAAAAAAuDl4apXKPlEPxutfzfnjS2UPjDUODFArF6uPff7p
3qL6yKRoPdsLAAAAAABwk/PYPhraHz0+/ze+7/75A1P2582hXkEjEhY+83B4b0+1AQAAAAAA
9FAe3OlTPWBE4r+//RPLiROn6+yi9h8QHq5r3XoUAAAAAADcxDyWoagt/b9DdRH3GnU6Q5Su
OdZUXfTZ1/aho426WzzVDAAAAAAA0BN5agmIxrJda9Zu+upM+6j16Jb0P+88rnioEQAAAAAA
oIfywBiKuoqi0ur6kipFsZ46ajZXt8Sb7NajRecbv29obHJ/IwAAAAAAQE/m/gyFZe/aVzKK
HF+b/rzU1P5oryEJPw5nMQoAAAAAAG5y7s9Q9Bvxs1/+v4qLJ/P+vr06+rFH7wpqPeQbFH7X
sChdH7e3AQAAAAAA9Gzuz1CodcYHJhmVU75Hz5+eMDnOGOj2GgEAAAAAwPXG3RkKpb7mfL1f
UKDfwPFz5rm5LgAAAAAAcL1yc4aiZt9f/vWtL0e+8OZc3fbfvJJd3nBFiX6xqa/Oiwl2bzMA
AAAAAEDP5uYMhU+foEC/wKA+PuIXHBEZFWC/okSAXuuB/UQAAAAAAECP5ubsgP/dyW/+Z7KI
SF3k5CciBw7S+5OPAAAAAAAAl/NUvqCxdOuypab63gPuHjt+zOhRd//I0M/PQ1UDAAAAAIAe
z1MZCp87H33x+aD8z/ft/Sz7wI5sUQdGRD9wf8y9I4x36LU+HmoEAAAAAADooTw25+KW4Kj7
p0fdPz25/mxpkdl8cH/hvm3r8j9ipUwAAAAAAODBDMUlvpqgwICgvv2D+wX6WSz1F20Xr1w+
EwAAAACuM9+erHlu5UFnSk4a1vfFZ4zubg9w3fFYhsJec+Lw/s/3f7Uvv6DkfJNIr8AhMRMe
/5eR94waNsBTbQAAAAAAAD2Ux1bKLMp5+Q+mehHxGzj68Z9NHzd8kE7D+hMAAAAAAEBEPLhS
5qDxzyRc2JNfcKDi1L6Nq4o+jxlzz11Dhw79UcTAQDb1AAAAAADgZuexWR4BhgcSf/lA4rM2
y4mSb46YDx763PSuKbuJlTIBAAAAAIDnV8r00ejCDfb6uroLNdUnTx88XW87W1vv4TYAbqDY
SveZNm/Mzq8QEXXUlOeTp48xaEVEFIv5o/VrN+RbRET0sSlzZ8VFaK4hLg0Ws2n92o35FruI
Whc7c/6siQaNyvU4AAAAAPREHstQKPWWb7766tCBwry8AxX1ItIrKCJmypP3jLjnnlBPtQFw
n/MHN285YXg6be7w/mf2rnltzVsvn1etfj5G21i5493lmxoSlq5NiPCrzF25MGO5BCybF6N1
Md5Pqdy1dvmH9oSX0hPu7F2Zu2xhxssSsHpejMbFuNbbPQUAAAAAHfLUA9XG4vd/98qbGZt2
FEnUxMTn/u2VN9a+tXTekz+5b5ieh7q4EfSLmffKvGnDdSpR6UZMuKef2MvLqxpEObnn40MS
HTc5QiviGzoxMUFvKywotroal/qyPZ+aZeTDk4doRFSh9z+ZEGEvLDRbL7gYV7zdUQAAAADQ
MU+NoVDphv30mSGDhw416AP9SEngZhAQ4K+WM8cOVPgMeWRQ88gFVd+wwRr7/iPHK2tdizcO
qjhQLkMevF3r+Pj4hoSFqe3FR46fqnUtfjHGqPFoNwAAAACAczyVoejV/+6H4jxUF+BdtmOF
X5xVGx8d3t9HKautEQlsPeanDfITEaXOtbgoF2trGtscUPXRan1ERLngWhwAAAAAeipPr5Qp
otRbjhTkfVVSow41jh470hDIbRNuKDXm7HWms8NSFo0PVUljXU11u4xDM8XFuCi2mmp7Ry9w
Me6K4uLiH/R6AADgKVar1fnCTv6JP1db5+QbVlRWFRfbnG/A9aisrKy6urrLYidPNzj5hudq
6/hfC9edyMhId1fh7gyF9UjW0lfz7lr0xlPG3r1ExH5i64ol/3X4YpOIyCcffTJ+zsuzfxzc
y82tADzEWpLz1nKTMi41eWKor4j4DBhoaFeg3nq+XoIDg24NcCnu7xs80ODXJq5csFobRRsY
FBrgUtzfhYygB34BAQCAblFVVXXkyBEnCzv5J75vnlnknDMl9aEhkZG3OVl7j1JYWOhkyUGD
BoWEhHRZTK2pcbLT+gb4878WcCU3LwnxfWnBzvLQCbFRvXuJiDSV78zMPnxRGzX1l/++6F9/
MUZn2bXxfw7XurcNgIc0WAqy3syujkn9zfMxoc0frWC9wa/+2OGy5ucayrny4zb14LCQEBfj
qiC9IVCOFX3bvNRlQ1V5uV0dFhYS4mLc12PdAQAAAAAucXOG4vx3pda+I+4aqBYRabp4eHvO
4Yt9xqT8a9IDI4b9+JGZCfeqvys8/B27C+D612ApePe1tH0DUha0pidExCc8esJAe2HuthKr
iLXkw6ycitBJk4ZqXY1L74jo0Tr7l59sO2YTxVZiysw5oZv0wHCtxsU469QCAAAA6KHcPMuj
T0A/dc03JaftRoO6ruh/Nnx6ttcdiY/eHeQ4qu3b30c5aPu+yb2NANyvsXjLn3daRCwZ//ZU
RnPML35xerLRmDjnBclcs3h2tojoYmcsnj3VGCgirsY1xunzX5DMNUtmZYuIPnbGwl9NHa4R
EVfjAAAAANAjuTlDob0jZrR/WtbvF+y97ZYzpadqlKAHpk4y9HEcbDp94tj3vW8fGMxambju
+RiT381K7vCQxjAmecmYK4+5GhetYcxTS8Y89YPjAAAAANATuXvId/+YlHlJd/tXlXxzqsY3
/IGUf//FvS3bC5w/sGXbN71HPzR6gJvbAAAAAAAAejr37zbqHzn1xZUTz56z+QSEBLbdXEAV
NPyxf5006sdBDKEAAAAAAOBm5/4MhYiIWtMv5IoJ8AGGHz9g8Ej1AAAAAACgh2NhfwAAAAAA
4H1kKAAAAAAAgPeRoQAAAAAAAN5HhgIAAAAAAHgfGQoAAAAAAOB9ZCgAAAAAAID3uTVDUWPO
Xrnik1JFROT7s6XfVtgUd1YHAAAAAACuV+7MUDSeKNxywKb2U4lI49HNr7y6dk+lG6sDAAAA
AADXLbUb37uXJjBYOZ6Xu7PfSJ3v8SpFsZ46ajZXty90S3DEEL2GySYAAAAAANzU3JmhUIWP
T3pg158+XvvGx80R05+Xmi4r5BeV8vqSOL0bmwEAAAAAAHo8d2YoRB18b/LS/7jPXHyypv5k
3t+3V0c/9uhdQe3L9NaP6O/ONgAAAAAAgOuAWzMUIqL210f9WB8lyinfo+dPT5gcZwx0c40A
AAAAAOD64+4MRQvVwPFz5kl9pTlv9+FjFlvTLYG3Do68Z5RR18dDDQAAAAAAAD2YpzIUInbL
3vSlf/7sdENraF3YA/P+bVbMrZ5rBAAAAAAA6JE8lRxoKt/5l/TPau6c+qvpY4eE+quV+urS
/absDavWhC59McHASAoAAAAAAG5qnspQ1JR8dUR197PPJt0X2hzRhd52e1Bt8R927//uMUME
240CAAAAAHAz81Rm4PsLVkWjDwloF/QNGqDrVV1ja/JQIwAAAAAAQA/lqQxF0K0G7dn/yy+2
tonZKw8XHlNC+wcwgAIAAAAAgJucp2Z53HLHxH8x7lr3p4Unxzx475Dg3nKx+tjnn+4tUo96
Liasl4caAQAAAAAAeiiPbaPRO/zhXy3qte4vG3Z/UPRPERHp5TdwbPKCmeN1bOUBAAAAAMDN
zpPZgYA74uf84f4nKsorz9crav8B4eE6jY8H6wcAAAAAAD2Vp8cv+GiCb7sj+DYP1woAAAAA
AHo2ZlgA3champu5MiOvJn5xerLRR0Sk0ZK7IjXjQGsRv5ZjisX80fq1G/ItIiL62JS5s+Ii
NNJ5XBosZtP6tRvzLXYRtS525vxZEw0aletxAAAAAOiJyFAA3cRWkpv+dkZ+hYj4XXYoKiVt
SZyuXaihcse7yzc1JCxdmxDhV5m7cmHGcglYNi9G20m8n1K5a+3yD+0JL6Un3Nm7MnfZwoyX
JWD1vBiNi3GtxzoEAAAAAFzBA1WgWzRa9ryXcWxw4pzE2MvzEx1RTu75+JBEx02O0Ir4hk5M
TNDbCguKrZ3Fpb5sz6dmGfnw5CEaEVXo/U8mRNgLC83WCy7GFbf3BAAAAABcEzIUQLfw0cW9
mJU2LyE2MsiZ4meOHajwGXLXoOYRDaq+YYM19v1Hjld2Em+s/uZAuQyJul3r+Mz6hoSFqe3F
R46fcjF+sZvPGwAAAAC6iacyFBcPZ/36mReyj/IAFzejoozUpKSkpKSk1FU5BaU2EaWutqZd
CT9tkJ90HhflYm1NY5u4qo9W6yMiygXX4gAAAADQU3lqHQqbpaxS8e/j18tD9QE9hI8u7sWs
OBFpWagi7Z2axS89JTXVIoFXlFbqOo6LYquptnf0AhfjriguLv5BrwcAAJ5itVqdL+zkn/hz
tXVOvmFFZVVxsc35BlyPysrKqquruyx28nSDk294rraO/7Vw3YmMjHR3FZ7KUATf87PEvNf/
+782GX6ZMKw/63PiZqSJiEt5/HBh2s7CE09NGWhod6zeer5eggODbg3oMO7vGzzQ0HZ9C+WC
1doo2sCg0ACX4v4uDKTwwC8gAADQLaqqqo4cOeJkYSf/xPfNM4ucc6akPjQkMvI2J2vvUQoL
C50sOWjQoJCQkC6LqTU1TnZa3wB//tcCruSpXIFy5pvi87fUn8h5/YWcdgf6xaa+Oi8m2EPN
ALzrQu1Zuzo4UNMrWG/wq99+uMwap9eKiHKu/LhNPTgsJETbcVwVVGcIlO1F31on6rQqkYaq
8nK7OiwsJETrWtzX210AAAAAAB3z2EqZvn38A/WRUVcYotcyogI3rkZz5sJVm80WRURsJbnr
Py5SD3tk7G0qn/DoCQPthbnbSqwi1pIPs3IqQidNGqrtLC69I6JH6+xffrLtmE0UW4kpM+eE
btIDw7UaF+MsjgsAAACgh/JUdkA1cPycxeNFpL6mqqbhlsB+gX7cKeGG0mjOnLXUVO/4xrT0
Fybxi1+c/osB0fFBm5anbrCLiFoXm5D6+8kxob4ivsbEOS9I5prFs7NFRBc7Y/HsqcZAEeks
rjFOn/+CZK5ZMitbRPSxMxb+aupwjYi4GgcAAACAHqlXU1PTpW+Ki4vdOBvKXvn5xvT0/zWf
b+oVMPWl1UmRF77KTvus35OzJxtYQBMAAAC4VlVVVVu3bnWycFJSkjPF/vCuefshp5ZU+HXC
4Efuuy7XocjKynKy5EMPPeTMOhTfnqx5buVBZ95w0rC+Lz5jdLJ24HrnfKrBYwMZrEc2vvmn
j475DY+9Z+At3zc0iqi04bf6FPz35i+d+sUHAAAAAABuYJ7KUFjNWz+pCE9c/B8vznpkWMsW
iMF3jIz4/mhZleKhRgAAAAAAgB7KUxmKC7Vn7UFDI/Xt171QqdVNVtv3TZ28CAAAAAAA3CQ8
laHQ6gb613xdXGFvE2s6U/z5MQkPDWLNTAAAAAAAbnKe2sujT1T8Y0N2Zi1f8t34iNO2Rik0
5ezZt/WfRepRz917K+tkAgAAAABwk/NUhkJ6hz/8/Iv2dekfbtlR3yRi+ntRL7+BY5MXzByv
81gbAAAAAABAD+XB7IC6/7Dp8994yHLixOk6u8ovKDRMH6zx8Vz9AAAAAACgx/L0+AUfjc4Q
pfNwpQAAAAAAoIfzaIaisab0yy/M35ZV2Zp8NCGDI+8eMSw8kFEUAAAAAADAYxkKpe6bj/70
+ntfX2yzteg/tEMe+eX8p+4JZqlMAAAAAABubp7KUDQUf/jmxiMB0Yn/b/Ko20P91Ur9+ZNH
dm3O+vjd9+66/fl7+3qoGQAAAAAAoEfyVIbi3Mmj1UH3LUhJuDeoOaILvW2I7uLRl94/dGr2
vX2Z6wEAAAAAwM3MUxkKrW6gf2PNxYZ2wcb6C9+rggM1TPIAAAAAgJtThcV2od7uTMnbbwt0
d2PgXZ7KUPT50U9+fufiv7/32e0pD+j7iIhI7TcfZX98Iea58eEqDzUCAAAAANCzZH5Usv3Q
OWdKbntjnLsbA+9ya4aiumDVS2n5Z9uG/rwg789tvu0VOPR4hS0mmEwYAAAAAAA3NbdmKNRa
/ZCoqNqrlvFnigcAAAAAAHBrhiLQmPhrozsrAAAAAAAANwaWgAAAAAAAAN7nqZUyRezVh0wb
c7YWHLHUN7UJ94tNfXVeTLDHmgEAAAAAAHogT2Uomiry/vr2P76q9dMZooJvaXMgQK/1XJYE
AAAAAHDNqqqqtm7d6kzJUaNGDR061N3twQ3GU9mBKvPOrxqGPvnab34S4eehKgEAAAAAwHXD
UxmKPv0G9OkjtwaTngAAAAAAAFfy1EqZ2mHTn4go/K/sAsv3HqoRAAAAAABcPzy2BoSfPnby
+C1vpKXuaB9npUwAAAAAAODBlTJ3vbP6k+/sfroIAytlAgAAAACA9lgpEwAAAAAAeB8rZQLd
yFqam7kyI68mfnF6stHHEVMs5o/Wr92QbxER0cemzJ0VF6G5hrg0WMym9Ws35lvsImpd7Mz5
syYaNCrX4wAAAADQE7FSJtBNbCW5q5YsysiztIs2VO54d/mm2glL12ZlZa5MCS3MWJ5ecNb1
uCiVu9Yu//DshJfSs7L+vnLmgMKMl9P3WV2PAwAAAEDP5KkMhVLx1RenfS070lKfTmpnzqqC
ag+1AXCjRsue9zKODU6ckxjbdqSQcnLPx4ckOm5yhFbEN3RiYoLeVlhQbHU1LvVlez41y8iH
Jw/RiKhC738yIcJeWGi2XnAxrnithwAAAADgqjy2SqVvH/9AfWSU/vI4K2XixuCji3sxK06k
0ZyZ3iZ85tiBCp8hjwzSOr5V9Q0brLHvP3K8sta1eOOgigPlMuTB27WOrKJvSFiY2l585Pip
WtfiF2OMGk/0BwAAAAC4yFPZAdXA8XMWj/dQZUBPodTV1ogEtgb8tEF+1xAX5WJtTWObA6o+
Wq2PiCgXXIu7ori42MVXAAAA77BaXZjK6eSf+HO1dU6+YUVlVXGxzfkGXI/Kysqqq7se+n3y
dIOTb3iutu46/V/L+Yvt9OnTPj5O/Qfq/MV2nXbaDSMyMtLdVXhs/IJSX3O2pv7KEea+/sF9
Na7eOQHXiaa6mup2GYdmiotxUWw11faOXuBi3BUe+AUEAAC6RVVV1ZEjR5ws7OSf+L55ZpFz
zpTUh4ZERt7mZO09SmFhoZMlBw0aFBIS0mUxtabGyU7rG+B/nf6v5fzFNmDAgG6/2K7TToPz
PJWhaCx+f+GrH9U2XXGgz93PLXtx/AAPNQPwLJ8BAw3tAvXW8/USHBh0a4BLcX/f4IGGdutb
XLBaG0UbGBQa4FLcn3QgAAAAgB7KY7M8dMYpUxrO2VsjDZZDeV+eMUx8cIjWQ20APC9Yb/Cr
3364zBqn14qIcq78uE09OCwkROtaXBVUZwiU7UXfWifqtCqRhqrycrs6LCwkROta3NfLHQIA
AAAAnfBUhqJX/xGPPTmiXUipuy/7968ftTR5aj8RwPN8wqMnDDRtz91WYkyIkJIPs3IqQiel
DNX6iGtx6R0RPVpn2vXJtmPDE4ZIiSkz54Ru0ozhWo24FufjBgAAAKCH8uI+Gir/H9334GDT
/+afmBJ+J7dNuN41mjNnLTXVO74xLf2FSfziF6cnG42Jc16QzDWLZ2eLiC52xuLZU42BIuJq
XGOcPv8FyVyzZFa2iOhjZyz81dThGhFxNQ4AAAAAPZIXMxT1Z785aC63y93eawLQfXyMye9m
JXdwQGMYk7xkzJVHXI2L1jDmqSVjnvrBcQAAAADoiTyVoVC+zfnNK9nlV+y+03vEzNhwBlAA
AAAAAHCT89gYCr/giMioAHvbSD/DXdHjHxwb3ttTbQAAAAAAAD2Ux/byGDh+zuLxHqoMAAAA
AABcZ9ydoVDqa87W1CudHu/lFxgS6OfmRgAAAAAAgB7OzRmKxuL3F776UW1T5yX6xaa+Oi8m
2L3NAAAAAAAAPZubMxQqnXHKlIZz9isOWEvzC4rO20UaGuxXyV8AAAAAAICbgpszFL36j3js
yRHtQvaa0s+3b84pPW8Xv0Fjfv50cmx/97YBAAAAAAD0eB7by0NElHrLodwNWZv2ltX36n/3
9BdmPDzaEOjJBgAAAAAAgB7KQwmCxpqj/8zZ+N5W8/km7ZBJKTOmjTPq+nimagAAAAAA0PO5
P0NhO/F/pg+yN+efqlfr7v1Z6k8nRRuCfNxeKwAAAAAAuJ64OUOhnMpd+VqGubZXkDH+yWkT
R9zaW76vtljalPD1D+6rIWMBAAAAAMDNzc0ZiqZzp76pFZGm82ZThtnUQYk+dz+37MXxA9zb
DAAAAAAA0LO5OUPhM2jcU9Pl5IXOS2gMg7XubQMAAAAAAOjx3L0ORcAdkx6/w811AAAAAACA
653K2w0AAAAAAAAgQwEAAAAAAHoAMhQAAAAAAMD7yFAAAAAAAADvI0MBAAAAAAC8jwwFAAAA
AADwPjIUAAAAAADA+8hQAAAAAAAABdT9JQAAIABJREFU7yNDAQAAAAAAvI8MBQAAAAAA8D4y
FAAAAAAAwPvU3m4AcGNrtOSuSM040Brwi1+cnmz0EVEs5o/Wr92QbxER0cemzJ0VF6EREWmw
mE3r127Mt9hF1LrYmfNnTTRoVJ3HRbEc/Gj93zbkV4iI6MalzE+OM2ivEgcAAACAHogMBeB+
USlpS+J07UINlTveXb6pIWHp2oQIv8rclQszlkvAsnkx/ZTKXWuXf2hPeCk94c7elbnLFma8
LAGr58VoOolrlfIda1dtsj+6NH1qRO/vcpctyXhZAlY/H6P5ruO4lpFTAAAAAHoi7lUAb1BO
7vn4kETHTY7QiviGTkxM0NsKC4qtUl+251OzjHx48hCNiCr0/icTIuyFhWbrhU7iilJW8LHZ
J/rh+yM0KlGFTXxyit5+sMB8vrO4t88cAAAAADpGhgLwhjPHDlT4DLlrUPOkC1XfsMEa+/4j
xxurvzlQLkOibm8e6eAbEhamthcfOX6qk7j1zDdFFWK46/bA5ncKCRusrtl/pKyy43h5o6dP
FQAA/H/27j+qqSvfG//HJH6jIeCAHplg1VBG0KbU6g1PULyVkThpndaWmeJtMxZaFoupOpWv
ay4zVaay7GNqLePXiY44D5eFDTKpFWeotGObCi121JIxA15pVLRI1NFcjIKEEM1jEr9/JECA
BCIKCfB+/QUnO+fs88ne58c+e+8DAAB+wSgPgOHXWJIjLyEiYhLT5CtlEuGkzg4zUVhPCi5/
CpeIyHm3w+zw+IA1mc9nE5Hzjvfl5Ojs6CAK7VnTZP4UNhHZfSwHAAAAAAAIUmihABhWbEb6
tlpKRETW5qriP5Yo95jz3llN5tZeLRRdnFZzq93LB76Wk6PTbOnVEuFm97H8AVy4cOFhvg4A
AAAjxmKx+J/Yz1P87Y5OP1dobLl54YLV/wyMRleuXGltbR002b9u3PNzhbc7OkfptZb/he3G
jRtstl+PyPwvbKM0aGNGbGzscG8CLRQAI4UXLc1cdVanrNFdXb1ihrDXZzZLu40iwkImRswQ
cj2WO+9YLA7ih02JDPW6PIQ3fYag15ruWNodnIiwiB+Gel3Om+B3fkfgAAQAAACPxM2bN8+f
P+9nYj9P8T84oSe67U9KQeS02NjH/Nx6UNHpdH6mnDVr1rRp0wZNxuGZ/QzaD0JDRum1lv+F
bfr06Y+8sI3SoIH/MA8FwAi609Fm50SE8SZECIRcW9PZK+4maOft65etnNlR01hTBMIwamq8
ZHESEdG9m9ev2zlRUdOm+Vg+KUIg4JLh7CWze003r1+282ZHTZvmffkPUOcBAAAAACA44W4F
YDg59KrcXZV6k5OIrM1VH33eyHnyucWPsdgzxckz7Lqqo80WIkvzYXWFMTIlZR6fJkWLExj7
6S+ONlnJaW3WqCquMinPxPN5Ppaz2NELkxmr7ou/N1udZL14WHXEyCxJiZ/ia3mgIwIAAAAA
AOAdRnkADKcJ08WyKYe25xywExGHSUzNeXe5JHIi0URR2rq3SLU3L7uciJjEV/KynxeFERFP
9NKGt0i1Nz+rnIgEia/krn0+nkdEvpbzRGkbfkmqD/OyDhBxmMRVeWtlIh6LyNdyAAAAAACA
YIQWCoDhxGJE0gyRNMPLRzzhooz8RV4+4QsXrc5ftNrv5SyeMCkjP6nfmnwtBwAAAAAACEZ4
oAoAAAAAAAAAgYcWCgAAAAAAAAAIPLRQAAAAAAAAAEDgoYUCAAAAAAAAAAIPLRQAAAAAAAAA
EHhooQAAAAAAAACAwMPbRgEAAAAAACDYsTn/92rrJT8Tz4x4fFgzA8MELRQAAAAAAAAQ7Hih
rf9fzXY/E+/82RfDmhkYJhjlAQAAAAAAAACBhxYKAAAAAAAAAAg8tFAAAAAAAAAAQOChhQIA
AAAAAAAAAg8tFAAAAAAAAAAQeHiXBwAAAMBwuXLlSmdnpz8p582b50+yS/8y/3Jngz8pU578
wdtviPxJCQAAECTQQgEAAACDa29vr6ur8ydlRETE/Pnz/Ul56jvTzds2f1ImPsWEh3H9SRls
mpqajEajPyn9bKEAAAAYw9BCAQAAAIO7d++en3fa/qs+daP6u9v+pPw/wrBR2kIBAAAA/sM8
FAAAAAAAAAAQeGihAAAAAAAAAIDAQwsFAAAAAAAAAAQeWigAAAAAAAAAIPDQQgEAAAAAAAAA
gYcWCgAAAAAAAAAIPLxtFAAAAACCyM2bN00mkz8pGYaZNm2aPymX//qEn1v/PxviH38szM/E
AADwaKGFAgAAAACCiMlkqq+v9yflggUL/GyhAACAUQGjPAAAAAAAAAAg8NCHAmDMcpoaPvvo
wwO1RiIiJilzQ4ZUyA90pgAAAAAAALxDHwqAMcp5/auiXYfaliqKy9Rlv8+cfrpks0prcQY6
WwAAAAAAAN6hDwXA2OS8ov1czxbn/Hs0j0UUtewXKz7fpNHq2yWS8EBnDQAA4NH4oeUwndnn
X9oX/VxnS4dhYuvgXQ4ncSYzYQI/1wkAAH5CCwXAmOS49X2jkYTPPe6ejZw1LWo2x1x//rpD
Es4ObNZ8u3LlSlNTkz8pIyIi5s+f70/K9/fp/dx6xvPRAobnZ+Kgcu7cOT9Tzps3z59kp74z
VZ+64U/KlITpCU8yfm4dAOCR49ovkrXEv7T+tlAcPPcb8uOwGh/548yk3/q5ToDxaZK9hdr9
u/B03hvmvMCogRYKgDHJ3tnRQRTas2Ayf0rQtkx06ezsNBqNj3ad1d/d9jPlquX2R7vpEePn
jPfkdwvFzds2P+M2f84UPzcdbPxvDkt44of8SX5Vnvf/cpcmDJ7y/oT/u3qlX3HDE1qAMazl
tu3O/3X4kzI8ZOKUkInDnZ9Rob3zXlunX/exk/8fduQPuMOdn9GiuuGmP8nY9rtLpt/1J6XD
bPFz05GW/XTavzbEu18ToZwDEdGE+/fvd/9z4cKF2NjYAOYGAB4Rq161UaERZCpzpQybiMih
V2UpapLzijNEfrZUXLhwYThzCAAAAAAAo8mQmwv8b2pAHwqAMYk7fUbvR693LO0OTkQYb8KD
rAVNlkOApt4hQNCGAEEbGsRtCBC0oUHchgBBGwIEbWgQtyEYmeeXeJcHwJjEjhAIuGQ4e8ns
+t958/plO2921A9Q5wEAAAAAIDjhbgVgbGJHL0xmrLov/t5sdZL14mHVESOzJCV+tM4aAAAA
AAAAYx5GeQCMUTxR2oZfkurDvKwDRBwmcVXeWpmIh0ZJAAAAAAAIUmihABirWDxhUkZ+Ukag
8wEAAAAAAOAPPFAFAAAAgFHGoVe9Ic9R6a2BzggAADxK6EMBAAAAAMHAYtAerVRX1JrsRESc
OFn6yyuWiRg8UAMAGDdwyAcAAACAgDPrVVs2KY/TC1uK1Wq1uui9NTGG0u1b9ze4ukmg0wQA
wHiAFgoAAAAACDCnobpEc1uU+etfSaN5RER84aK0jNSZJs0BjcEW6NwBAMAIwSgPAAAAAAgs
25V6nZFinpsf6fH0jDtrgVhQXnnme9OS78tySs4QkUaRpSFGlrdtNRGR1aD7ZFfRF7UmOzFJ
mRsypEI+ETlNDZ999OGBWiMRceJWrMl4aZGQTw69Kmt73YJnYpq+qTWx4zLfy5cKArKrAAAw
APShAAAAAIDAcnSaLcQVCCLYnktZIaFhZDNca4+Qvr0/T8YlRpZXrFYrM0Q8IiLqbKxre2JD
obp4o4y0JbuPGpxEzubD7xccaluqKC5Tl+1cN61+985P9FYnERHZTbXn2PKCMvU+NE8AAAQn
tFAAAAAAwGjEyLLfkAr5xItdmjyTWs2d98lx7ptKY3jKy9JoHotYkeLkp7imU7rmu64vcBJX
ZUgicfkLABC0MMoDAAAAAAKLHRLGJ5vR2OoQMT3dKJydHWbiCmdEsIkcA32dExIaSkREjlaj
0UYmjSJL0/Mp07OZKfzJjzjnAADwKKGFAgAAAAACa+K0qCgOndb+d8syaVRXHwfblXqdkTPv
ufhpfq+HHSEQcMmYnLetayRIlwFbOAAAIEigmxsAAAAABBaLn5CaLiJ96X+pG0xOIiKLoap4
Z/mNuNTUxZETiWhCSFgE2dotg7zXgx29MJkx11WfNLjnngAAgNEELRQAMN459Ko35DkqvZXI
qlflyN9Q6fGozQuP4Dj0qjdGTZw8ft/g4xHJQOXTafp2T066XC6Xb6kyjfC2yVi15Y3RUpAC
bRzEihUl3fheXrqwqSBntVwul2dvPsH/aU5ebuocV18I1qzFq5JCapXr5PK8igHeP8oTpW14
M5k+35S1Wu4ypgP3oFU4qA+JwQWXBG6PtMwgqjA4jPIAgOHgMFUVuN4M1+WpTOWvEy8VrVU2
iHO2rZeEeUuQK2XYfdc0fvWJoSAxbdVKWYKQxyIyVm3ZVNLYdYHOJKbJV8okQp6PFY1FFoP2
aKW6otZkJyLixMnSX16xTMSg1b0PU9WWnJLGnv+5cZnv5Sde2bVWqRPnFK6X8Knt1EeqE5zU
98pShYGMntOi3dt1cAgPYD766hVADpOYKl+5XCLkD1g9h1uwxuqRYDEiaYZImuHj00jJuh3q
dd3/Z+xTd6dkM9K31VJ3Op5Qkrpekrq+z/dFnl8YHUZNFQ5WwViFgwROoxC80EIBAMOnT6OD
03Jp4ATQnytETpN231blnp3m3G0Z8e6WiLhMZb6UcbZo936gVO4x572TIQoLbF5Hilmv+t8K
jTMxc0uxNJpHFsO3n6j2bt96zR0ch16VpajzMgp9nOLGZb7X68WKlis9fzuun683c5NjZ+Kq
1Cd3AJ2mb/du3avc2Zm3Td5VsnxXT4BHBlX4IaEK94fTKAQ1HM8AYMSw+JJ1peo/jcHnfsNu
IiN54YU4tqmmrrlPx0hWpGTVc3F0rUZ3dZx0mXQaqks0t0WZv/6VNJpHRMQXLkrLSJ1p0hzQ
DNDxG7rxJetL1aXrJfxAZ8TDKDg4sJj/teqFJ8jjvZVdfFfP4clI8McKhlcwVuFRIGiqcODh
NApBDn0oAGDkeLTKc30kuWfSHzty6GNNYycRceJWrMl4aZGw92WYtbmq+I8ltUYiIk5STuEa
yeRzqqzfX0pOnWP49EhjJ3HiVuSmJ1lOlO490mjnMInpG7KWCXksIqfV8G256kNNYyeR5/LR
IyIsZILXDzgRYbzenzithq+Kd5a6OnByEnMK10sm61VZikvJr88xlB1ptBMn7sXcjIWWY+q9
mkY7CRIzf5XlvlhxPU450mgn6rU8GNiu1OuMFPPc/EiPX447a4FYUF555nvTku/LXB13NYos
DTGyvG2riYisBt0nu4q+qDXZiUnK3JAhFfKJyGlq+OyjDw/UGsmzsDn0qqztdQueiWn6ptbE
7v30sn9U4y+rNiouLewKakjcijczku4eK/1Q09jpuS2yGr4tV+3VNNqJei0feQ69KktRk5xX
vMK41dX/WaN4TeN6zDht0Aro8LMUOU36zz4qOlBrIiJOnGxNRtoiIY8848BhEp+JaXWQsHu1
roMD6VUbFTUL84ozRGxyjWn6s/A/izNE5G8BHlb8sBAf3b76Vc/hjxWv96NOh6mqIOfPgjx3
sPw5KsIo9HBVuBevx6X+x8BlnJ4i6uLuxOej6Aa1B6jCvTxcrKZ6Pd0ERmBPo568X5U59Kos
xZkFsseaNKdM9FSmMncZne3eiiu3XaVd81HRwVqTnSgkTvZ6RtoiHNbGBvyKABA8nFb9x1sV
Hxti1irL1OriLal0bPfmwqqWex5pbAZNcWnHczvL1Gq1Wl26TsJ3HcdsFzXH2p/dWlb2+8y4
fx3Zlpf/5cSf7VCV7UyfrivdrbnsJCLLqeLd/wx/+b0ydVmx4uWI7uWjwD2T9tNPGzmi5ySz
+hy2nS3ag583cp58bvFjvT5xXtbsPtTxwvvuOPU8bbuo+Zv12R2qsp2ZcU2Ht2364Ev2yh1l
qp2ZkbqSYo3BRuS0aPfvPvWDl3eo1OoiRVpE1/Ig4eg0W4grEET0usRkhYSGkc1wrT1C+vb+
PBmXGFlesVqt7Oqh2tlY1/bEhkJ18UYZaUt2HzU4iZzNh98vONS2VFFcpi7buW5a/e6dn+jd
k//bTbXn2PKCMvW+XtdVvqJ6sfpv7T/ZUabamTmn6ciOTflV7J+9V1b2+8zpp93bojZt8b5T
4T/bUaZWF29Ji+heHlCMNH9/noxLXFnefvW+fGmkHxXQZdBSZDMc/oPiUEeyokitVinXCep2
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
0uNSw2lqUBcWHGm0e+Z2oGifWfDzJ9sOH220d2+3w0v22J5Nv+41zOr4altu6Y2U3G0Z8Tzn
9apt+aX089yE09s+PENEGkWWhpjeD6g9r0eJk5hTmEkla5X17ieONkPFu5vKKe29zalCrqvs
lYa/WbiO/xdXeL0VQnb//Z1JROQw/OOTXSV/qTX2KipOk/6zj4oO9HmK0i9Xo+fSzWmoOVjr
EGVKZuFyqj++ZP0OietPRpy0kFujuXz9ppP4rJaTqo+bYlLXJRuKyw0BzWIwcV7WlFTTsuWJ
J47WuxfxRBl5IvefM2KFPGrs6Lhzn/i+0o9jplpVyaWYtMzkq5+Ue4SDLVpd4I7gxFmxj7Hp
+7aOu4HJYTBCTRyMl1rmMJ38uKRpdtq6JVeLy/2oerYrJ7/W09M5y2N4RBT5779I/XpThU5v
Sei6zxwPWHzJmq6zQaQ4+SnuierL1287KexWg05vn5n204UMi4iRZMjrtMqvT17591Rh38af
cSlcsn5L10l0fvLC8BOa69dv3iM+lwinAE82w9HKWnoyc/FjLCJnyz8+qb4tSt8gd3WY4wkl
EiKyGfypic7LRw9qSZS+eBZKIAT/TJnWhv1bd35JLyiKy9TFm5Laa441W636j7cqPjbErFWW
qdXFW1Lp2O7NhVUt94iIyHZRc6z92a1lZb/PjPvXkW15+V9O/NkOVdnO9Om60t2ay073ei9q
Pr3+xIZCddnOHIn5SMHBUxanzzww0vz9eTIucWV5+9XqfRkitrP58PsFh9qWKorL1GU7102r
373zE721/xo6G+vanthQqC77feb0hgPbXVsx6/d/oCg1xOQqy9RlxYoXqHrP5p1ftfjePhER
2U21/2xP2lSs/lOejFVbUqwx2IjM+vI9u6s5qYoiddmOrIhrOpN98JCadN+0J71bvL847ydU
W7pbc9nJj5WIecbjp1Nybg4AACAASURBVK84iYicV04fN/LEkh+xBoqzf/pviwTS/D15MsYj
mm3a4n2nwn+2o0ytLt6SFnG6ZPdRg7N7r8+x5QVl6n35P5d6y2Ssx+20Wb//g21fclIVRWp1
0btJ7X89dtkxSLSNtd9Yk94tUhdvlJG2ZPdRg7N/9shp+Ox9xeG25HeK1eoyZea0uuKd5fq7
kUuz0p9s05SW62+1fFVW2jgnPSsl/idv78+TcYmR5RWr1cpe/eedlzW7D3W88H6ZWq1Wq0vX
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
AIDn/X99rZPS8dvBaQAAAABJRU5ErkJggg==
</d>
<d name="cf581bf4-8696-11e5-971a-9707ab5a12c2" mime-type="image/png" base64="yes">
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
7MVsxfm7qyOXvO/OR4RdjF2YCLuw9hFC4Dr2gvS4N8y/XZYQccVLtuKc1L+k5ZZJ440r0SH6
xu8qx8m81a+n7ChrDC0vGjbFvXYkJMSau7tMHRQ5e0zVP7JyLergmUvjo/yPpsclZteJiFof
Pmdh3N3DFF67rqHSBoyfMGLzNydtcuHH7rQ3TZxgXPdNuU0CGk9jOiy7Vr+6eoelQWRMbMp8
w8Y/vmY2hlTs3W3RBEU+MKZqS1ZuWeOZJ//i95taRQzhsU/FRfi6aL06zXpw82aZ+tx9o/V9
RUQ/etq9oVve2bWu/o3sf9WJJMZlB8W++aCI/cjmFU8n7i5rPsFmM+ekJ6ftsDRvPz4H0+Ne
O2QMOFX47YjmA4h6S96aV1O2WkQkKDblRcPGuD+bQ0ZW5H5lUQdFzr6t6h+f5Vo0QTOfXRQ1
tDh9cWK2RUREPyF2YUxEN9yYGnvTQw8ZP8rIrhNJjNsauSR1pnZLq/3IXpDe5sqO1F7ofeqg
6YvmR4/Wi2WvadWqjYV1+vEhPnYxNs4gsey3KfMNG//YdCquxVnttja/rrh2d8061ZXsBelt
fqUEaG3mf6UmZ+RaGtRBDyya/6vmQ4rPChsM48N1drlJGpq+0140bGo+tdnyYmPbbe701XdY
D/x7s0x87ldj9SoR0Y/+5b2hm0z5347M/3NKdlNXmhlrFLt504r413ZfrJj10q4UVP7+4teO
+AQUF347Irb58e62gvTFbX/ol3fGQacv25xsBemLE833pyTcWX7hzG5335yaNe3Fljx44u3E
bItI4iNbI5ek/Kzsvdb63SXvarl7Cq/NWnKxVReN2NfUbaXp9Nyd5y7rkt1gzTupU/3ugosN
07iHmmLLivvzEePg4sLvR8S+uujmg40dUERExsSmzLt5X2bLTas7tosTd2HNLt+c7h5W/P7F
wst+LRveabE5XWzG5u+xvi5pmEbd8BNDz7Y/Lf6R6Ojo6MfSCxpaTq8rTHs6Ojo6Ojo+veD7
gqxVGZWTElMzM5MfUm/637W7K5tKnT7w5Q59bMr7JtOapssmDaWVxifeTY4NOpydud/4+9TV
S6aeWfd5gdUjOGaNyWQymd59ckT+59uKzym+pl3CYSveveOwbphvi6MU25HtO8z6YUOaJ9lP
79u2w2dOislkMj0foVeLSMNhm/H3KcmxIw9nf7Z/2BOpqYunVmz6/EBVc6tkvht/U/4H/y62
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
AAAAAElFTkSuQmCC
</d>
<d name="ddc22218-86ad-11e5-9dc9-9707ab5a12c2" mime-type="image/png" base64="yes">
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
</d>
</data>
</abiword>
